<?xml version="1.0" encoding="ISO-8859-1" ?>
<classentry id="gtk.gtkobject">
 <classmeta>
  <classtitle>GtkObject</classtitle>
  <classparent></classparent>
  <shortdesc>Objet de base de la hiérarchie PHP-GTK.</shortdesc>
  <desc>
   <para>
    <classname>GtkObject</classname> est la classe de base de la hiérarchie 
    objet de PHP-GTK. Il implémente les fonctionnalités de chaque objet 
    possédé. Cet objet ne peut être implémenté depuis PHP-GTK mais il est 
    documenté pour accéder aux méthodes référencées dans les objets qui héritent
    de cet objet.
   </para>
  </desc>
 </classmeta>

 <methods>

  <method id="gtk.gtkobject.method.flags">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>flags</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retourne le flag courant.
   </shortdesc>
   <desc>
    <para>
     Cette méthode renvoie le flag de l'objet, qui est défini dans la liste
     <enumname>GtkObjectFlags</enumname>. La valeur renvoyée peut être 
     utilisée pour avoir des informations sur l'état actuel de l'objet.
    </para>
    <simpara>
     Voir aussi: <function>set_flags</function>, <function>unset_flags</function>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.set_flags">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_flags</function></funcdef>
     <paramdef>int <parameter>flags</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Definit le flag de l'objet.
   </shortdesc>
   <desc>
    <simpara>
     Cette méthode permet de définir le flag de l'objet parmi la liste  
     <enumname>GtkObjectFlags</enumname>. Le flag peut être définit pour
     montrer l'état actuel de l'objet.
    </simpara>
    <simpara>
     Voir aussi: <function>flags</function>, <function>unset_flags</function>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.unset_flags">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>unset_flags</function></funcdef>
     <paramdef>int <parameter>flags</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Annule le flag de l'objet.
   </shortdesc>
   <desc>
    <para>
     Cette méthode permet d'annuler les flags, qui sont disponibles dans la 
     liste <enumname>GtkObjectFlags</enumname>. Ce flag peut etre modifié
     pour montrer l'état actuel de l'objet.
    </para>
    <simpara>
     Voir aussi: <function>flags</function>, <function>set_flags</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.default_construct">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>default_construct</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Constructeur de l'objet par défaut
   </shortdesc>
   <desc>
    <simpara>
     Ce constructeur est appelé quand le flag <optionname>GTK_ARG_CONSTRUCT
     </optionname> est positionné parmi la liste <enumname>GtkArgFlags
     </enumname>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.constructed">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>constructed</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Marque l'objet comme déjà construit.
   </shortdesc>
   <desc>
    <simpara>
     Cette méthode permet d'avoir un controle sur la procédure de construction.
     Lorsque l'objet est construit, Cela permet de stopper tout appel
     à un autre constructeur.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.sink">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>sink</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Décrémente la référence initiale par 1.
   </shortdesc>
   <desc>
    <simpara>
     Cette méthode permet de décrementer les références de l'objet par 1,
     cela se produit uniquement lors du premier appel de la fonction sink.
    </simpara>
    <simpara>
     Cette méthode peut être utilisée lors de la création d'un objet 
     flottant. Quand l'objet est attaché à un parent il est 
     <function>sunk</function>, mais, l'objet parent possède une
     référence vers l'objet donc le nombre des références est 
     <literal>1</literal>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.ref">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>ref</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Augmente le nombre des références sur l'objet.
   </shortdesc>
   <desc>
    <simpara>
     Augmente le nombre des références sur l'objet.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.unref">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>unref</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Diminue le nombre des références sur l'objet.
   </shortdesc>
   <desc>
    <simpara>
     Diminue le nombre des références sur l'objet.
    </simpara>
    <note>
     <simpara>
      Si vous diminuer le nombre des réferences jusqu'à 
      <literal>0</literal> alors l'objet sera détruit.
     </simpara>
    </note>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.destroy">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>destroy</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Appelle la fonction de desctruction de l'objet.
   </shortdesc>
   <desc>
    <simpara>
     Cette méthode appelle la fonction de destruction de l'objet.
     La mémoire allouée par l'objet ne sera pas libérée tant que 
     le compteur de référence de l'objet ne sera pas égal à 
     <literal>0</literal>.
    </simpara>
    <simpara>
     Voir aussi: <function>unref</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.get_arg">
   <funcsynopsis>
    <funcprototype>
     <funcdef>XXX <function>get_arg</function></funcdef>
     <paramdef>XXX</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkobject.method.set_arg">
   <funcsynopsis>
    <funcprototype>
     <funcdef>XXX <function>set_arg</function></funcdef>
     <paramdef>XXX</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkobject.method.set_data">
   <funcsynopsis>
    <funcprototype>
     <funcdef>XXX <function>set_data</function></funcdef>
     <paramdef>XXX</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>
  
  <method id="gtk.gtkobject.method.remove_data">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_data</function></funcdef>
     <paramdef>string <parameter>key</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Supprime les données relatives associées à la clé.
   </shortdesc>
   <desc>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.get_data">
   <funcsynopsis>
    <funcprototype>
     <funcdef>XXX <function>get_data</function></funcdef>
     <paramdef>XXX</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>
  

  <method id="gtk.gtkobject.method.remove_no_notify">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_no_notify</function></funcdef>
     <paramdef>string <parameter>key</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Supprime les données associées à la clé mais sans appeler la fonction 
    de destruction.
   </shortdesc>
   <desc>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.emit_stop">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>emit_stop</function></funcdef>
     <paramdef>int <parameter>signal_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.emit_stop_by_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>emit_stop_by_name</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.connect">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>connect</function></funcdef>
     <paramdef>string <parameter>signal</parameter></paramdef>
     <paramdef>string <parameter>function</parameter></paramdef>
     <paramdef>void 
      <optional><parameter>custom</parameter></optional>
     </paramdef>     
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Connecte un signal et un rappel
   </shortdesc>
   <desc>
    <simpara>
     Cette méthode permet de connecter une fonction à un signal et la 
     fonction sera appelée lors de l'émission du signal sur le widget.
    </simpara>
    <simpara>
     La fonction prend deux ou trois arguments. Le premier paramêtre,
     <parameter>signal</parameter>, est la chaîne de caractère du nom du
     signal, le deuxième, <parameter>function</parameter>, est le nom de la 
     fonction qui sera utilisée comme rappel.  Le troisième,
     <parameter>custom</parameter>, est facultatif et peut être utilisé 
     pour passer des paramètres supplémentaires au rappel. Reportez au Guide 
     l'utilisateur pour plus d'informations.
    </simpara>
    <simpara>
     See Also: <function class="GtkObject">connect_after</function>,
     <function class="GtkObject">connect_object</function>, 
     <function class="GtkObject">connect_object_after</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.connect_after">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>connect_after</function></funcdef>
     <paramdef>string <parameter>signal</parameter></paramdef>
     <paramdef>string <parameter>function</parameter></paramdef>
     <paramdef>void 
      <optional><parameter>custom</parameter></optional>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Connecte un signal et un rappel mais la fonction ne sera appellé 
    qu'aprés les autres.
   </shortdesc>
   <desc>
    <simpara>
     Cette méthode permet de connecter une fonction à un signal et la 
     fonction sera appelée lors de l'émission du signal sur le widget.
     Le rappel sera appelé seulement après les autres.
    </simpara>
    <simpara>
     La fonction prend deux ou trois arguments. Le premier paramêtre,
     <parameter>signal</parameter>, est la chaîne de caractère du nom du
     signal, le deuxième, <parameter>function</parameter>, est le nom de la 
     fonction qui sera utilisée comme rappel.  Le troisième,
     <parameter>custom</parameter>, est facultatif and peut être utilisé 
     passer des paramètres supplémentaires au rappel. Reportez au Guide 
     l'utilisateur pour plus d'informations.
    </simpara>
    <simpara>
     See Also: <function class="GtkObject">connect</function>,
     <function class="GtkObject">connect_object</function>, 
     <function class="GtkObject">connect_object_after</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.connect_object">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>connect_object</function></funcdef>
     <paramdef>string <parameter>signal</parameter></paramdef>
     <paramdef>string <parameter>function</parameter></paramdef>
     <paramdef>Object <parameter>param</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Passe un objet différent au rappel.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkObject">connect_object</function> permet de passer
     comme argument un objet autre que celui qui a émis le signal au 
     rappel.
    </simpara>
    <simpara>
     Le paramêtre <parameter>signal</parameter> est le nom du signal auquel
     on doit connecter la <parameter>function</parameter>, dont le nom se 
     trouve en deuxième paramêtre et le paramêtre <parameter>param</parameter>
     est l'objet que nous passons en argument du rappel.
    </simpara>
    <simpara>
     La fonction retourne le signal_id.
    </simpara>
    <simpara>
     See Also: <function class="GtkObject">connect</function>, 
     <function class="GtkObject">connect_after</function>,
     <function class="GtkObject">connect_object_after</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.connect_object_after">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>connect_object_after</function></funcdef>
     <paramdef>string <parameter>signal</parameter></paramdef>
     <paramdef>string <parameter>function</parameter></paramdef>
     <paramdef>Object <parameter>param</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Passe un objet différent au rappel et exécute la fonction après
    les autres.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkObject">connect_object_after</function> permet de
     passer un autre objet au rappel que celui qui a émis le signal. 
     En utilisant <function class="GtkObject">connect_object_after</function>
     les autres handlers et le handler par défaut seront appelés en premier.
    </simpara>
    <simpara>
     La fonction prend deux ou trois arguments. Le premier paramêtre,
     <parameter>signal</parameter>, est la chaîne de caractère du nom du
     signal, le deuxième, <parameter>function</parameter>, est le nom de la 
     fonction qui sera utilisée comme rappel.  Le troisième,
     <parameter>param</parameter> est l'objet que l'on va passer en 
     paramêtre.
     </simpara>
    <simpara>
     La fonction renvoie le signal_id.
    </simpara>
    <simpara>
     See Also: <function class="GtkObject">connect</function>, 
     <function class="GtkObject">connect_after</function>,
     <function class="GtkObject">connect_object</function>
    </simpara>
   </desc>
  </method>
  
  <method id="gtk.gtkobject.method.disconnect">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>disconnect</function></funcdef>
     <paramdef>int <parameter>handler_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.signal_handler_block">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>signal_handler_block</function></funcdef>
     <paramdef>int <parameter>handler_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.signal_handler_unblock">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>signal_handler_unblock</function></funcdef>
     <paramdef>int <parameter>handler_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.signal_handler_pending">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>signal_handler_pending</function></funcdef>
     <paramdef>int <parameter>signal_id</parameter></paramdef>
     <paramdef>bool <parameter>may_be_blocked</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.signal_handler_pending_by_id">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>signal_handler_pending_by_id</function></funcdef>
     <paramdef>int <parameter>handler_id</parameter></paramdef>
     <paramdef>bool <parameter>may_be_blocked</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>
   </desc>
  </method>

  <method id="gtk.gtkobject.method.emit">
   <funcsynopsis>
    <funcprototype>
     <funcdef>XXX <function>emit</function></funcdef>
     <paramdef>XXX</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>
  
  <method id="gtk.gtkobject.method.signal_handlers_destroy">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>signal_handlers_destroy</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>
   </desc>
  </method>

 </methods>

</classentry>
<!--
 * Local variables:
 * tab-width: 1
 * c-basic-offset: 1
 * End:
 * vim600: et sw=1 ts=1 tw=78 fdm=marker
 * vim<600: et sw=1 ts=1 tw=78
-->
