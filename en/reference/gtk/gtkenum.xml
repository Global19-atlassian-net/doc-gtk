<?xml version="1.0" encoding="ISO-8859-1" ?>
<enum id="gtk.enum.gtkaccelflags">
 <enumname>GtkAccelFlags</enumname>

 <enumoption>
  <optionname>GTK_ACCEL_VISIBLE</optionname>
  <shortdesc>
   Denotes that the accelerator key along with any associated modifiers 
   should be displayed to the right of any text in a 
   <classname>GtkAccelLabel</classname>.  Note that this will always be
   displayed as upper case, whereas a lower case key value is actually
   being returned.  Use a shift modifier if this is likely to cause a
   problem for your users.  (See also: <enumname>GdkModifierTypes</enumname>.)
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_ACCEL_SIGNAL_VISIBLE</optionname>
  <shortdesc>
   This flag does not work, and has been eliminated completely in later
   versions of GTK+.  Use <literal>GTK_ACCEL_MASK</literal> to achieve
   the desired effect.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_ACCEL_LOCKED</optionname>
  <shortdesc>
   Denotes that the accelerator entry is locked.  However, this does not seem
   to work everywhere in the current version of GTK+.  Call the GtkWidget
   method <function class="GtkWidget">lock_accelerators()</function> on the
   target widget - usually a <classname>GtkMenuItem</classname> - in order
   to ensure accelerator entry locking.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_ACCEL_MASK</optionname>
  <shortdesc>
   Returns full information for a GtkAccelGroupEntry (the individual element
   in a <classname>GtkAccelGroup</classname> array), displaying any
   modifiers,  the accelerator key and the name of the associated signal to
   the right of any existing <classname>GtkAccelLabel</classname> text.
  </shortdesc>
 </enumoption>
</enum>

<enum id="gtk.enum.gtkarrowtype">
 <enumname>GtkArrowType</enumname>

 <enumoption>
  <optionname>GTK_ARROW_UP</optionname>
  <shortdesc>
   The arrow points up.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_ARROW_DOWN</optionname>
  <shortdesc>
   The arrow points down.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_ARROW_LEFT</optionname>
  <shortdesc>
   The arrow points to the left.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_ARROW_RIGHT</optionname>
  <shortdesc>
   The arrow points to the right.
  </shortdesc>
 </enumoption>
</enum>

<enum id="gtk.enum.gtkbuttonaction">
 <enumname>GtkButtonAction</enumname>

 <enumoption>
  <optionname>GTK_BUTTON_IGNORED</optionname>
  <shortdesc>
   Denotes that an instance of <classname>GtkCList</classname> will ignore
   mouse button events.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_BUTTON_SELECTS</optionname>
  <shortdesc>
   Denotes that an instance of <classname>GtkCList</classname> will react to
   select mouse events.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_BUTTON_DRAGS</optionname>
  <shortdesc>
   Denotes that an instance of <classname>GtkCList</classname> will react to 
   drag mouse button events.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_BUTTON_EXPANDS</optionname>
  <shortdesc>
   Denotes that an instance of <classname>GtkCList</classname> will react to
   expand mouse button events.
  </shortdesc>
 </enumoption>
</enum>

<enum id="gtk.enum.gtkbuttonboxstyle">
 <enumname>GtkButtonBoxStyle</enumname>

 <enumoption>
  <optionname>GTK_BUTTONBOX_DEFAULT_STYLE</optionname>
  <shortdesc>
   The current default style for button arrangement, which can be reset.  The
   default setting is <optionname>GTK_BUTTONBOX_EDGE</optionname>.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_BUTTONBOX_SPREAD</optionname>
  <shortdesc>
   Specifies that the buttons should be spaced evenly across the area of the
   buttonbox, with a full-sized space at either edge of the column or row.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_BUTTONBOX_EDGE</optionname>
  <shortdesc>
   Specifies that the buttons should be spaced evenly across the area of the
   buttonbox, with no space at either edge of the column or row.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_BUTTONBOX_START</optionname>
  <shortdesc>
   Specifies that the buttons should be packed from the top or left edge of
   the buttonbox, and spaced according to their spacing and internal
   padding settings.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_BUTTONBOX_END</optionname>
  <shortdesc>
   Specifies that the buttons should be packed from the bottom or right edge
   of the buttonbox, and spaced according to their spacing and internal
   padding settings.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkcalendardisplayoptions">
 <enumname>GtkCalendarDisplayOptions</enumname>

 <enumoption>
  <optionname>GTK_CALENDAR_SHOW_HEADING</optionname>
  <shortdesc>
   Specifies that the month and year should be displayed.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CALENDAR_SHOW_DAY_NAMES</optionname>
  <shortdesc>
   Specifies that three letter day descriptions should be present.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CALENDAR_NO_MONTH_CHANGE</optionname>
  <shortdesc>
   Prevents the user from switching months with the calendar.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CALENDAR_SHOW_WEEK_NUMBERS</optionname>
  <shortdesc>
   Displays each week numbers of the current year, down the left side of the 
calendar
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CALENDAR_WEEK_START_MONDAY</optionname>
  <shortdesc>
   Starts the calendar week on Monday, instead of the default Sunday
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkcelltype">
 <enumname>GtkCellType</enumname>

 <enumoption>
  <optionname>GTK_CELL_EMPTY</optionname>
  <shortdesc>
   Denotes that a cell of an instance of 
   <classname>GtkCList</classname> should not contain anything.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CELL_TEXT</optionname>
  <shortdesc>
   Denotes a cell of an instance of <classname>GtkCList</classname> should
   contain text.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CELL_PIXMAP</optionname>
  <shortdesc>
   Denotes a cell of an instance of <classname>GtkCList</classname> should
   contain a pixel map.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_CELL_PIXTEXT</optionname>
  <shortdesc>
   Denotes a cell of an instance of <classname>GtkCList</classname> should
   contain text and a pixelmap.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_CELL_WIDGET</optionname>
  <shortdesc>
   Support for a <classname>GtkClist</classname> containing a widget has not
   been completed in GTK+, therefore it is not currently available in PHP-GTK
   itself.
  </shortdesc>
 </enumoption> 
</enum>

<enum id="gtk.enum.gtkctreeexpanderstyle">
 <enumname>GtkCTreeExpanderStyle</enumname>

 <enumoption>
  <optionname>GTK_CTREE_EXPANDER_NONE</optionname>
  <shortdesc>
   Denotes that this instance of the <classname>GtkCTree</classname> should
   have no visible expanders.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CTREE_EXPANDER_SQUARE</optionname>
  <shortdesc>
   Denotes that this instance of the <classname>GtkCTree</classname> should
   have square expanders.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CTREE_EXPANDER_TRIANGLE</optionname>
  <shortdesc>
   Denotes that this instance of the <classname>GtkCTree</classname> should
   have triangular expanders.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CTREE_EXPANDER_CIRCULAR</optionname>
  <shortdesc>
   Denotes that this instance of the <classname>GtkCTree</classname> should
   have circular expanders.
  </shortdesc>
 </enumoption>
</enum>

<enum id="gtk.enum.gtkctreeexpansiontype">
 <enumname>GtkCTreeExpansionType</enumname>

 <enumoption>
  <optionname>GTK_CTREE_EXPANSION_EXPAND</optionname>
  <shortdesc>
   Tells PHP-GTK to expand the current node of this instance of
   <classname>GtkCTree</classname>.
  </shortdesc>
 </enumoption>

  <enumoption>
  <optionname>GTK_CTREE_EXPANSION_EXPAND_RECURSIVE</optionname>
  <shortdesc>
   Tells PHP-GTK to expand the current node, and all nodes below it in 
   this instance of the <classname>GtkCTree</classname> class.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_CTREE_EXPANSION_COLLAPSE</optionname>
  <shortdesc>
   Tells PHP-GTK to collapse the current node of this instance of
   <classname>GtkCTree</classname>.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_CTREE_EXPANSION_COLLAPSE_RECURSIVE</optionname>
  <shortdesc>
   Tells PHP-GTK to collapse the current node, and all nodes below it in
   this instance of the <classname>GtkCTree</classname> class.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_CTREE_EXPANSION_TOGGLE</optionname>
  <shortdesc>
   Tells PHP-GTK to toggle the current node of this instance of
   <classname>GtkCTree</classname>, this will cause an expanded node
   to collapse and a collapsed node to expand.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CTREE_EXPANSION_TOGGLE_RECURSIVE</optionname>
  <shortdesc>
   Tells PHP-GTK to toggle the current node, and all nodes below it in
   this instance of the <classname>GtkCTree</classname> class, this will
   cause an expanded node to collapse and a collapsed node to expand.
  </shortdesc>
 </enumoption>
</enum>

<enum id="gtk.enum.gtkctreelinestyle">
 <enumname>GtkCTreeLineStyle</enumname>

 <enumoption>
  <optionname>GTK_CTREE_LINES_NONE</optionname>
  <shortdesc>
   Denotes there should be no lines between the nodes on this instance of
   <classname>GtkCTree</classname>.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CTREE_LINES_SOLID</optionname>
  <shortdesc>
   Denotes that the lines between the nodes in this instance of
   <classname>GtkCTree</classname> should be solid.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CTREE_LINES_DOTTED</optionname>
  <shortdesc>
   Denotes that the lines between the nodes in this instance of
   <classname>GtkCTree</classname> should be dotted lines.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CTREE_LINES_TABBED</optionname>
  <shortdesc>
   Denotes that the lines between the nodes in this instance of
   <classname>GtkCTree</classname> should be tabs rather than lines.
  </shortdesc>
 </enumoption>
 
</enum>

<enum id="gtk.enum.gtkctreepos">
 <enumname>GtkCTreePos</enumname>

 <enumoption>
  <optionname>GTK_CTREE_POS_BEFORE</optionname>
  <shortdesc>
   Specifies the new <classname>GtkCTree</classname> node to be placed as a
   sibling of the specified node, just before it.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_CTREE_POS_AS_CHILD</optionname>
  <shortdesc>
   Specifies the new <classname>GtkCTree</classname> node to be placed as a
   child of the specified node.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_CTREE_POS_AFTER</optionname>
  <shortdesc>
   Specifies the new <classname>GtkCTree</classname> node to be placed as a
   sibling of the specified node, just after it.
  </shortdesc>
 </enumoption>
 
</enum>

<enum id="gtk.enum.gtkdirectiontype">
 <enumname>GtkDirectionType</enumname>

 <enumoption>
  <optionname>GTK_DIR_TAB_FORWARD</optionname>
  <shortdesc>
   Intended to tab forward through the children capable of having focus, 
   starting at the left or top.  This option appears not to work in the
   versions of GTK+ used in PHP-GTK, and has been completely rewritten for
   GTK 2.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_DIR_TAB_BACKWARD</optionname>
  <shortdesc>
   Intended to tab backward through the children with focus capability, 
   starting at the right or bottom.  This option appears not to work in the
   versions of GTK+ used in PHP-GTK, and has been completely rewritten for
   GTK 2.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GTK_DIR_UP</optionname>
  <shortdesc>
   Sets initial focus on the child nearest the bottom of the container.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_DIR_DOWN</optionname>
  <shortdesc>
   Sets initial focus on the child nearest the top of the container.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_DIR_LEFT</optionname>
  <shortdesc>
   Sets initial focus on the child nearest the right edge of the container.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_DIR_RIGHT</optionname>
  <shortdesc>
   Sets initial focus on the child nearest the left edge of the container.
  </shortdesc>
 </enumoption>
 
</enum>

<enum id="gtk.enum.gtkfontfiltertype">
 <enumname>GtkFontFilterType</enumname>

 <enumoption>
  <optionname>GTK_FONT_FILTER_BASE</optionname>
  <shortdesc>
   Tells PHP-GTK not to allow the user to change the filter via the Filters
   page of the <classname>GtkFontSelection</classname> class.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_FONT_FILTER_USER</optionname>
  <shortdesc>
   Tells PHP-GTK to allow the user to change the filter via the Filters
   page of the <classname>GtkFontSelection</classname> class.
  </shortdesc>
 </enumoption> 

</enum>

<enum id="gtk.enum.gtkfonttype">
 <enumname>GtkFontType</enumname>

 <enumoption>
  <optionname>GTK_FONT_BITMAP</optionname>
  <shortdesc>
   Instructs PHP-GTK to show bitmap fonts when calling
   <classname>GtkFontSelection</classname>::<function>set_filter</function> or
   
<classname>GtkFontSelectionDialog</classname>::<function>set_filter</function>
.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_FONT_SCALABLE</optionname>
  <shortdesc>
   Instructs PHP-GTK to show scaleable fonts when calling
   <classname>GtkFontSelection</classname>::<function>set_filter</function> or
   
<classname>GtkFontSelectionDialog</classname>::<function>set_filter</function>
.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_FONT_SCALABLE_BITMAP</optionname>
  <shortdesc>
   Instructs PHP-GTK to show scaleable bitmap fonts when calling
   <classname>GtkFontSelection</classname>::<function>set_filter</function> or
   
<classname>GtkFontSelectionDialog</classname>::<function>set_filter</function>
.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_FONT_ALL</optionname>
  <shortdesc>
   Instructs PHP-GTK to show any font that matches any of the above flags when
   calling
   <classname>GtkFontSelection</classname>::<function>set_filter</function> or
   
<classname>GtkFontSelectionDialog</classname>::<function>set_filter</function>
.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkjustification">
 <enumname>GtkJustification</enumname>

 <enumoption>
  <optionname>GTK_JUSTIFY_LEFT</optionname>
  <shortdesc>
   Left-justifies text within the containing area.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_JUSTIFY_RIGHT</optionname>
  <shortdesc>
   Right-justifies text within the containing area.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_JUSTIFY_CENTER</optionname>
  <shortdesc>
   Centers text within the containing area.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_JUSTIFY_FILL</optionname>
  <shortdesc>
   Justifies text from edge to edge of the containing area.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkobjectflags">
 <enumname>GtkObjectFlags</enumname>

 <enumoption>
  <optionname>GTK_DESTROYED</optionname>
  <shortdesc>
   The object has been destroyed and is processing any
   shutdown callbacks required.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_FLOATING</optionname>
  <shortdesc>
   The object is not contained within another object.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CONNECTED</optionname>
  <shortdesc>
   There are signals which are connected to this object.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CONSTRUCTED</optionname>
  <shortdesc>
   The object has undergone its construction process and is 
   ready to be used.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkorientation">
 <enumname>GtkOrientation</enumname>

 <enumoption>
  <optionname>GTK_ORIENTATION_HORIZONTAL</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_ORIENTATION_VERTICAL</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkpacktype">
 <enumname>GtkPackType</enumname>

 <enumoption>
  <optionname>GTK_PACK_START</optionname>
  <shortdesc>
   Specifies that the packing should be done from top or left of the
   container widget.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_PACK_END</optionname>
  <shortdesc>
   Specifies that the packing should be done from the bottom or right of the
   container widget.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkpositiontype">
 <enumname>GtkPositionType</enumname>

 <enumoption>
  <optionname>GTK_POS_LEFT</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_POS_RIGHT</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_POS_TOP</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_POS_BOTTOM</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkprogressbarorientation">
 <enumname>GtkProgressBarOrientation</enumname>

 <enumoption>
  <optionname>GTK_PROGRESS_LEFT_TO_RIGHT</optionname>
  <shortdesc>
   A horizontal progress bar growing from left to right.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_PROGRESS_RIGHT_TO_LEFT</optionname>
  <shortdesc>
   A horizontal progress bar growing from right to left.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_PROGRESS_BOTTOM_TO_TOP</optionname>
  <shortdesc>
   A vertical progress bar growing from bottom to top.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_PROGRESS_TOP_TO_BOTTOM</optionname>
  <shortdesc>
   A vertical progress bar growing from top to bottom.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkprogressbarstyle">
 <enumname>GtkProgressBarStyle</enumname>

 <enumoption>
  <optionname>GTK_PROGRESS_CONTINUOUS</optionname>
  <shortdesc>
   The progress bar grows in a smooth, continuous manner.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_PROGRESS_DISCRETE</optionname>
  <shortdesc>
   The progress bar grows in discrete, visible blocks.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkreliefstyle">
 <enumname>GtkReliefStyle</enumname>

 <enumoption>
  <optionname>GTK_RELIEF_NORMAL</optionname>
  <shortdesc>
   The default relief style for a button.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_RELIEF_HALF</optionname>
  <shortdesc>
   Sets the shadow around the button to 
   <optionname>GTK_SHADOW_OUT</optionname> until the button is pressed, 
   and <optionname>GTK_SHADOW_IN</optionname> when it is.  This is currently
   the normal relief style for a button.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_RELIEF_NONE</optionname>
  <shortdesc>
   Sets the shadow around the button to 
   <optionname>GTK_SHADOW_NONE</optionname> except when the cursor enters
   the area of the button, meaning that only the contents (e.g. the label) of
   the button show until that point.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkresizemode">
 <enumname>GtkResizeMode</enumname>

 <enumoption>
  <optionname>GTK_RESIZE_PARENT</optionname>
  <shortdesc>
   Default setting.  Effectively shares the behaviour described in
   <literal>GTK_RESIZE_QUEUE</literal>.  Only used when writing
   an original container widget.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_RESIZE_QUEUE</optionname>
  <shortdesc>
   Adds any resize requests from a container widget to a queue of resize
   requests marked <literal>GTK_RESIZE_PENDING</literal>.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_RESIZE_IMMEDIATE</optionname>
  <shortdesc>
   Immediately resets the private flags on a container to
   <literal>GTK_RESIZE_NEEDED</literal>, giving the request priority
   over any (standard) queued resize requests.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkshadowtype">
 <enumname>GtkShadowType</enumname>

 <enumoption>
  <optionname>GTK_SHADOW_NONE</optionname>
  <shortdesc>
   No shadow is displayed, resulting in a two-dimensional appearance.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_SHADOW_IN</optionname>
  <shortdesc>
   Displays dark shadow on left and upper sides of the widget, resulting
   in the appearance of the widget being lower than its surrounding area.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_SHADOW_OUT</optionname>
  <shortdesc>
   Displays dark shadow on right and lower sides of the widget, resulting
   in the illusion that the widget is raised above its surrounding area.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_SHADOW_ETCHED_IN</optionname>
  <shortdesc>
   Displays the appearance of sunken detail.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_SHADOW_ETCHED_OUT</optionname>
  <shortdesc>
   Displays the appearance of raised detail.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkspinbuttonupdatepolicy">
 <enumname>GtkSpinButtonUpdatePolicy</enumname>

 <enumoption>
  <optionname>GTK_UPDATE_ALWAYS</optionname>
  <shortdesc>
   Always updates the spinbutton value.  If an entry is invalid,
   the value is updated to the lower or upper bound as appropriate.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_UPDATE_IF_VALID</optionname>
  <shortdesc>
   Prevents the spinbutton's current value from being altered where
   an entry is invalid.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkspintype">
 <enumname>GtkSpinType</enumname>

 <enumoption>
  <optionname>GTK_SPIN_STEP_FORWARD</optionname>
  <shortdesc>
   Spins forward by the value set in the underlying 
   <literal>step_increment</literal>.  This value can be overridden
   by setting the <parameter>increment</parameter> parameter to a value
   above <literal>0.0</literal>.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_SPIN_STEP_BACKWARD</optionname>
  <shortdesc>
   Spins backward by the value set in the underlying 
   <literal>step_increment</literal>.  This value can be overridden
   by setting the <parameter>increment</parameter> parameter to a value
   above <literal>0.0</literal>.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_SPIN_PAGE_FORWARD</optionname>
  <shortdesc>
   Spins forward by the value set as <literal>page_increment</literal> 
   in the underlying <classname>GtkAdjustment</classname>.  The value
   set in the <parameter>increment</parameter> parameter is ignored.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_SPIN_PAGE_BACKWARD</optionname>
  <shortdesc>
   Spins backward by the value set as <literal>page_increment</literal> 
   in the underlying <classname>GtkAdjustment</classname>.  The value
   set in the <parameter>increment</parameter> parameter is ignored.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_SPIN_HOME</optionname>
  <shortdesc>
   Spins to value set as <literal>lower</literal> bound.  The value
   set in the <parameter>increment</parameter> parameter is ignored.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_SPIN_END</optionname>
  <shortdesc>
   Spins to value set as <literal>upper</literal> bound.  The value
   set in the <parameter>increment</parameter> parameter is ignored.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_SPIN_USER_DEFINED</optionname>
  <shortdesc>
   Used where the amount of spin is not defined anywhere in the
   underlying <classname>GtkAdjustment</classname>.  Negative or
   positive values set in the <parameter>increment</parameter> parameter
   are used to indicate the direction of the spin.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkstatetype">
 <enumname>GtkStateType</enumname>

 <enumoption>
  <optionname>GTK_STATE_NORMAL</optionname>
  <shortdesc>
   Default state.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_STATE_ACTIVE</optionname>
  <shortdesc>
   Denotes that the widget is currently active, e.g. that a button is in 
   the process of being clicked.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_STATE_PRELIGHT</optionname>
  <shortdesc>
   Denotes that the area of the widget has been entered by the cursor.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_STATE_SELECTED</optionname>
  <shortdesc>
   Denotes that the widget is currently selected.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_STATE_INSENSITIVE</optionname>
  <shortdesc>
   Denotes that the widget cannot react to user input.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkwidgetflags">
 <enumname>GtkWidgetFlags</enumname>

 <enumoption>
  <optionname>GTK_TOPLEVEL</optionname>
  <shortdesc>
   Marks a widget as toplevel.  This would generally be used internally
   by GTK.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_NO_WINDOW</optionname>
  <shortdesc>
   Marks a widget as having no GDK window.  This would generally be used
   internally by GTK, and indicates that the widget is unable to capture
   GDK events.  See also:  <classname>GtkEventBox</classname>.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_REALIZED</optionname>
  <shortdesc>
   Marks a widget as having been realized, that is, having its 
   <classname>GdkWindow</classname> instantiated.
  </shortdesc>
 </enumoption>


 <enumoption>
  <optionname>GTK_MAPPED</optionname>
  <shortdesc>
   Marks a widget as having been mapped to the screen.  In order to be
   mapped, a widget must have the <optionname>GTK_VISIBLE</optionname> 
   flag set.  See also: 
   <function classname="GtkWidget">realize()</function>, 
   <function classname="GtkWidget">map()</function>, 
   <function classname="GtkWidget">show()</function>.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_VISIBLE</optionname>
  <shortdesc>
   Marks a widget as visible.  This is necessary before the widget can
   be mapped onto the screen.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_SENSITIVE</optionname>
  <shortdesc>
   Marks a widget as able to react to user input.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_PARENT_SENSITIVE</optionname>
  <shortdesc>
   Marks the parent of a widget as able to react to user input.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CAN_FOCUS</optionname>
  <shortdesc>
   Marks a widget as able to have focus.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_HAS_FOCUS</optionname>
  <shortdesc>
   Gives a widget focus.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_CAN_DEFAULT</optionname>
  <shortdesc>
   Marks a widget as able to have default status.  This also has the effect
   of drawing the widget with enough space around it to display its default
   style.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_HAS_DEFAULT</optionname>
  <shortdesc>
   Gives a widget default status.  The widget will respond directly to
   keyboard events, and will be drawn in such a way as to make this
   apparent to the user.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_HAS_GRAB</optionname>
  <shortdesc>
   Mostly used internally, to ensure that the widget currently having focus
   is able to grab events relevant to it.  Note that flagging a widget in
   this way requires that the widget is also flagged as sensitive and has
   its reference count increased.  Flagging the widget does not in itself
   have any bearing on the widget's relationship with other widgets; if
   you want modality, use <classname>GtkWindow</classname>'s 
   <function class="GtkWindow">set_modal()</function> method or the static
   function <function>gtk::grab_add()</function> as appropriate.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_RC_STYLE</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_COMPOSITE_CHILD</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_NO_REPARENT</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_APP_PAINTABLE</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_RECEIVES_DEFAULT</optionname>
  <shortdesc>
   A widget flagged in this way will receive the default action and have
   <literal>GTK_HAS_DEFAULT</literal> set when it is focused, even if
   there is a different widget set as default.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkwindowposition">
 <enumname>GtkWindowPosition</enumname>

 <enumoption>
  <optionname>GTK_WIN_POS_NONE</optionname>
  <shortdesc>
   Default state.  This setting uses the default window gravity on the
   underlying windowing system to determine the position of the window. 
   This generally results in the window being mapped from the top left
   corner of the screen.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_WIN_POS_CENTER</optionname>
  <shortdesc>
   Places the window over the center of the screen.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_WIN_POS_MOUSE</optionname>
  <shortdesc>
   Draws the window at the point of the mouse cursor.  This is useful
   for popup menus or similar widgets initiated by a mouse-click.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_WIN_POS_CENTER_ALWAYS</optionname>
  <shortdesc>
   Places the window over the center of the screen and keeps those
   co-ordinates stored in memory, so that a redraw following a move
   elsewhere will reposition the window at the center.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gtk.enum.gtkwindowtype">
 <enumname>GtkWindowType</enumname>

 <enumoption>
  <optionname>GTK_WINDOW_TOPLEVEL</optionname>
  <shortdesc>
   The default window type, describing a toplevel window with a title bar,
   <literal>minimize</literal>, <literal>maximize</literal> and 
   <literal>close</literal> buttons.  Note that these window decorations
   are provided by the window manager and may vary in appearance or even
   not exist on some operating systems.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_WINDOW_DIALOG</optionname>
  <shortdesc>
   A window type that is intended for messages requiring a user response. 
   If a <literal>maximize</literal> button is displayed, it is greyed
   out and the maximize function disabled on a dialog window.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GTK_WINDOW_POPUP</optionname>
  <shortdesc>
   A window type with no window decorations or associated functions. 
   Do not use this to create popup menus; refer instead to the
   <function classname="GtkMenu">popup()</function> method in 
   <classname>GtkMenu</classname>, which provides its own internal
   popup window.
  </shortdesc>
 </enumoption>

</enum>

<!--
 * Local variables:
 * tab-width: 1
 * c-basic-offset: 1
 * End:
 * vim600: et sw=1 ts=1 tw=78 fdm=marker
 * vim<600: et sw=1 ts=1 tw=78
-->

