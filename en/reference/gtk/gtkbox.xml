<?xml version="1.0" encoding="ISO-8859-1" ?>
<classentry id="gtk.gtkbox">
 <classmeta>
  <classtitle>GtkBox</classtitle>
  <classparent>GtkContainer</classparent>
  <shortdesc>
   Base class for box containers.
  </shortdesc>
  <desc>
   <simpara>
    <classname>GtkBox</classname> is a base class providing box
    containers <classname>GtkHBox</classname> and 
    <classname>GtkVBox</classname> with properties and methods for
    packing any number of child widgets.
   </simpara>
   <simpara>
    Note that <classname>GtkBox</classname> is an abstract class
    and cannot be constructed directly.
   </simpara>
   <simpara>
    See also:  <classname>GtkBin</classname>, 
    <classname>GtkBoxChild</classname>, <classname>GtkContainer</classname>, 
    <classname>GtkTable</classname>.
   </simpara>
  </desc>
 </classmeta>

 <methods>

  <method id="gtk.gtkbox.method.pack_start">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pack_start</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>child</parameter>
     </paramdef>
     <paramdef>bool 
      <parameter><optional>expand = true</optional></parameter>
     </paramdef>
     <paramdef>bool 
      <parameter><optional>fill = true</optional></parameter>
     </paramdef>
     <paramdef>int 
      <parameter><optional>padding = 0</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Packs from top or left of box container.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkBox">pack_start()</function> packs the child
     widget from the top or left of the box container.  The
     <parameter>expand</parameter> parameter is a boolean value that
     determines whether the child can expand when the parent container
     is resized.  The second parameter <parameter>fill</parameter> is
     also a boolean value, and determines whether the child should fill
     the space available to it.  The third parameter 
     <parameter>padding</parameter> is an integer describing the padding
     around the child widget, in pixels.  The default values are 
     <literal>true</literal>, <literal>true</literal>, <literal>0</literal>.
    </simpara>
    <simpara>
     Calls to <function class="GtkBox">pack_start()</function> can be mixed
     with calls to <function class="GtkBox">pack_end()</function> or even
     <function class="GtkContainer">add()</function>, within the same box
     container.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.pack_end">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pack_end</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>child</parameter>
     </paramdef>
     <paramdef>bool 
      <parameter><optional>expand = true</optional></parameter>
     </paramdef>
     <paramdef>bool 
      <parameter><optional>fill = true</optional></parameter>
     </paramdef>
     <paramdef>int 
      <parameter><optional>padding = 0</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Packs from bottom or right of box container.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkBox">pack_end()</function> packs the child
     widget from the bottom or right of the box container.  The
     <parameter>expand</parameter> parameter is a boolean value that
     determines whether the child can expand when the parent container
     is resized.  The second parameter <parameter>fill</parameter> is
     also a boolean value, and determines whether the child should fill
     the space available to it.  The third parameter 
     <parameter>padding</parameter> is an integer descrbing the padding
     around the child widget, in pixels.  The default values are 
     <literal>true</literal>, <literal>true</literal>, <literal>0</literal>.
    </simpara>
    <simpara>
     <function class="GtkBox">pack_end()</function> calls may be interspersed
     with <function class="GtkBox">pack_start()</function> calls within the
     same box container widget.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.pack_start_defaults">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pack_start_defaults</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Packs from top or right using default settings.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkBox">pack_start_defaults()</function> packs
     the given child widget from the top or from the left of the box
     container using the default parameter values <literal>true</literal>, 
     <literal>true</literal>, <literal>0</literal>.
    </simpara>
    <para>
     The same result can be achieved by using
     <informalexample>
      <programlisting role="php">
$box-&gt;pack_start($child);
      </programlisting>
     </informalexample>
     without specifying any further parameters.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.pack_end_defaults">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pack_end_defaults</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Packs from bottom or left using default settings.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkBox">pack_end_defaults()</function> packs
     the given child widget from the bottom or from the right of the box
     container using the default parameter values <literal>true</literal>, 
     <literal>true</literal>, <literal>0</literal>.
    </simpara>
    <para>
     The same result can be achieved by using
     <informalexample>
      <programlisting role="php">
$box-&gt;pack_end($child);
      </programlisting>
     </informalexample>
     without specifying any further parameters.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.set_homogeneous">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_homogeneous</function></funcdef>
     <paramdef>bool <parameter>homogeneous</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Toggles equality of child sizing.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkBox">set_homogeneous()</function> sizes all
     the child widgets in the container to the dimensions of the largest
     child widget if set to <literal>true</literal>.  The default setting
     is <literal>false</literal>.
    </simpara>
    <simpara>
     Note that the <propname class="GtkBox">homogeneous</propname> property
     corresponding to this function refers to the child sizing in only one
     dimension, that is, the height in a row or the width in a column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.set_spacing">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_spacing</function></funcdef>
     <paramdef>int <parameter>spacing</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets spacing between children.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkBox">set_spacing()</function> is used to set the
     universal minimum spacing between the child widgets, in pixels.
    </simpara>
    <simpara>
     The default setting is <literal>0</literal>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.reorder_child">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>reorder_child</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>child</parameter>
     </paramdef>
     <paramdef>int <parameter>position</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets new position for child.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkBox">reorder_child()</function> moves the
     child's position in the <propname class="GtkBox">children</propname> 
     array to the position given as the second parameter.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.set_child_packing">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_child_packing</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>child</parameter>
     </paramdef>
     <paramdef>bool <parameter>expand</parameter></paramdef>
     <paramdef>bool <parameter>fill</parameter></paramdef>
     <paramdef>int <parameter>padding</parameter></paramdef>
     <paramdef>
      <enumname>GtkPackType</enumname> <parameter>pack_type</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets packing parameters for child.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkBox">set_child_packing()</function> sets the 
     <classname>GtkBoxChild</classname> parameters for the child widget.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.query_child_packing">
   <funcsynopsis>
    <funcprototype>
     <funcdef>array <function>query_child_packing</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>child</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Queries packing parameters for child.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkBox">query_child_packing</function> is a way to
     query the <classname>GtkBoxChild</classname> parameters 
     <parameter>expand</parameter>, <parameter>fill</parameter>, 
     <parameter>padding</parameter> and <parameter>pack_type</parameter> 
     for an individual child widget.
    </simpara>
   </desc>
  </method>

 </methods>

 <properties>

  <prop id="gtk.gtkbox.property.children" type="ro">
   <propname>children</propname>
   <proptype>array</proptype>
   <shortdesc>
    Array of child packing information.
   </shortdesc>
   <desc>
    <simpara>
     The packing information for the individual child widgets is stored in 
     <propname class="GtkBox">children</propname> as an array of 
     <classname>GtkBoxChild</classname> objects.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkbox.property.spacing" type="ro">
   <propname>spacing</propname>
   <proptype>int</proptype>
   <shortdesc>
    Universal spacing policy.
   </shortdesc>
   <desc>
    <simpara>
     The <propname class="GtkBox">spacing</propname> property represents
     the minimum amount of space between the child widgets, in pixels.  This
     setting is universal across the box container.
    </simpara>
    <simpara>
     To set the spacing for an individual child widget, use 
     <function class="GtkBox">pack_start()</function>, 
     <function class="GtkBox">pack_end()</function>, 
     <function class="GtkBox">set_child_packing()</function>, or the 
     <propname class="GtkBoxChild">padding</propname> property in 
     <classname>GtkBoxChild</classname>.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkbox.property.homogeneous" type="ro">
   <propname>homogeneous</propname>
   <proptype>bool</proptype>
   <shortdesc>
    Universal sizing policy.
   </shortdesc>
   <desc>
    <simpara>
     The <propname class="GtkBox">homogeneous</propname> property is a
     boolean value which, when set to <literal>true</literal>, will make
     all child widgets in the container the same size as the largest child.
    </simpara>
    <simpara>
     Use <function class="GtkBox">set_homogeneous()</function> to set
     the value.
    </simpara>
    <simpara>
     Note that the value of this property only affects one dimension, as
     the children will always fit the height of a row, or the width of a
     column, regardless of settings.
    </simpara>
   </desc>
  </prop>

 </properties>

</classentry>