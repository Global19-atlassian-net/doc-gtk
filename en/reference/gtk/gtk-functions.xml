<?xml version="1.0" encoding="ISO-8859-1" ?>
<refentry id="gtk.functions">
 <refmeta>
  <refentrytitle>Misc GTK Functions</refentrytitle>
  <shortdesc>
   Static methods in GTK.
  </shortdesc>
 </refmeta>

  <method id="gtk.method.accel_group_get_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkAccelGroup</classname> 
      <function>gtk::accel_group_get_default</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Gets the toplevel window's default <classname>GtkAccelGroup</classname>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.button_box_set_child_ipadding_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::button_box_set_child_ipadding_default</function>
     </funcdef>
     <paramdef>int <parameter>ipad_x</parameter></paramdef>
     <paramdef>int <parameter>ipad_y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets <classname>GtkButtonBox</classname> default child internal padding.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.button_box_set_child_size_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::button_box_set_child_size_default</function>
     </funcdef>
     <paramdef>int <parameter>min_width</parameter></paramdef>
     <paramdef>int <parameter>min_height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets <classname>GtkButtonBox</classname> default minimum child size.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.check_version">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>gtk::check_version</function></funcdef>
     <paramdef>int <parameter>required_major</parameter></paramdef>
     <paramdef>int <parameter>required_minor</parameter></paramdef>
     <paramdef>int <parameter>required_micro</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Checks which version of GTK+ is being used.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_finish">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::drag_finish</function></funcdef>
     <paramdef>
      <classname>GdkDragContext</classname> 
      <parameter>context</parameter>
     </paramdef>
     <paramdef>bool <parameter>success</parameter></paramdef>
     <paramdef>bool <parameter>del</parameter></paramdef>
     <paramdef>int <parameter>time</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_get_source_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkWidget</classname> 
      <function>gtk::drag_get_source_widget</function>
     </funcdef>
     <paramdef>
      <classname>GdkDragContext</classname> 
      <parameter>context</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_set_default_icon">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::drag_set_default_icon</function></funcdef>
     <paramdef>
      <classname>GdkColormap</classname> 
      <parameter>colormap</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkPixmap</classname> 
      <parameter>pixmap</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkBitmap</classname> 
      <parameter>mask</parameter>
     </paramdef>
     <paramdef>int <parameter>hot_x</parameter></paramdef>
     <paramdef>int <parameter>hot_y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_set_icon_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::drag_set_icon_default</function></funcdef>
     <paramdef>
      <classname>GdkDragContext</classname> 
      <parameter>context</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_set_icon_pixmap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::drag_set_icon_pixmap</function></funcdef>
     <paramdef>
      <classname>GdkDragContext</classname> 
      <parameter>context</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkColormap</classname> 
      <parameter>colormap</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkPixmap</classname> 
      <parameter>pixmap</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkBitmap</classname> 
      <parameter>mask</parameter>
     </paramdef>
     <paramdef>int <parameter>hot_x</parameter></paramdef>
     <paramdef>int <parameter>hot_y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_set_icon_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::drag_set_icon_widget</function></funcdef>
     <paramdef>
      <classname>GdkDragContext</classname> 
      <parameter>context</parameter>
     </paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>int <parameter>hot_x</parameter></paramdef>
     <paramdef>int <parameter>hot_y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_dest_handle_event">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::drag_dest_handle_event</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>toplevel</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkEvent</classname> 
      <parameter>event</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_source_handle_event">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::drag_source_handle_event</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkEvent</classname> 
      <parameter>event</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.draw_arrow">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_arrow</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
       <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkArrowType</enumname> 
      <parameter>arrow_type</parameter>
     </paramdef>
     <paramdef>bool <parameter>fill</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Draws an arrow.
   </shortdesc>
   <desc>
    <simpara>
     The chief advantage of drawing your own GTK arrow rather than using the 
     <classname>GtkArrow</classname> widget is that you can shape it, using
     the <parameter>width</parameter> and <parameter>height</parameter> 
     parameters.  The <parameter>fill</parameter> parameter refers to the
     color of the arrow, with <literal>false</literal> giving it the same
     color as the area it is drawn onto.  All positions and sizes are 
     absolute in terms of the underlying drawable.
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
gtk::draw_arrow($style, $gdkwindow, GTK_STATE_NORMAL, GTK_SHADOW_OUT, 
GTK_ARROW_RIGHT, false, $x, $y, $width, $height);
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

  <method id="gtk.method.draw_box">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_box</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Draws a box.
   </shortdesc>
   <desc>
    <simpara>
     This is the simplest way to draw a box, with or without a shadow. 
     Any coloring is completely dependant on the 
     <classname>GtkStyle</classname> that is passed as the first parameter. 
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
gtk::draw_box($style, $gdkwindow, GTK_STATE_ACTIVE, GTK_SHADOW_IN, $x, $y, 
$width, $height);
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

  <method id="gtk.method.draw_diamond">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_diamond</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.draw_hline">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_hline</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x1</parameter></paramdef>
     <paramdef>int <parameter>x2</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.draw_oval">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_oval</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Not implemented.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.draw_shadow">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_shadow</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.draw_string">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_string</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.draw_vline">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_vline</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>int <parameter>y1</parameter></paramdef>
     <paramdef>int <parameter>y2</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.entry_new_with_max_length">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkWidget</classname> 
      <function>gtk::entry_new_with_max_length</function>
     </funcdef>
     <paramdef>int <parameter>max</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Creates a limited-character <classname>GtkEntry</classname>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.events_pending">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::events_pending</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Tests whether there are <classname>GdkEvent</classname>s queueing.
   </shortdesc>
   <desc>
    <simpara>
     <function>gtk::events_pending()</function> is useful when there is
     a function that needs to be carried out during a long-running process, 
     for example, updating a status bar during an SQL query.
    </simpara>
    <para>
     The way it would be used in such a situation is to have
     <informalexample>
      <programlisting role="php">
while(gtk::events_pending()) gtk::main_iteration();
      </programlisting>
     </informalexample>
     after every update that is made to the GUI.  This causes the main loop
     to run once each time events are anticipated.
    </para>
    <simpara>
     See also:  <function>gtk::main_iteration()</function>, 
     <function>gtk::main_iteration_do()</function>, 
     <function>gtk::timeout_add()</function>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.method.false">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::false</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns false.
   </shortdesc>
   <desc>
    <simpara>
     A static function that simply returns false.  By default this is
     <literal>null</literal>; you can force a <literal>0</literal> return
     by declaring it as a PHP <literal>(int)</literal> type.
    </simpara>
   </desc>
  </method>

  <method id="gtk.method.hbutton_box_get_layout_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <enumname>GtkButtonBoxStyle</enumname> 
      <function>gtk::hbutton_box_get_layout_default</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns <classname>GtkHButtonBox</classname> layout default.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.hbutton_box_get_spacing_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int 
      <function>gtk::hbutton_box_get_spacing_default</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns <classname>GtkHButtonBox</classname> spacing default.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.grab_add">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::grab_add</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Endows a widget with keyboard grab.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.grab_get_current">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkWidget</classname> 
      <function>gtk::grab_get_current</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns widget that currently has keyboard grab.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.grab_remove">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::grab_remove</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Removes keyboard grab from a widget.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.hbutton_box_set_layout_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::hbutton_box_set_layout_default</function>
     </funcdef>
     <paramdef>
      <enumname>GtkButtonBoxStyle</enumname> 
      <parameter>layout</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets layout default for <classname>GtkHButtonBox</classname>es.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.hbutton_box_set_spacing_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::hbutton_box_set_spacing_default</function>
     </funcdef>
     <paramdef>int <parameter>spacing</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets spacing default for <classname>GtkHButtonBox</classname>es.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.idle_add">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::idle_add</function></funcdef>
     <paramdef>
      <literal>GtkFunction</literal> 
      <parameter>function</parameter>
     </paramdef>
     <paramdef>mixed 
      <parameter><optional>data</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.idle_remove">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::idle_remove</function></funcdef>
     <paramdef>int <parameter>idle_handler_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.input_add">
   <funcsynopsis>
    <funcprototype>
     <funcdef>XXX <function>gtk::input_add</function></funcdef>
     <paramdef>XXX</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.input_remove">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::input_remove</function></funcdef>
     <paramdef>int <parameter>input_handler_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.item_factories_path_delete">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::item_factories_path_delete</function>
     </funcdef>
     <paramdef>string <parameter>ifactory_path</parameter></paramdef>
     <paramdef>string <parameter>path</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.item_factory_from_path">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkItemFactory</classname> 
      <function>gtk::item_factory_from_path</function>
     </funcdef>
     <paramdef>string <parameter>path</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.item_factory_from_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkItemFactory</classname> 
      <function>gtk::item_factory_from_widget</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.item_factory_parse_rc">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::item_factory_parse_rc</function></funcdef>
     <paramdef>string <parameter>file_name</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.item_factory_parse_rc_string">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::item_factory_parse_rc_string</function>
     </funcdef>
     <paramdef>string <parameter>rc_string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.item_factory_path_from_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string 
      <function>gtk::item_factory_path_from_widget</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.main">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::main</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Runs the main loop.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.main_do_event">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::main_do_event</function></funcdef>
     <paramdef>
      <classname>GdkEvent</classname> 
      <parameter>event</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Processes a single <classname>GdkEvent</classname>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.main_iteration">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::main_iteration</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Runs the main loop once and then blocks GTK until an event is pending.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.main_iteration_do">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::main_iteration_do</function></funcdef>
     <paramdef>bool 
      <parameter><optional>blocking = TRUE</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Runs the main loop once, with optional blocking.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.main_level">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::main_level</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the main loop nesting level.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.main_quit">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::main_quit</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Quits the main loop.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_arrow">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_arrow</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>
      <enumname>GtkArrowType</enumname> 
      <parameter>arrow_type</parameter>
     </paramdef>
     <paramdef>bool <parameter>fill</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_box">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_box</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_box_gap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_box_gap</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
     <paramdef>
      <enumname>GtkPositionType</enumname> 
      <parameter>gap_side</parameter>
     </paramdef>
     <paramdef>int <parameter>gap_x</parameter></paramdef>
     <paramdef>int <parameter>gap_width</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_check">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_check</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_cross">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_cross</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_diamond">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_diamond</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_extension">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_extension</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
     <paramdef>
      <enumname>GtkPositionType</enumname> 
      <parameter>gap_side</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_flat_box">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_flat_box</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Paints a flat box.
   </shortdesc>
   <desc>
    <simpara>
     Regardless of the <enumname>GtkShadowType</enumname> detailed here, 
     the effect is similar to the box drawn using 
     <function>gtk::draw_box()</function> and 
     <literal>GTK_SHADOW_NONE</literal>.
    </simpara>
    <simpara>
     The <classname>GdkRectangle</classname> used should be in the same
     position and have the same dimensions as those passed in the function,
     as otherwise only the overlap between the two rectangles will be
     displayed, or nothing at all if there is no overlapping area. 
     The <parameter>detail</parameter> parameter actually does nothing here, 
     but is needed for back compatibility.  Passing it as 
     <literal>null</literal>, or as any string you feel, is okay.
    </simpara>
    <para>
$rectangle = &amp;new GdkRectangle($x, $y, $width, $height);
gtk::paint_flat_box($style, $gdkwindow, GTK_STATE_ACTIVE, GTK_SHADOW_NONE, 
$rectangle, $drawingarea, null, $x, $y, $width, $height);
    </para>
   </desc>
  </method>

  <method id="gtk.method.paint_focus">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_focus</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    A quick way to draw focus-like shadow around a given rectangle.
   </shortdesc>
   <desc>
    <simpara>
     <function>gtk::paint_focus()</function> is a convenience function
     that draws a dark shadow along the left and top sides of the given
     rectangle, making it appear as GTK widgets generally do when they
     have focus.
    </simpara>
    <simpara>
     This is the only function that uses the <parameter>detail</parameter> 
     parameter at all now; if you pass <literal>'set-mode'</literal> as
     that parameter, the shadow will appear as long dashes rather than as
     a continuous line.  Any other string is regarded the same as if it
     were <literal>null</literal>.
    </simpara>
    <simpara>
     The other parameters are on the whole self-explanatory.  The 
     <parameter>widget</parameter> parameter refers to the widget that is
     being drawn upon (usually a <classname>GtkDrawingArea</classname>).
    </simpara>
   </desc>
  </method>

  <method id="gtk.method.paint_handle">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_handle</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
     <paramdef>
      <enumname>GtkOrientation</enumname> 
      <parameter>orientation</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_hline">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_hline</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x1</parameter></paramdef>
     <paramdef>int <parameter>x2</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_option">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_option</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_oval">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_oval</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Not implemented.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_ramp">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_ramp</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>
      <enumname>GtkArrowType</enumname> 
      <parameter>arrow_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_shadow">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_shadow</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
      </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_shadow_gap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_shadow_gap</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
     <paramdef>
      <enumname>GtkPositionType</enumname> 
      <parameter>gap_side</parameter>
     </paramdef>
     <paramdef>int <parameter>gap_x</parameter></paramdef>
     <paramdef>int <parameter>gap_width</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_slider">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_slider</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
     <paramdef>
      <enumname>GtkOrientation</enumname> 
      <parameter>orientation</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_string">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_string</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_tab">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_tab</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_vline">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_vline</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>y1</parameter></paramdef>
     <paramdef>int <parameter>y2</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_get_cmap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GdkColormap</classname> 
      <function>gtk::preview_get_cmap</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_get_visual">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GdkVisual</classname> 
      <function>gtk::preview_get_visual</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_reset">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::preview_reset</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_set_color_cube">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::preview_set_color_cube</function></funcdef>
     <paramdef>int <parameter>nred_shades</parameter></paramdef>
     <paramdef>int <parameter>ngreen_shades</parameter></paramdef>
     <paramdef>int <parameter>nblue_shades</parameter></paramdef>
     <paramdef>int <parameter>ngray_shades</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_set_gamma">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::preview_set_gamma</function></funcdef>
     <paramdef>double <parameter>gamma</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_set_install_cmap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::preview_set_install_cmap</function></funcdef>
     <paramdef>int <parameter>install_cmap</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_set_reserved">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::preview_set_reserved</function></funcdef>
     <paramdef>int <parameter>nreserved</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.quit_add">
   <funcsynopsis>
    <funcprototype>
     <funcdef>XXX <function>gtk::quit_add</function></funcdef>
     <paramdef>XXX</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.quit_remove">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::quit_remove</function></funcdef>
     <paramdef>int <parameter>quit_handler_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_add_default_file">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::rc_add_default_file</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_find_module_in_path">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string 
      <function>gtk::rc_find_module_in_path</function>
     </funcdef>
     <paramdef>string <parameter>module_file</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_get_module_dir">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>gtk::rc_get_module_dir</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_get_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkStyle</classname> 
      <function>gtk::rc_get_style</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_get_theme_dir">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>gtk::rc_get_theme_dir</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_load_image">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GdkPixmap</classname> 
      <function>gtk::rc_load_image</function>
     </funcdef>
     <paramdef>
      <classname>GdkColormap</classname> 
      <parameter>colormap</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkColor</classname> 
      <parameter>transparent_color</parameter>
     </paramdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_parse">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::rc_parse</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Parses an application's rc file(s).
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_parse_string">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::rc_parse_string</function></funcdef>
     <paramdef>string <parameter>rc_string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_reparse_all">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>gtk::rc_reparse_all</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.timeout_add">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::timeout_add</function></funcdef>
     <paramdef>int <parameter>interval</parameter></paramdef>
     <paramdef>
      <literal>GtkFunction</literal> 
      <parameter>function</parameter>
     </paramdef>
     <paramdef>mixed 
      <parameter><optional>data</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets up a function to be called at regular intervals.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.timeout_remove">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::timeout_remove</function></funcdef>
     <paramdef>int <parameter>timeout_handler_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Removes timeout.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.true">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::true</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns true.
   </shortdesc>
   <desc>
    <simpara>
     This is a static function that simply returns <literal>1</literal>. 
     It has no other functionality.
    </simpara>
   </desc>
  </method>

  <method id="gtk.method.type_from_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::type_from_name</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns object type from object name.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.type_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>gtk::type_name</function></funcdef>
     <paramdef>int <parameter>type</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns name of object.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.vbutton_box_get_layout_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <enumname>GtkButtonBoxStyle</enumname> 
      <function>gtk::vbutton_box_get_layout_default</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns <classname>GtkVButtonBox</classname> layout default.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.vbutton_box_get_spacing_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int 
      <function>gtk::vbutton_box_get_spacing_default</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns <classname>GtkVButtonBox</classname> spacing default.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.vbutton_box_set_layout_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::vbutton_box_set_layout_default</function>
     </funcdef>
     <paramdef>
      <enumname>GtkButtonBoxStyle</enumname> 
      <parameter>layout</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets layout default for <classname>GtkVButtonBox</classname>es.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.vbutton_box_set_spacing_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::vbutton_box_set_spacing_default</function>
     </funcdef>
     <paramdef>int <parameter>spacing</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets spacing default for <classname>GtkVButtonBox</classname>es.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_get_default_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GdkColormap</classname> 
      <function>gtk::widget_get_default_colormap</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the application's default <classname>GdkColormap</classname>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_get_default_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkStyle</classname> 
      <function>gtk::widget_get_default_style</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the application's default <classname>GtkStyle</classname>.
   </shortdesc>
   <desc>
    <simpara>
     Returns the default <classname>GtkStyle</classname> that is currently
     being used throughout an application.
    </simpara>
    <simpara>
     Use <function>gtk::widget_set_default_style()</function> to change
     aspects of the default style.
    </simpara>
   </desc>
  </method>

  <method id="gtk.method.widget_get_default_visual">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GdkVisual</classname> 
      <function>gtk::widget_get_default_visual</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the application's default <classname>GdkVisual</classname>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_pop_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::widget_pop_colormap</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_pop_composite_child">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
<function>gtk::widget_pop_composite_child</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_pop_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::widget_pop_style</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_pop_visual">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::widget_pop_visual</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_push_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::widget_push_colormap</function></funcdef>
     <paramdef>
      <classname>GdkColormap</classname> 
      <parameter>cmap</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_push_composite_child">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
<function>gtk::widget_push_composite_child</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_push_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::widget_push_style</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_push_visual">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::widget_push_visual</function></funcdef>
     <paramdef>
      <classname>GdkVisual</classname> 
      <parameter>visual</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_set_default_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::widget_set_default_colormap</function>
     </funcdef>
     <paramdef>
      <classname>GdkColormap</classname> 
      <parameter>colormap</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets a <classname>GdkColormap</classname> as default for the application.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_set_default_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::widget_set_default_style</function>
     </funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets a <classname>GtkStyle</classname> as default for the application.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_set_default_visual">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::widget_set_default_visual</function>
     </funcdef>
     <paramdef>
      <classname>GdkVisual</classname> 
      <parameter>visual</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets a <classname>GdkVisual</classname> as default for the application.
   </shortdesc>
   <desc>

   </desc>
  </method>

</refentry>
