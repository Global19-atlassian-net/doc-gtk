<classentry id="gtk.gtkfileselection">
 <classmeta>
  <classtitle>GtkFileSelection</classtitle>
  <classparent>GtkWindow</classparent>
  <shortdesc>Widget for selecting a file or a directory.</shortdesc>
  <desc>
   <simpara>
    <classname>GtkFileSelection</classname> is used to retrieve files or
    directories requested by the end user.  The widget contains a directory
    list and a file list which will correspond to the default directory,
    that is, either the current working directory or one determined using 
    <function class="GtkFileSelection">set_filename()</function>.
   </simpara>
   <simpara>
    The filesystem can be navigated using either the directory tree or
    the dropdown history menu.  Alternatively it is possible to type the
    directory or file path into the entry field, and also to use the 
    <literal>TAB</literal> key to autocomplete either the directory name
    or file name entered in this way.
   </simpara>
  </desc>
 </classmeta>

 <constructor id="gtk.gtkfileselection.constructor">
  <funcsynopsis>
   <funcprototype>
    <funcdef> <function>GtkFileSelection</function></funcdef>
    <paramdef>string 
     <parameter><optional>title</optional></parameter>
    </paramdef>
   </funcprototype>
  </funcsynopsis>
  <shortdesc>
   Creates a new <classname>GtkFileSelection</classname> widget.
  </shortdesc>
  <desc>
   <para>
    The syntax to create a <classname>GtkFileSelection</classname> 
    widget is:
    <informalexample>
     <programlisting role="php">
$fs = &amp;new GtkFileSelection(&quot;My File Selection&quot;);
     </programlisting>
    </informalexample>
    Note that if the <parameter>title</parameter> parameter is not
    supplied or is <literal>NULL</literal> the title will be set to
    the name of the file in which the PHP code resides.
   </para>
  </desc>
 </constructor>

 <methods>

  <method id="gtk.gtkfileselection.method.set_filename">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_filename</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the default path.
   </shortdesc>
   <desc>
    <simpara>
     Sets the default path for the directory and/or file name.
    </simpara>
    <para>
     <informalexample>
      <programlisting role = "php">
$fs-&gt;set_filename(&quot;/home/user/php/&quot;);
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkfileselection.method.get_filename">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_filename</function></funcdef>
     <paramdef>void<parameter></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the current selected path.
   </shortdesc>
   <desc>
    <simpara>
     Returns a string representing the current value in the file
     selector.  If no directory or file has been selected then the
     current path is returned.
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
$filename = $fs-&gt;get_filename();
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkfileselection.method.complete">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>complete</function></funcdef>
     <paramdef>string <parameter>pattern</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Matches a given pattern to a valid file name.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkFileSelection">complete()</function> will try
     to match the pattern given by the programmer to a valid file name
     in the current directory, or to a valid directory name on the
     current drive.  This is useful when, for example, wishing to
     hard-code a search for a specific extension into an application. 
     Where a full match is made, the matched file name will appear in
     both the file list and the text entry field of the file selection
     dialog.  If only partial matches can be found, the file list will
     contain the resulting file names and the text entry field will
     contain the closest matched string (not the full file name).
    </simpara>
    <simpara>
     Note that only a single wildcard field is effective here.
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
$fs-&gt;complete(&quot;*.php&quot;);
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkfileselection.method.show_fileop_buttons">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>show_fileop_buttons</function></funcdef>
     <paramdef>void<parameter></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Shows the file operation buttons.
   </shortdesc>
   <desc>
    <simpara>
     Shows the file operation buttons <literal>Create Dir</literal>, 
     <literal>Delete File</literal> and <literal>Rename File</literal>. 
     This is their default state, so that 
     <function class="GtkFileSelection">show_fileop_buttons()</function> 
     would only be used following a call to 
     <function class="GtkFileSelection">hide_fileop_buttons()</function>. 
     The rest of the widgets in the dialog will be automatically resized
     to accommodate the status of the file operation buttons.  These
     buttons do not need any programming in order to carry out their
     respective functions, as these are already hard-coded into GTK+.
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
$fs-&gt;show_fileop_buttons();
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkfileselection.method.hide_fileop_buttons">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>hide_fileop_buttons</function></funcdef>
     <paramdef>void<parameter></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Hides the file operation buttons.
   </shortdesc>
   <desc>
    <simpara>
     Hides the file operation buttons <literal>Create Dir</literal>, 
     <literal>Delete File</literal> and <literal>Rename File</literal> 
     which by default appear at the top of a 
     <classname>GtkFileSelection</classname>. 
     <function class="GtkFileSelection">hide_fileop_buttons()</function> 
     is useful where the programmer would prefer the end user not to have
     easy access to these file operations.
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
$fs-&gt;hide_fileop_buttons();
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

 </methods>

 <properties>

  <property id="gtk.gtkfileselection.property.dir_list" type="ro">
   <propname>dir_list</propname>
   <proptype>GtkWidget</proptype>
   <shortdesc>
    Accessible <classname>GtkCList</classname> within the
    <classname>GtkFileSelection</classname> widget's structure.
   </shortdesc>
   <desc>
    <simpara>
     <classname>GtkCList</classname> widget embedded in the
     <classname>GtkFileSelection</classname> dialog that displays the
     subdirectories available in the current directory.
    </simpara>
    <para>
     In order to access 
     <propname class="GtkFileSelection">dir_list</propname> it is
     necessary to create a handle for it, e.g.
     <informalexample>
      <programlisting role="php">
$dir_list_handle = $fs-&gt;dir_list;
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </property>

  <property id="gtk.gtkfileselection.property.file_list" type="ro">
   <propname>file_list</propname>
   <proptype>GtkWidget</proptype>
   <shortdesc>
    Accessible <classname>GtkCList</classname> within the
    <classname>GtkFileSelection</classname> widget's structure.
   </shortdesc>
   <desc>
    <simpara>
     <classname>GtkCList</classname> widget embedded in the
     <classname>GtkFileSelection</classname> dialog that displays the
     list of files available in the current directory.
    </simpara>
    <para>
     In order to access 
     <propname class="GtkFileSelection">file_list</propname> it is
     necessary to create a handle for it, e.g.
     <informalexample>
      <programlisting role="php">
$file_list_handle = $fs-&gt;file_list;
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </property>

  <property id="gtk.gtkfileselection.property.selection_entry" type="ro">
   <propname>selection_entry</propname>
   <proptype>GtkWidget</proptype>
   <shortdesc>
    Accessible <classname>GtkEntry</classname> within the
    <classname>GtkFileSelection</classname> widget's structure.
   </shortdesc>
   <desc>
    <simpara>
     <classname>GtkEntry</classname> widget at the bottom of the
     <classname>GtkFileSelection</classname> dialog that displays the
     current file selection.
    </simpara>
    <para>
     In order to access 
     <propname class="GtkFileSelection">selection_entry</propname> it
     is necessary to create a handle for it, e.g.
     <informalexample>
      <programlisting role="php">
$selection_entry_handle = $fs-&gt;selection_entry;
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </property>

  <property id="gtk.gtkfileselection.property.selection_text" type="ro">
   <propname>selection_text</propname>
   <proptype>GtkWidget</proptype>
   <shortdesc>
    Accessible <classname>GtkLabel</classname> within the
    <classname>GtkFileSelection</classname> widget's structure.
   </shortdesc>
   <desc>
    <simpara>
     The <propname class="GtkFileSelection">selection_text</propname> 
     property is a <classname>GtkLabel</classname> that by default
     contains the string <literal>Selection: </literal> plus the current
     directory selected.
    </simpara>
    <para>
     In order to access 
     <propname class="GtkFileSelection">selection_text</propname> it is
     necessary to create a handle for it, e.g.
     <informalexample>
      <programlisting role="php">
$selection_text_handle = $fs-&gt;selection_text;
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </property>

  <property id="gtk.gtkfileselection.property.main_vbox" type="ro">
   <propname>main_vbox</propname>
   <proptype>GtkWidget</proptype>
   <shortdesc>
    Accessible <classname>GtkVBox</classname> within the
    <classname>GtkFileSelection</classname> widget's structure.
   </shortdesc>
   <desc>
    <simpara>
     A <classname>GtkVBox</classname> placed below the two 
     <classname>GtkCList</classname>s and above the 
     <propname class="GtkFileSelection">selection_entry</propname>
     widget.  Additional Gtk widgets can be packed into this container
     and will appear below the <literal>Create Dir</literal>, 
     <literal>Delete File</literal> and <literal>Rename File</literal> 
     buttons that are standard with the 
     <classname>GtkFileSelection</classname> (if shown).
    </simpara>
    <para>
     In order to access 
     <propname class="GtkFileSelection">main_vbox</propname> it is
     necessary to create a handle for it, e.g.
     <informalexample>
      <programlisting role="php">
$main_vbox_handle = $fs-&gt;main_vbox;
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </property>

  <property id="gtk.gtkfileselection.property.ok_button" type="ro">
   <propname>ok_button</propname>
   <proptype>GtkWidget</proptype>
   <shortdesc>
    Accessible <classname>GtkButton</classname> within the
    <classname>GtkFileSelection</classname> widget's structure.
   </shortdesc>
   <desc>
    <simpara>
     <classname>GtkButton</classname> widget at the bottom of the
     <classname>GtkFileSelection</classname> dialog. It is the
     programmer's responsibility to listen for signals from this
     button and take the appropriate action.
    </simpara>
    <para>
     In order to access 
     <propname class="GtkFileSelection">ok_button</propname> it is
     necessary to create a handle for it, e.g.
     <informalexample>
      <programlisting role="php">
$ok_button_handle = $fs-&gt;ok_button;
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </property>

  <property id="gtk.gtkfileselection.property.cancel_button" type="ro">
   <propname>cancel_button</propname>
   <proptype>GtkWidget</proptype>
   <shortdesc>
    Accessible <classname>GtkButton</classname> within the
    <classname>GtkFileSelection</classname> widget's structure.
   </shortdesc>
   <desc>
    <simpara>
     <classname>GtkButton</classname> widget at the bottom of the
     <classname>GtkFileSelection</classname> dialog. As with the 
     <propname class="GtkFileSelection">ok_button</propname>,
     it is the programmer's responsibility to listen for signals from
     this button and take the appropriate action.
    </simpara>
    <para>
     In order to access 
     <propname class="GtkFileSelection">cancel_button</propname> it is
     necessary to create a handle for it, e.g.
     <informalexample>
      <programlisting role="php">
$cancel_button_handle = $fs-&gt;cancel_button;
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </property>

  <property id="gtk.gtkfileselection.property.action_area" type="ro">
   <propname>action_area</propname>
   <proptype>GtkWidget</proptype>
   <shortdesc>
    Accessible <classname>GtkHBox</classname> within the
    <classname>GtkFileSelection</classname> widget's structure.
   </shortdesc>
   <desc>
    <simpara>
     A <classname>GtkHBox</classname> placed between the 
     <propname class="GtkFileSelection">main_vbox</propname> mentioned
     above and the two <classname>GtkCList</classname>s  for the
     directory and file list.
    </simpara>
    <para>
     In order to access 
     <propname class="GtkFileSelection">action_area</propname> it is
     necessary to create a handle for it, e.g.
     <informalexample>
      <programlisting role="php">
$action_area_handle = $fs-&gt;action_area;
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </property>

 </properties>

</classentry>
