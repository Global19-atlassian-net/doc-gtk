<classentry id="gtk.gtkmenushell">
 <classmeta>
  <classtitle>GtkMenuShell</classtitle>
  <classparent>GtkContainer</classparent>
  <shortdesc>
   Abstract base class for menu objects.
  </shortdesc>
  <desc>
   <simpara>
    <classname>GtkMenuShell</classname> is a special kind of abstract
    container that provides its descendants <classname>GtkMenu</classname> 
    and <classname>GtkMenuBar</classname> with methods and signals that are
    appropriate to typical menu behaviour.
   </simpara>
   <para>
    There are three keybindings set up here which are carried down to
    the inheriting classes.  These are as follows:
    <simplelist>
     <member>
      <literal>Escape</literal> cancels an existing popup menu
     </member>
     <member>
      <literal>Return</literal> activates the current selection
     </member>
     <member>
      <literal>Space</literal> also activates the current selected item
     </member>
    </simplelist>
    The <literal>activate-current</literal> signal has not been documented
    here because any attempt to harness it beyond these bindings results
    in abort.  The same applies to the <literal>move-current</literal> 
    signal, implemented here and given keybindings in both 
    <classname>GtkMenu</classname> and <classname>GtkMenuBar</classname>.
   </para>
   <simpara>
    Note that <classname>GtkMenuShell</classname> is an abstract base class, 
    and can not be constructed directly.
   </simpara>
  </desc>
 </classmeta>

 <methods>

  <method id="gtk.gtkmenushell.method.append">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>append</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>child</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds item to end of menu.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuShell">append()</function> adds the item
     passed as the parameter to the current end position in the array of
     child objects within the containing menu.
    </simpara>
    <simpara>
     See also:  <function class="GtkMenuShell">prepend()</function>, 
     <function class="GtkMenuShell">insert</function>, 
     <classname>GtkContainer</classname>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkmenushell.method.prepend">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>prepend</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>child</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds item to start of menu.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuShell">prepend()</function> adds the item
     passed as the parameter to the current beginning position in the
     array of child objects within the containing menu, i.e. a second item
     packed using <function class="GtkMenuShell">prepend()</function> will
     precede the first item packed in this way.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkmenushell.method.insert">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>insert</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>child</parameter>
     </paramdef>
     <paramdef>int <parameter>position</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Inserts item at specified position in menu.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuShell">insert()</function> allows the
     programmer to specify the position of the item within the menu's
     array of menuitems, regardless of the order of method calls.
    </simpara>
    <simpara>
     If a position given is impossible (e.g. larger than the size of the
     array) the positioning of all items will be ignored, with the
     exception of <literal>0</literal>.  In this case the ordering of the
     method calls will take precedence.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkmenushell.method.deactivate">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>deactivate</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emits deactivate signal.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuShell">deactivate()</function> causes
     the calling menu to emit the 
     <signalname class="GtkMenuShell">deactivate</signalname> signal, which
     has the effect of deselecting any currently selected menu item and
     toggling the active status of the menu to false before removing any
     grabs the menu may currently have.  This in turn takes down the menu.
    </simpara>
    <simpara>
     The <function class="GtkMenuShell">deactivate()</function> method is
     largely used internally.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkmenushell.method.select_item">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>select_item</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>menu_item</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Makes designated item emit the 
    <signalname class="GtkItem">select</signalname> signal.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuShell">select_item()</function> is largely
     used internally.  A 'selected' item is displayed in the prelight
     state and has its submenu popped up, if it has one.  This is also
     achieved by using the mouse pointer or arrow keys in an active
     <classname>GtkMenu</classname>, and should not be confused with
     the <signalname class="GtkMenuItem">activate</signalname> signal, which
     is triggered by mouse clicks or the <literal>Enter</literal> key.
    </simpara>
    <simpara>
     Using this method causes the designated item to emit the 
     <signalname class="GtkItem">select</signalname> signal, which in turn
     triggers the 'selected' state.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkmenushell.method.deselect">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>deselect</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Makes designated item emit the 
    <signalname class="GtkItem">deselect</signalname> signal.
   </shortdesc>
   <desc>
    <simpara>
     As with the <function class="GtkMenuShell">select_item()</function> 
     method, <function class="GtkMenuShell">deselect()</function> is mostly
     used internally.  A 'deselected' item is displayed in the normal state
     and has its submenu popped down, if it has one.
    </simpara>
    <simpara>
     Using this method causes the designated item to emit the 
     <signalname class="GtkItem">deselect</signalname> signal, which in turn
     triggers the 'deselected' state.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkmenushell.method.activate_item">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>activate_item</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>menu_item</parameter>
     </paramdef>
     <paramdef>bool <parameter>force_deactivate</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Makes designated item emit the 
    <signalname class="GtkMenuItem">activate</signalname> signal.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuShell">activate_item()</function> is used to
     emit the <signalname class="GtkMenuItem">activate</signalname> 
     signal from the <classname>GtkMenuItem</classname> passed as the first
     argument.  This has the same effect as a user clicking on an item or
     pressing the <literal>Enter</literal> key while that item is selected.
    </simpara>
    <simpara>
     If the second parameter is set to <literal>true</literal>, the 
     <function class="GtkMenuShell">deactivate()</function> method is called
     on the menu that the <classname>GtkMenuItem</classname> is a part of, 
     taking the menu down.  If set to <literal>false</literal>, the menu
     item is hidden on activation.
    </simpara>
   </desc>
  </method>

 </methods>

 <signals>

  <signal id="gtk.gtkmenushell.signal.deactivate">
   <signalname>deactivate</signalname>
   <callback>
    <funcprototype>
     <funcdef>void <function>callback</function></funcdef>
     <paramdef><classname>GtkWidget</classname> menu</paramdef>
    </funcprototype>
   </callback>
   <shortdesc>
    Emitted when the menu is no longer active.
   </shortdesc>
   <desc>
    <simpara>
     The <signalname class="GtkMenuShell">deactivate</signalname> signal
     is emitted when either a <classname>GtkMenuItem</classname> within
     the current menu has been selected or the menu has been cancelled.
    </simpara>
    <simpara>
     This signal initiates the menu's deactivate routine, which removes
     the key and pointer grabs from the menu and deselects any selected
     item before popping the menu down.  It is largely used internally, 
     and probably carries more overhead when called than the 
     <signalname class="GtkMenuShell">selection-done</signalname> signal
     emitted under similar conditions.
    </simpara>
   </desc>
  </signal>

  <signal id="gtk.gtkmenushell.signal.selection-done">
   <signalname>selection-done</signalname>
   <callback>
    <funcprototype>
     <funcdef>void <function>callback</function></funcdef>
     <paramdef><classname>GtkWidget</classname> menu</paramdef>
    </funcprototype>
   </callback>
   <shortdesc>
    Emitted when selection is complete or cancelled.
   </shortdesc>
   <desc>
    <simpara>
     The <signalname class="GtkMenuShell">selection-done</signalname> signal
     is emitted when the selection routine is complete, that is, when either
     a <classname>GtkMenuItem</classname> within the menu has been selected
     or when the user has cancelled the menu by using the 
     <literal>Escape</literal> key.
    </simpara>
    <simpara>
     This signal is not connected to any internal functions, merely
     reporting the selection status.  Use it in preference to the
     <signalname class="GtkMenuShell">deactivate</signalname> signal.
    </simpara>
   </desc>
  </signal>

  <signal id="gtk.gtkmenushell.signal.cancel">
   <signalname>cancel</signalname>
   <callback>
    <funcprototype>
     <funcdef>void <function>callback</function></funcdef>
     <paramdef><classname>GtkWidget</classname> menu</paramdef>
    </funcprototype>
   </callback>
   <shortdesc>
    Cancels menu using key bindings.
   </shortdesc>
   <desc>
    <simpara>
     The <signalname class="GtkMenuShell">cancel</signalname> signal is
     fired when the <literal>Escape</literal> key is pressed.
    </simpara>
    <simpara>
     The internal functions called when this signal is emitted cancel the
     current selection, deactivate the menu, and fire the 
     <signalname class="GtkMenuShell">selection-done</signalname> signal.
    </simpara>
    <simpara>
     It is, however, possible to add to the functions that this signal
     already invokes.
    </simpara>
   </desc>
  </signal>

 </signals>

</classentry>
