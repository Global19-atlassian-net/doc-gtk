<?xml version="1.0" encoding="ISO-8859-1" ?>
<classentry id="gtk.gtknotebook">
 <classmeta>
  <classtitle>GtkNotebook</classtitle>
  <classparent>GtkContainer</classparent>
  <shortdesc>
   Widget that displays a set of pages with tabs.
  </shortdesc>
  <desc>
   <simpara>
    <classname>GtkNotebook</classname> is a widget which displays its children
    widgets in a stacked manner. Each child has a tab which is visible no
    matter when in the stack the child is. A child can be brought to the top of
    the stack by clicking on that child's tab. A text editor which allows a
    user to edit multiple documents at once might make good use of
    <classname>GtkNotebook</classname>.
   </simpara>
  </desc>
 </classmeta>

 <constructor id="gtk.gtknotebook.constructor">
  <funcsynopsis>
   <funcprototype>
    <funcdef>
     <function>GtkNotebook</function>
    </funcdef>
    <paramdef>void</paramdef>
   </funcprototype>
  </funcsynopsis>
  <shortdesc>
   Creates a new <classname>GtkNotebook</classname> object.
  </shortdesc>
  <desc>
   <simpara>
    Creates a new <classname>GtkNotebook</classname> instance. After creating
    the notebook, you should fill its pages with other widgets using <function
    class="GtkNotebook">append_page</function> and/or other similar methods.
   </simpara>
   <simpara>
    Because <classname>GtkNotebook</classname> is a decendant of
    <classname>GtkContainer</classname>, it may contain one or more children.
    The notebook's children will be displayed as a "page" with a tab. It is
    most useful when the notebook's children are themselves containers so that
    other items may be added.
   </simpara>
   <para>
    <example>
     <title>Creating a GtkNotebook</title>
     <programlisting role="php">
<![CDATA[
<?php
$notebook =& new GtkNotebook;

$pages = array('tab one', 'tab two', 'tab three');

foreach ($pages as $page) {
    $frame =& new GtkFrame($page);
    $frame->add(new GtkLabel('Sample text for ' . $page);
    $notebook->append_page($frame, new GtkLabel($page));
}

$notebook->show_all();
?>
]]>
     </programlisting>
    </example>
   </para> 
   <simpara>
    Tabs are automatically connected to the <signalname
    class="GtkButton">clicked</signalname> signal. When a tab is clicked the
    <signalname class="GtkNotebook">switch-page</signalname> signal is
    emitted which causes that tab's page to be brought to the foreground.
   </simpara>
  </desc>
 </constructor>

 <methods>

  <method id="gtk.gtknotebook.method.append_page">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>append_page</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>child</parameter>
     </paramdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter><optional>tab_label</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Add a page to the back of the note book.
   </shortdesc>
   <desc>
    <simpara>
     Adds a new page and tab to the back of the notebook.
     <parameter>child</parameter> is added as the "page" with
     <parameter>tab_label</parameter> as the tab. <parameter>child</parameter>
     can be any widget but it is most useful when <parameter>child</parameter>
     is descended from <classname>GtkContainer</classname>. The
     <parameter>tab_label</parameter> is usually a
     <classname>GtkLabel</classname> but may be any widget.
    </simpara>
    <simpara>
     <parameter>tab_label</parameter> is optional. If it is not supplied the
     tab will be set to "page <literal>n</literal>" where <literal>n</literal>
     is the page number.
    </simpara>
    <para>
     <example>
      <title>Appending pages to a notebook</title>
      <programlisting role="php">
<![CDATA[
<?php
$pages = array(1, 2, 3);

$notebook =& new GtkNotebook;

foreach ($pages as $pageNumber) {
    $frame =& new GtkFrame('Page ' . $pageNumber);
    $label =& new GtkLabel('Tab '  . $pageNumber);
    $notebook->append_page($frame, $label);
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     See also: <function class="GtkNotebook">prepend_page</function>,
               <function class="GtkNotebook">insert_page</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.append_page_menu">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>append_page_menu</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>child</parameter></paramdef>
     <paramdef><classname>GtkWidget</classname> <parameter>tab_label</parameter></paramdef>
     <paramdef><classname>GtkWidget</classname> <parameter>menu_label</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Appends a page to the notebook, specifying the widget to use as the label in
    the popup menu.
   </shortdesc>
   <desc>
    <simpara>
     Adds <parameter>child</parameter> as the last page in the notebook with
     <parameter>tab_label</parameter> as the page's tab. Also adds
     <parameter>menu_label</parameter> as the page's popup menu label.
     <parameter>menu_label</parameter> will only be visible if the popup menu
     is enabled by calling <function
     class="GtkNotebook">popup_enable</function>.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">prepend_page_menu</function>,
     <function class="GtkNotebook">insert_page_menu</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.prepend_page">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>prepend_page</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>child</parameter>
     </paramdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter><optional>tab_label</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Add a page to the begining of the note book.
   </shortdesc>
   <desc>
    <simpara>
     Adds a new page to the begining of the notebook. 
     <parameter>child</parameter> is added as the "page" with
     <parameter>tab_label</parameter> as the tab.
     <parameter>child</parameter> can be any widget but it is most useful when
     <parameter>child</parameter> is descended from
     <classname>GtkContainer</classname>. The <parameter>tab_label</parameter>
     is usually a <classname>GtkLabel</classname> but may be any widget.
    </simpara>
    <simpara>
     <parameter>tab_label</parameter> is optional. If it is not supplied the
     tab will be set to "page <literal>n</literal>" where <literal>n</literal>
     is the page number.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">append_page</function>,
               <function class="GtkNotebook">insert_page</function>
    </simpara> 
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.prepend_page_menu">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>prepend_page_menu</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>child</parameter></paramdef>
     <paramdef><classname>GtkWidget</classname> <parameter>tab_label</parameter></paramdef>
     <paramdef><classname>GtkWidget</classname> <parameter>menu_label</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Prepends a page to the notebook, specifying the widget to use as the label in
    the popup menu.
   </shortdesc>
   <desc>
    <simpara>
     Adds <parameter>child</parameter> as the first page in the notebook with
     <parameter>tab_label</parameter> as the page's tab. Also adds
     <parameter>menu_label</parameter> as the page's popup menu label.
     <parameter>menu_label</parameter> will only be visible if the popup menu
     is enabled by calling <function
     class="GtkNotebook">popup_enable</function>.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">append_page_menu</function>,
     <function class="GtkNotebook">insert_page_menu</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.insert_page">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>insert_page</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>child</parameter>
     </paramdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter><optional>tab_label</optional></parameter>
     </paramdef>
     <paramdef>int
      <parameter><optional>position</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Add a page to the notebook in the given position.
   </shortdesc>
   <desc>
    <simpara>
     Adds a new page to the notebook as the <parameter>position</parameter>th page.
     <parameter>child</parameter> is added as the "page" with
     <parameter>tab_label</parameter> as the tab.
     <parameter>child</parameter> can be any widget but it is most useful when
     <parameter>child</parameter> is descended from
     <classname>GtkContainer</classname>. The <parameter>tab_label</parameter>
     is usually a <classname>GtkLabel</classname> but may be any widget. 
     If <parameter>position</parameter> is <literal>-1</literal> the page will
     be added as the last page in the notebook. Page positions begin with
     <literal>0</literal>.
    </simpara>
    <simpara>
     <parameter>tab_label</parameter> is optional. If it is not supplied the
     tab will be set to "page <literal>n</literal>" where <literal>n</literal>
     is the page number.
    </simpara>
    <simpara>
     <parameter>position</parameter> is optional. If it is not supplied it
     will default to <literal>-1</literal> which will put the page at the end
     of the notebook.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">append_page</function>,
               <function class="GtkNotebook">prepend_page</function>,
               <function class="GtkNotebook">remove_page</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.insert_page_menu">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>insert_page_menu</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>child</parameter>
     </paramdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>tab_label</parameter>
     </paramdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>menu_label</parameter>
     </paramdef>
     <paramdef>int
      <parameter>position</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Inserts a page into the notebook at the given position, specifying the
    widget to use as the label in the popup menu.
   </shortdesc>
   <desc>
    <simpara>
     Adds <parameter>child</parameter> as the notebook page in 
     <parameter>position</parameter> <parameter>tab_label</parameter> as the
     page's tab. Also adds <parameter>menu_label</parameter> as the page's 
     popup menu label. <parameter>menu_label</parameter> will only be visible
     if the popup menu is enabled by calling <function
     class="GtkNotebook">popup_enable</function>.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">append_page_menu</function>,
     <function class="GtkNotebook">prepend_page_menu</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.remove_page">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>remove_page</function>
     </funcdef>
     <paramdef>int
      <parameter>page_num</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Remove the page at the given position from the notebook.
   </shortdesc>
   <desc>
    <simpara>
     Removes the page with index <parameter>page_num</parameter> or the last
     page if <parameter>page_num</parameter> is <literal>-1</literal>. Pages
     are indexed begining with <literal>0</literal>.
    </simpara>
    <para>
     <example>
      <title>Removing the current page</title>
      <programlisting role="php">
<![CDATA[
<?php
// Remove the current page.
$notebook->remove_page($notebook->get_current_page());
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     See also: <function class="GtkNotebook">insert_page</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.get_current_page">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int
      <function>get_current_page</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Return the index of the current page.
   </shortdesc>
   <desc>
    <simpara>
     Returns the index of the currently selected page.
    </simpara>
    <para>
     <example>
      <title>Set the current page to 0 if not already</title>
      <programlisting role="php">
<![CDATA[
<?php
$notebook =& new GtkNotebook;
for ($i = 0; $i < 10; ++$i) {
    $notebook->append_page(new GtkFrame('Page ' . $i), new GtkLabel($i));
}

if ($notebook->get_current_page() != 0) {
    $notebook->set_page(0);
}
?>
]]>
      </programlisting>
     </example>
    </para>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.get_nth_page">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkWidget</classname>
      <function>get_nth_page</function>
     </funcdef>
     <paramdef>int
      <parameter>page_num</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the page in the given position.
   </shortdesc>
   <desc>
    <simpara>
     Returns the child widget with index <parameter>page_num</parameter>. If
     <parameter>page_num</parameter> is <literal>-1</literal>, the last page
     is returned. If <parameter>page_num</parameter> is greater then the
     number of pages minus one (the highest index), <literal>NULL</literal> is
     returned.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">page_num</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.page_num">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int
      <function>page_num</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>child</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the position of the given child widget.
   </shortdesc>
   <desc>
    <simpara>
     Returns the index of <parameter>child</parameter>. If
     <parameter>child</parameter> is not a child of the notebook, <literal>-1</literal> is
     returned.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">get_nth_page</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_page">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>set_page</function>
     </funcdef>
     <paramdef>int
      <parameter>page_num</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the page in the given position as the top page in the notebook.
   </shortdesc>
   <desc>
    <simpara>
     Sets the page with index <parameter>page_num</parameter> as the top page
     in the notebook.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.next_page">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>next_page</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Moves the next page in the notebook to the top.
   </shortdesc>
   <desc>
    <simpara>
     Sets the page after the current page as the top page in the notebook.
     If the current page is the last page in the notebook, nothing happens.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">next_page</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.prev_page">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>prev_page</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Moves the previous page in the notebook to the top.
   </shortdesc>
   <desc>
    <simpara>
     Sets the page before the current page as the top page in the notebook.
     If the current page is the first page in the notebook, nothing happens.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">next_page</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_show_border">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_show_border</function></funcdef>
     <paramdef>bool <parameter>show_border</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set whether a bevel will be drawn around the notebook pages.
   </shortdesc>
   <desc>
    <simpara>
     Sets whether or not a beveled edge will be drawn around the notebook
     pages. If <parameter>show_border</parameter> is <literal>false</literal>
     the border will not be shown. Setting the border to be shown when the
     border is already showing or setting it to be hidden when the border is
     already hidden has no effect. This only has an effect when tabs are not shown.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">set_show_tabs</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_show_tabs">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_show_tabs</function></funcdef>
     <paramdef>bool <parameter>show_tabs</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set whether or not to show the page tabs.
   </shortdesc>
   <desc>
    <simpara>
     Sets whether or not the page tabs will be shown. If
     <parameter>show_tab</parameter> is <literal>false</literal> the tabs will
     not be visible. Setting the tabs to be visible when they are already
     visisble or setting them to be hidden when they are already hidden has
     not effect.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">set_tab_pos</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_tab_pos">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_tab_pos</function></funcdef>
     <paramdef><enumname>GtkPositionType</enumname> <parameter>pos</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set the edge on which the notebook tabs will be displayed.
   </shortdesc>
   <desc>
    <simpara>
     Sets the edge on which the page tabs will appear if they are to be shown. 
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">set_show_tabs</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_homogeneous_tabs">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_homogeneous_tabs</function></funcdef>
     <paramdef>bool <parameter>homogeneous</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set whether or not all tabs should be the same width.
   </shortdesc>
   <desc>
    <simpara>
     Sets whether or not all tabs should be the same width. If
     <parameter>homogeneous</parameter> is <literal>true</literal> all tabs
     will have equal width. If <parameter>homogeneous</parameter> is
     <literal>false</literal> the width of each tab will depend on the size of
     the label.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_tab_border">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_tab_border</function></funcdef>
     <paramdef>int <parameter>border_width</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the border around all edges of the notebook's tabs.
   </shortdesc>
   <desc>
    <simpara>
     Sets the border around all edges of the tabs to
     <parameter>border_width</parameter>. This is equivilent to calling
     <function class="GtkNotebook">set_tab_hborder</function> and <function
     class="GtkNotebook">set_tab_vborder</function> with the same value.
    </simpara>
    <note>
     This method is deprecated in GTK+ and should not be used in new code.
     Instead you should use <function
     class="GtkNotebook">set_tab_hborder</function> and <function
     class="GtkNotebook">set_tab_vborder</function>.
    </note>
    <simpara>
     See also: <function class="GtkNotebook">set_tab_hborder</function>,
     <function class="GtkNotebook">set_tab_vborder</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_tab_hborder">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_tab_hborder</function></funcdef>
     <paramdef>int <parameter>tab_hborder</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the border for the left and right sides of the notebook's tabs.
   </shortdesc>
   <desc>
    <simpara>
     Sets the left and right borders to be <parameter>tab_hborder</parameter> 
     pixels wide for all the notebook's tabs.
    </simpara>
    <simpara>
     Combined with <function class="GtkNotebook">set_tab_vborder</function>
     this is the suggested method for setting tab borders.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">set_tab_border</function>,
     <function class="GtkNotebook">set_tab_vborder</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_tab_vborder">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_tab_vborder</function></funcdef>
     <paramdef>int <parameter>tab_vborder</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the border for the top and bottom sides of the notebook's tabs.
   </shortdesc>
   <desc>
    <simpara>
     Sets the top and bottom borders to be <parameter>tab_vborder</parameter> 
     pixels wide for all the notebook's tabs.
    </simpara>
    <simpara>
     Combined with <function class="GtkNotebook">set_tab_hborder</function>
     this is the suggested method for setting tab borders.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">set_tab_border</function>,
     <function class="GtkNotebook">set_tab_hborder</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_scrollable">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_scrollable</function></funcdef>
     <paramdef>bool <parameter>scrollable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set whether the tab label area will allow scrolling.
   </shortdesc>
   <desc>
    <simpara>
     Sets whether or not there will be arrows for scrolling if there are more
     tabs than can be displayed in the tab label area. If
     <parameter>scrollable</parameter> is set to <literal>true</literal>
     scrolling arrows will appear when needed. If
     <parameter>scrollable</parameter> is set to <literal>false</literal> the
     tab label area will not be scrollable.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.popup_enable">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>popup_enable</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Enable the popup menu.
   </shortdesc>
   <desc>
    <simpara>
     Enables the popup menu allowing the user to change pages by right
     clicking on the bookmarks and selecting a page from the menu.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">popup_disable</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.popup_disable">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>popup_disable</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Disable the popup menu.
   </shortdesc>
   <desc>
    <simpara>
     Disables the popup menu.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">popup_enable</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.get_tab_label">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkWidget</classname> <function>get_tab_label</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>child</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Get the tab's label widget.
   </shortdesc>
   <desc>
    <simpara>
     Returns <parameter>child</parameter>'s tab label widget.
     <literal>NULL</literal> is returned if <parameter>child</parameter> is
     not in the notebook or if there was no label set for
     <parameter>child</parameter>.
    </simpara>
    <simpara>
     Tab labels are normally set when the page is added to the notebook.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">set_tab_label</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_tab_label">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_tab_label</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>child</parameter></paramdef>
     <paramdef><classname>GtkWidget</classname> <parameter>tab_label</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set the tab widget of the given child.
   </shortdesc>
   <desc>
    <simpara>
     Sets <parameter>child</parameter>'s tab label widget to
     <parameter>tab_label</parameter>. If <literal>null</literal> is given for
     <parameter>tab_label</parameter>, the default label of "page
     <literal>n</literal>", where <literal>n</literal> is the page number,
     will be used.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">get_tab_label</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_tab_label_text">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_tab_label_text</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>child</parameter></paramdef>
     <paramdef>string <parameter>tab_text</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Create a new label and set it as the tab label for the given child.
   </shortdesc>
   <desc>
    <simpara>
     Creates a new <classname>GtkLabel</classname> with <parameter>tab_text</parameter>
     as the label and sets it as the tab label widget for <parameter>child</parameter>.
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">set_tab_label</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.get_menu_label">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkWidget</classname> <function>get_menu_label</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>child</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Get the popup menu label for a notebook page.
   </shortdesc>
   <desc>
    <simpara>
     Returns the menu label widget for <parameter>child</parameter>. If
     <parameter>child</parameter> is not a child of the notebook or does not
     have a menu label other than the default tab label,
     <literal>NULL</literal> is returned.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_menu_label">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_menu_label</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>child</parameter></paramdef>
     <paramdef><classname>GtkWidget</classname> <parameter>menu_label</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set the popup menu label for a notebook page.
   </shortdesc>
   <desc>
    <simpara>
     Sets <parameter>menu_label</parameter> as the popup menu label widget for
     <parameter>child</parameter>. 
    </simpara>
    <simpara>
     See also: <function class="GtkNotebook">get_menu_label</function>,
     <function class="GtkNotebook">set_menu_label_text</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_menu_label_text">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_menu_label_text</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>child</parameter></paramdef>
     <paramdef>string <parameter>menu_text</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set the popup menu label text for a notebook page.
   </shortdesc>
   <desc>
    <simpara>
     Creates a new <classname>GtkLabel</classname> with
     <parameter>menu_text</parameter> as its label text and sets it as
     <parameter>child</parameter>'s popup menu label.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.set_tab_label_packing">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_tab_label_packing</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>child</parameter></paramdef>
     <paramdef>bool <parameter>expand</parameter></paramdef>
     <paramdef>bool <parameter>fill</parameter></paramdef>
     <paramdef><enumname>GtkPackType</enumname> <parameter>pack_type</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set how the popup menu label for a page will be packed.
   </shortdesc>
   <desc>
    <simpara>
     Sets the packing parameters for the tab label of the page containing
     child. See <function class="GtkBox">pack_start</function> for the exact
     meaning of the parameters.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtknotebook.method.reorder_child">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>reorder_child</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>child</parameter>
     </paramdef>
     <paramdef>int
      <parameter>position</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Move a page to a given position.
   </shortdesc>
   <desc>
    <simpara>
     Moves <parameter>child</parameter> to position
     <parameter>position</parameter>. If <parameter>position</parameter> is
     greater than the number of pages or is negative, the page will be moved
     to the end of the notebook. 
    </simpara>
    <simpara>
     Page positions start from zero. The third page in the notebook is in
     position two.
    </simpara> 
   </desc>
  </method>

 </methods>

</classentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

