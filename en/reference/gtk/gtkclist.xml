<?xml version="1.0" encoding="ISO-8859-1" ?>
<classentry id="gtk.gtkclist">
 <classmeta>
  <classtitle>GtkCList</classtitle>
  <classparent>GtkContainer</classparent>
  <shortdesc>
   A multi-columned scrolling list widget.
  </shortdesc>
  <desc>

  </desc>
 </classmeta>

 <constructor id="gtk.gtkclist.constructor">
  <funcsynopsis>
   <funcprototype>
    <funcdef> <function>GtkCList</function></funcdef>
    <paramdef>int <parameter>columns</parameter></paramdef>
    <paramdef><optional>Array <parameter>titles</parameter></optional></paramdef>
   </funcprototype>
  </funcsynopsis>
  <shortdesc>
   Creates a new <classname>GtkCList</classname> object
  </shortdesc>
  <desc>
   <simpara>
    Creates a new <classname>GtkCList</classname> object with the given number of columns.
    The optional second parameter is an array of strings which are uses as column titles.
   </simpara>
   <simpara>
    The columns can be resized with the 
    <link linkend="gtk.gtkclist.method.set_column_width">set_column_width</link> function.
   </simpara>
   <programlisting role="php">
<![CDATA[
<?php
if( !extension_loaded('gtk')) {	
	dl( 'php_gtk.' . PHP_SHLIB_SUFFIX); 
}

$win = &new GtkWindow();
$win->set_default_size(200,300);
$win->connect('destroy', 'destroy');

function destroy() {
	Gtk::main_quit();
}

$arStatistics	= array(
 array( 'Paris', 9.1),
 array( 'Moscow', 9.0),
 array( 'London', 6.8),
 array( 'Rome', 3.8),
 array( 'Berlin', 3.4),
 array( 'Athena', 3.0)
);

$scrolled_win = &new GtkScrolledWindow();
$scrolled_win->set_policy( GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

$list = &new GtkCList( 2, array( "City", "Inhabitants (M)"));

foreach( $arStatistics as $arStat) {
	$list->insert( 0, $arStat);
}

$list->set_column_width( 0, 90);

$scrolled_win->add( $list);
$win->add( $scrolled_win);
$win->show_all();
GTK::main();
?>
]]>
   </programlisting>
   <simpara>
    The numbering of a position parameter for a column or row starts <emphasis>at 0</emphasis>.
   </simpara>
  </desc>
 </constructor>

 <methods>

  <method id="gtk.gtkclist.method.set_hadjustment">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_hadjustment</function></funcdef>
     <paramdef><classname>GtkAdjustment</classname> <parameter>adjustment</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Allows you to set the <classname>GtkAdjustment</classname> to be used for the horizontal aspect of the <classname>GtkCList</classname> widget.
   </shortdesc>
   <desc>
    <simpara>
      Allows you to set the <classname>GtkAdjustment</classname> to be used for the horizontal aspect of the <classname>GtkCList</classname> widget.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_vadjustment">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_vadjustment</function></funcdef>
     <paramdef><classname>GtkAdjustment</classname> <parameter>adjustment</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Allows you to set the <classname>GtkAdjustment</classname> to be used for the vertical aspect of the <classname>GtkCList</classname> widget.
   </shortdesc>
   <desc>
    <simpara>
      Allows you to set the <classname>GtkAdjustment</classname> to be used for the vertical aspect of the <classname>GtkCList</classname> widget.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.get_hadjustment">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkAdjustment</classname> <function>get_hadjustment</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Gets the <classname>GtkAdjustment</classname> currently being used for the horizontal aspect.
   </shortdesc>
   <desc>
    <simpara>
     Gets the <classname>GtkAdjustment</classname> currently being used for the horizontal aspect.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.get_vadjustment">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkAdjustment</classname> <function>get_vadjustment</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Gets the <classname>GtkAdjustment</classname> currently being used for the vertical aspect.
   </shortdesc>
   <desc>
    <simpara>
     Gets the <classname>GtkAdjustment</classname> currently being used for the vertical aspect.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_shadow_type">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_shadow_type</function></funcdef>
     <paramdef><enumname>GtkShadowType</enumname> <parameter>type</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set the outer border (shadow) of the widget
   </shortdesc>
   <desc>
    <simpara>
     Set the outer border (shadow) of the widget. The whole widget is surrounded with a special
     border, which can look flat, inset or outset.     
    </simpara>
    <para>
     You can best see the effect when you add the following lines to the example given in
     the <link linkend="gtk.gtkclist.constructor">constructor</link>:
     <programlisting role="php">
<![CDATA[
$scrolled_win->set_border_width( 10);
$list->set_shadow_type( GTK_SHADOW_ETCHED_OUT);
]]>
     </programlisting>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_selection_mode">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_selection_mode</function></funcdef>
     <paramdef><enumname>GtkSelectionMode</enumname> <parameter>mode</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the selection mode for the specified <classname>CList</classname>.
   </shortdesc>
   <desc>
    <simpara>
     Sets the selection mode for the specified <classname>CList</classname>. 
     This allows you to set whether only one or more than one item can be selected at a time in the widget. 
     Note that setting the widget's selection mode to one of GTK_SELECTION_BROWSE or GTK_SELECTION_SINGLE 
     will cause all the items in the GtkCList to become deselected.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_reorderable">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_reorderable</function></funcdef>
     <paramdef>bool <parameter>reorderable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets whether the CList's rows are re-orderable using drag-and-drop.
   </shortdesc>
   <desc>
    <simpara>
     Sets whether the CList's rows are re-orderable using drag-and-drop. If it is set to true, 
     the user can select one with the mouse, hold the left mouse button and move it to another
     position in the list. The <link linkend="gtk.gtkclist.signal.row-move">row-move</link> 
     signal is emmited when the user did so.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_use_drag_icons">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_use_drag_icons</function></funcdef>
     <paramdef>bool <parameter>use_icons</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Determines whether the <classname>GtkCList</classname> should use icons when doing drag-and-drop operations.
   </shortdesc>
   <desc>
    <simpara>
     Determines whether the <classname>GtkCList</classname> should use icons when doing drag-and-drop operations.
    </simpara>
    <simpara>
     In every case the cursor is changed when moving a selected row. The difference is, that a standard cursor
     is used when the value is set to false, and an icon if it is true. The icon looks nicer, but causes 
     ugly effects sometimes (UI not fully redrawn).
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_button_actions">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_button_actions</function></funcdef>
     <paramdef>int <parameter>button</parameter></paramdef>
     <paramdef><enumname>GtkButtonAction</enumname> <parameter>button_actions</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the action(s) that the specified mouse button will have on the list.
   </shortdesc>
   <desc>
    <simpara>
     Sets the action(s) that the specified mouse button will have on the list.
     The button_actions can be one or several, logically OR'ed 
     <link linkend="gtk.enum.gtkbuttonaction">actions</link>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.freeze">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>freeze</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Causes the GtkCList to stop updating its visuals.
   </shortdesc>
   <desc>
    <simpara>
     Causes the GtkCList to stop updating its visuals until a matching call to 
     <link linkend="gtk.gtkclist.method.thaw">thaw</link> is made. 
     This function is useful if a lot of changes will be made to the widget that may cause a lot of visual updating to occur. 
    </simpara>
    <simpara>
    Note that calls to gtk_clist_freeze() can be nested.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.thaw">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>thaw</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Causes the specified GtkCList to allow visual updates.
   </shortdesc>
   <desc>
    <simpara>
     Causes the specified GtkCList to allow visual updates which were stopped with
     <link linkend="gtk.gtkclist.method.freeze">freeze</link>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.column_titles_show">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>column_titles_show</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Makes the column titles visible.
   </shortdesc>
   <desc>
    <simpara>
     Makes the column titles visible.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.column_titles_hide">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>column_titles_hide</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Hides the column titles.
   </shortdesc>
   <desc>
    <simpara>
     Hides the column titles.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.column_title_active">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>column_title_active</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the specified column to become selectable. 
   </shortdesc>
   <desc>
    <simpara>
     Sets the specified column in the <classname>GtkCList</classname> to become selectable. 
     You can then respond to events from the user 
     <link linkend="gtk.gtkclist.signal.click-column">clicking on a title button</link>, 
     and take appropriate action.
    </simpara>
    <simpara>
     You can make all columns titles active by using
     <link linkend="gtk.gtkclist.method.column_titles_active">column_titles_active</link>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.column_title_passive">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>column_title_passive</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Causes the specified column title button to not respond to events.
   </shortdesc>
   <desc>
    <simpara>
     Causes the specified column title button to become passive, 
     i.e., does not respond to events, such as the user clicking on it.
    </simpara>
    <simpara>
     You can make all columns titles passive by using
     <link linkend="gtk.gtkclist.method.column_titles_passive">column_titles_passive</link>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.column_titles_active">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>column_titles_active</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Causes all column title buttons to become active.
   </shortdesc>
   <desc>
    <simpara>
     Causes all column title buttons to become active. The same as calling
     <link linkend="gtk.gtkclist.method.column_title_active">column_title_active</link> 
     for each single column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.column_titles_passive">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>column_titles_passive</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Causes all column title buttons to become passive.
   </shortdesc>
   <desc>
    <simpara>
     Causes all column title buttons to become passive. The same as calling
     <link linkend="gtk.gtkclist.method.column_title_passive">column_title_passive</link> 
     for each single column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_column_title">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_column_title</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef>string <parameter>title</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set the title of the specified column.
   </shortdesc>
   <desc>
    <simpara>
     Set the title of the specified column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.get_column_title">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_column_title</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the title of the specified column.
   </shortdesc>
   <desc>
    <simpara>
     Returns the title of the specified column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_column_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_column_widget</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets a widget to be used as the specified column's title.
   </shortdesc>
   <desc>
    <simpara>
     Sets a widget to be used as the specified column's title. 
     This can be used to place a pixmap or something else as the column title, instead of the standard text.
    </simpara>
    <example>
     <title>Using a custom widget in title of a <classname>GtkCList</classname></title>
     <programlisting role="php">
<![CDATA[
<?php
if( !extension_loaded('gtk')) {	
	dl( 'php_gtk.' . PHP_SHLIB_SUFFIX); 
}

$win = &new GtkWindow();
$win->set_default_size(250,250);
$win->connect('destroy', 'destroy');

function destroy() {
	Gtk::main_quit();
}

$arStatistics	= array(
 array( 'Paris', 9.1),
 array( 'Moscow', 9.0),
 array( 'London', 6.8),
 array( 'Rome', 3.8),
 array( 'Berlin', 3.4),
 array( 'Athena', 3.0)
);

$scrolled_win = &new GtkScrolledWindow();
$scrolled_win->set_policy( GTK_POLICY_AUTOMATIC, GTK_POLICY_AUTOMATIC);

$list = &new GtkCList( 2, array( "City", "Inhabitants"));

foreach( $arStatistics as $arStat) {
	$list->insert( 0, $arStat);
}

$list->set_column_width( 0, 90);

$list->set_selection_mode( GTK_SELECTION_MULTIPLE);


function mnuActivated( $mnuItem, $strLabel) {
	global $list;
	$chShow	= $strLabel[0];
	for( $nA = 0; $nA < count( $list->row_list); $nA++) {
		$nSize	= $list->get_text( $nA, 1);
		if( $chShow == 'A' || ( $chShow == '<' && $nSize < 5)
		 || ( $chShow == '>' && $nSize >= 5)) {
			$list->select_row( $nA, 0);
		} else {
			$list->unselect_row( $nA, 0);
		}
	}
}

$arMenus	= array( 'All', '> 5 million', '< 5 million', 'none');

$mnuSizes	= &new GtkMenu();
foreach( $arMenus as $strLabel) {
	$mnu = &new GtkMenuItem( $strLabel);
	$mnu->connect( 'activate', 'mnuactivated', $strLabel);
	$mnuSizes->append( $mnu);
}
$mnuSizes->show_all();

$om	= &new GtkOptionMenu();
$om->set_menu( $mnuSizes);

$list->set_column_widget( 1, $om);

$scrolled_win->add( $list);
$win->add( $scrolled_win);
$win->show_all();
GTK::main();
?>
]]>
     </programlisting>
    </example> 
   </desc>
  </method>

  <method id="gtk.gtkclist.method.get_column_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkWidget</classname> <function>get_column_widget</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the custom widget for the given column.
   </shortdesc>
   <desc>
    <simpara>
     Returns the custom widget for the given column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_column_justification">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_column_justification</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef><enumname>GtkJustification</enumname> <parameter>justification</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the justification to be used for all text in the specified column.
   </shortdesc>
   <desc>
    <simpara>
     Sets the justification to be used for all text in the specified column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_column_visibility">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_column_visibility</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef>bool <parameter>visible</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Allows you to set whether a specified column in the GtkCList should be hidden or shown.
   </shortdesc>
   <desc>
    <simpara>
     Allows you to set whether a specified column in the GtkCList should be hidden or shown.
    </simpara>
    <note>
     At least one column must always be showing, so attempting to hide the last visible column will be ignored.
    </note>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_column_resizeable">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_column_resizeable</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef>bool <parameter>resizeable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Lets you specify whether a specified column should be resizeable by the user.
   </shortdesc>
   <desc>
    <simpara>
     Lets you specify whether a specified column should be resizeable by the user. 
     Note that turning on resizeability for the column will automatically shut off 
     auto-resizing, but turning off resizeability will NOT turn on auto-resizing. 
     This must be done manually via a call to 
     <link linkend="gtk.gtkclist.method.set_column_auto_resize">set_column_auto_resize</link>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_column_auto_resize">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_column_auto_resize</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef>bool <parameter>auto_resize</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Lets you specify whether a column should be automatically resized by the widget when data is added or removed.
   </shortdesc>
   <desc>
    <simpara>
     Lets you specify whether a column should be automatically resized by the widget when data is added or removed. 
     Enabling auto-resize on a column explicity disallows user-resizing of the column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.columns_autosize">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>columns_autosize</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Auto-sizes all columns in the CList and returns the total width of the CList.
   </shortdesc>
   <desc>
    <simpara>
     Auto-sizes all columns in the <classname>GtkCList</classname> and returns the total width of the CList.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.optimal_column_width">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>optimal_column_width</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Gets the required width in pixels that is needed to show everything in the specified column.
   </shortdesc>
   <desc>
    <simpara>
     Gets the required width in pixels that is needed to show everything in the specified column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_column_width">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_column_width</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Causes the column specified to be set to a specified width.
   </shortdesc>
   <desc>
    <simpara>
     Causes the column specified for the <classname>GtkCList</classname> 
     to be set to a specified width.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_column_min_width">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_column_min_width</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef>int <parameter>min_width</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Causes the column specified to have a minimum width. 
   </shortdesc>
   <desc>
    <simpara>
     Causes the column specified to have a minimum width, 
     preventing the user from resizing it smaller than that specified. 
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_column_max_width">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_column_max_width</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef>int <parameter>max_width</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Causes the column specified to have a maximum width.
   </shortdesc>
   <desc>
    <simpara>
     Causes the column specified to have a maximum width, 
     preventing the user from resizing it larger than that specified.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_row_height">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_row_height</function></funcdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Causes the GtkCList to have a specified height for its rows.
   </shortdesc>
   <desc>
    <simpara>
     Causes the <classname>GtkCList</classname> to have a specified height for its rows. 
     Setting the row height to 0 allows the GtkCList to adjust automatically to data in the row.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.moveto">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>moveto</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef>double <parameter>row_align</parameter></paramdef>
     <paramdef>double <parameter>col_align</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Tells the CList widget to visually move to the specified row and column.
   </shortdesc>
   <desc>
    <simpara>
     Tells the CList widget to visually move to the specified row and column.
    </simpara>
    <simpara>
     FIXME: Example
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.row_is_visible">
   <funcsynopsis>
    <funcprototype>
     <funcdef><enumname>GtkVisibility</enumname> <function>row_is_visible</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Checks how the specified row is visible.
   </shortdesc>
   <desc>
    <simpara>
     Checks how the specified row is visible.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.get_cell_type">
   <funcsynopsis>
    <funcprototype>
     <funcdef><enumname>GtkCellType</enumname> <function>get_cell_type</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Checks the type of cell at the location specified.
   </shortdesc>
   <desc>
    <simpara>
     Checks the type of cell at the location specified.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_text">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_text</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef>string <parameter>text</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the displayed text in the specified cell.
   </shortdesc>
   <desc>
    <simpara>
     Sets the displayed text in the specified cell.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.get_text">
   <funcsynopsis>
    <funcprototype>
     <funcdef>String <function>get_text</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Gets the text for the specified cell.
   </shortdesc>
   <desc>
    <simpara>
     Gets the text for the specified cell.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_pixmap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_pixmap</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef><classname>GdkPixmap</classname> <parameter>pixmap</parameter></paramdef>
     <paramdef><classname>GdkBitmap</classname> <parameter>mask</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets a pixmap for the specified cell.
   </shortdesc>
   <desc>
    <simpara>
     Sets a pixmap for the specified cell.
    </simpara>
    <simpara>
     Note that the normal text is not visible anymore, you have
     to use <link linkend="gtk.gtkclist.method.set_pixtext">set_pixtext</link> instead.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_pixtext">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_pixtext</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>int <parameter>spacing</parameter></paramdef>
     <paramdef><classname>GdkPixmap</classname> <parameter>pixmap</parameter></paramdef>
     <paramdef><classname>GdkBitmap</classname> <parameter>mask</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets text and a pixmap/bitmap on the specified cell.
   </shortdesc>
   <desc>
    <simpara>
     Sets text and a pixmap/bitmap on the specified cell.
     The spacing parameter is the space between the picture and the pixtext.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_foreground">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_foreground</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef><classname>GdkColor</classname> <parameter>color</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the foreground color for the specified row.
   </shortdesc>
   <desc>
    <simpara>
     Sets the foreground color for the specified row.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_background">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_background</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef><classname>GdkColor</classname> <parameter>color</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the background color for the specified row.
   </shortdesc>
   <desc>
    <simpara>
     Sets the background color for the specified row.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_cell_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_cell_style</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef><classname>GtkStyle</classname> <parameter>style</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the style for the specified cell.
   </shortdesc>
   <desc>
    <simpara>
     Sets the style for the specified cell.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.get_cell_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkStyle</classname> <function>get_cell_style</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Gets the current style of the specified cell.
   </shortdesc>
   <desc>
    <simpara>
     Gets the current style of the specified cell.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_row_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_row_style</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef><classname>GtkStyle</classname> <parameter>style</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the style for all cells in the specified row.
   </shortdesc>
   <desc>
    <simpara>
     Sets the style for all cells in the specified row.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.get_row_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkStyle</classname> <function>get_row_style</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Gets the style set for the specified row.
   </shortdesc>
   <desc>
    <simpara>
     Gets the style set for the specified row.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_shift">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_shift</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef>int <parameter>vertical</parameter></paramdef>
     <paramdef>int <parameter>horizontal</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the vertical and horizontal shift of the specified cell.
   </shortdesc>
   <desc>
    <simpara>
     Sets the vertical and horizontal shift of the specified cell.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_selectable">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_selectable</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>bool <parameter>selectable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets whether the specified row is selectable or not.
   </shortdesc>
   <desc>
    <simpara>
     Sets whether the specified row is selectable or not. This is useful if you want
     to separate rows from each other to e.g. categorize them. You should also set
     the <link linkend="gtk.gtkclist.method.set_background">background color</link>
     so that the user can distinguish between selectable and not selectable
     cells.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.get_selectable">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_selectable</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Gets whether the specified row is selectable or not.
   </shortdesc>
   <desc>
    <simpara>
     Gets whether the specified row is selectable or not.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.prepend">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>prepend</function></funcdef>
     <paramdef>Array <parameter>text</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds a row to the list at the top.
   </shortdesc>
   <desc>
    <simpara>
     Adds a row to the list at the top. The parameter is an array
     of strings, one for each column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.append">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>append</function></funcdef>
     <paramdef>Array <parameter>text</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds a row to the list at the bottom.
   </shortdesc>
   <desc>
    <simpara>
     Adds a row to the list at the bottom. The parameter is an array
     of strings, one for each column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.insert">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>insert</function></funcdef>
     <paramdef>Array <parameter>text</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds a row of text to the list at the specified position.
   </shortdesc>
   <desc>
    <simpara>
     Adds a row of text to the list at the specified position. 
     The parameter is an array of strings, one for each column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.remove">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Removes the specified row from the list.
   </shortdesc>
   <desc>
    <simpara>
     Removes the specified row from the list.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.select_row">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>select_row</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Selects the specified row.
   </shortdesc>
   <desc>
    <simpara>
     Selects the specified row. 
     Causes the 
     "<link linkend="gtk.gtkclist.signal.select-row">select-row</link>"
     signal to be emitted for the specified row and column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.unselect_row">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>unselect_row</function></funcdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Unselects the specified row.
   </shortdesc>
   <desc>
    <simpara>
     Unselects the specified row. 
     Causes the 
     "<link linkend="gtk.gtkclist.signal.select-row">unselect-row</link>" 
     signal to be emitted for the specified row and column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.undo_selection">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>undo_selection</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Undoes the last selection for an "extended selection mode" list.
   </shortdesc>
   <desc>
    <simpara>
     Undoes the last selection for an 
     "extended <link linkend="gtk.gtkclist.method.set_selection_mode">selection mode</link>"
     list.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.clear">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>clear</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Removes all the rows.
   </shortdesc>
   <desc>
    <simpara>
     Removes all the rows from the list.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.select_all">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>select_all</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Selects all rows in the CList.
   </shortdesc>
   <desc>
    <simpara>
     Selects all rows in the CList. 
     This function has no affect for a list in "single" or "browse" 
     <link linkend="gtk.gtkclist.method.set_selection_mode">selection mode</link>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.unselect_all">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>unselect_all</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Unselects all rows in the list.
   </shortdesc>
   <desc>
    <simpara>
     Unselects all rows in the list.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.swap_rows">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>swap_rows</function></funcdef>
     <paramdef>int <parameter>row1</parameter></paramdef>
     <paramdef>int <parameter>row2</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Swaps the two specified rows with each other.
   </shortdesc>
   <desc>
    <simpara>
     Swaps the two specified rows with each other.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.row_move">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>row_move</function></funcdef>
     <paramdef>int <parameter>source_row</parameter></paramdef>
     <paramdef>int <parameter>dest_row</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Allows you to move a row from one position to another in the list.
   </shortdesc>
   <desc>
    <simpara>
     Allows you to move a row from one position to another in the list.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_sort_column">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_sort_column</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the sort column of the clist.
   </shortdesc>
   <desc>
    <simpara>
     Sets the sort column of the clist. 
     The sort column is used by the default compare function to determine which column to 
     <link linkend="gtk.gtkclist.method.sort">sort</link>by.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_sort_type">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_sort_type</function></funcdef>
     <paramdef><enumname>GtkSortType</enumname> <parameter>sort_type</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the sort type of the GtkClist.
   </shortdesc>
   <desc>
    <simpara>
     Sets the sort type (direction) of the <classname>GtkClist</classname>.
     This is either GTK_SORT_ASCENDING for ascening sort or GTK_SORT_DESCENDING for descending 
     <link linkend="gtk.gtkclist.method.sort">sort</link>.
    </simpara>
    <simpara>
     It can be read via the <propname class="GtkCList">sort_type</propname>
     property.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.sort">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>sort</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sorts the list.
   </shortdesc>
   <desc>
    <simpara>
     Sorts the GtkClist according to the settings of
     <link linkend="gtk.gtkclist.method.set_sort_column">sort column</link>
     and
     <link linkend="gtk.gtkclist.method.set_sort_type">sort type</link>.
     The sort function knows to distinguish between 
     <link linkend="gtk.gtkclist.method.set_text">normal text</link>
     and 
     <link linkend="gtk.gtkclist.method.set_pixtext">pixtext</link>,
     so that a mixture of normal and pixtext will be sorted right.
    </simpara>
    <simpara>
     The items are handled as text when being compared, so numbers will
     be not in a "natural" order.
    </simpara>
    <para>
     Here is an example how to let the user sort the list by columns when
     he clicks on a column title. The sort order (type) is changed everytime he clicks
     on the same column title.
     <example>
      <title>Sorting GtkCList rows by clicking the title</title>
      <programlisting role="php">
<![CDATA[
function sortList( $objList, $nColumn)
{
	if( $nColumn != $objList->sort_column ) {
		$objList->set_sort_column( $nColumn);
		$objList->set_sort_type( GTK_SORT_ASCENDING);
	} else {
		if( $objList->sort_type == GTK_SORT_ASCENDING) {
			$objList->set_sort_type( GTK_SORT_DESCENDING);
		} else {
			$objList->set_sort_type( GTK_SORT_ASCENDING);
		}
	}
	$objList->sort();
}
$objList->connect( 'click-column', 'sortList');
]]>
      </programlisting>
     </example>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkclist.method.set_auto_sort">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_auto_sort</function></funcdef>
     <paramdef>bool <parameter>auto_sort</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Turns on or off auto sort of the GtkCList.
   </shortdesc>
   <desc>
    <simpara>
     Turns on or off auto sort of the <classname>GtkCList</classname>.
     If auto sort is on, then the list will be resorted when a row is inserted into the list.
    </simpara>
   </desc>
  </method>

 </methods>

 
 
 
 <signals>

  <signal id="gtk.gtkclist.signal.select-row">
   <signalname>select-row</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkCList</classname> <parameter>widget</parameter></paramdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef><classname>GdkEvent</classname> <parameter>event</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    This signal is emitted when the user selects a row in the list.
   </shortdesc>
   <desc>
    <simpara>
     This signal is emitted when the user selects a row in the list. 
     It is emitted for every row that is selected in a multi-selection or by calling 
     <link linkend="gtk.gtkclist.method.select_all">select_all</link>.
    </simpara>
   </desc>
  </signal>

  <signal id="gtk.gtkclist.signal.unselect-row">
   <signalname>unselect-row</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkCList</classname> <parameter>widget</parameter></paramdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef><classname>GdkEvent</classname> <parameter>event</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    This signal is emitted when the user unselects a row in the list.
   </shortdesc>
   <desc>
    <simpara>
     This signal is emitted when the user unselects a row in the list. 
     It is emitted for every row that is unselected in a multi-selection or by calling 
     <link linkend="gtk.gtkclist.method.unselect_all">unselect_all</link>.
     It is also emitted for the previously selected row in a "single" or "browse" 
     <link linkend="gtk.gtkclist.method.set_selection_mode">mode</link> GtkCList.
    </simpara>
   </desc>
  </signal>

  <signal id="gtk.gtkclist.signal.row-move">
   <signalname>row-move</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkCList</classname> <parameter>widget</parameter></paramdef>
     <paramdef>int <parameter>source_row</parameter></paramdef>
     <paramdef>int <parameter>destination_row</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    This signal is emitted when a row is moved.
   </shortdesc>
   <desc>
    <simpara>
     This signal is emitted when a row is moved.
    </simpara>
   </desc>
  </signal>

  <signal id="gtk.gtkclist.signal.click-column">
   <signalname>click-column</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkCList</classname> <parameter>widget</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    This signal is emitted when a column title is clicked.
   </shortdesc>
   <desc>
    <simpara>
     This signal is emitted when a column title is clicked. Here would be a good
     starting point if you want to make the list sortable by the user.
    </simpara>
   </desc>
  </signal>

  <signal id="gtk.gtkclist.signal.resize-column">
   <signalname>resize-column</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkCList</classname> <parameter>widget</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
     <paramdef>int <parameter>size</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    This signal is emitted when a column is resized.
   </shortdesc>
   <desc>
    <simpara>
     This signal is emitted when a column is resized. It is also 
     emitted if the size has not changed (but the user tried to).
    </simpara>
   </desc>
  </signal>

 </signals>
 
  
 
 
 <properties>
  <prop id="gtk.gtkclist.property.focus_row" type="ro">
   <propname>focus_row</propname>
   <proptype>int</proptype>
   <shortdesc>
    Number of the row having the focus.
   </shortdesc>
   <desc>
    <simpara>
     Returns the number of the row which currently
     has the focus. Note that the focus doesn't mean the
     row is selected - see <enumname>GtkSelectionMode</enumname>
     for a detailed explanation.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkclist.property.rows" type="ro">
   <propname>rows</propname>
   <proptype>int</proptype>
   <shortdesc>
    Returns the number of rows.
   </shortdesc>
   <desc>
    <simpara>
     Returns the number of rows/entries in the list.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkclist.property.row_list" type="ro">
   <propname>row_list</propname>
   <proptype>array</proptype>
   <shortdesc>
    Returns all rows in the list.
   </shortdesc>
   <desc>
    <simpara>
     Returns an array of <classname>GtkCListRow</classname>s
     containing all the rows of the list.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkclist.property.selection" type="ro">
   <propname>selection</propname>
   <proptype>array</proptype>
   <shortdesc>
    Array of selected rows.
   </shortdesc>
   <desc>
    <simpara>
     Returns an array of int values which describe the row
     number of the selected row. This is independent of the
     <propname class="GtkCList">selection_mode</propname> - 
     it is always an array.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkclist.property.selection_mode" type="ro">
   <propname>selection_mode</propname>
   <proptype><enumname>GtkSelectionMode</enumname></proptype>
   <shortdesc>
    Returns the current selection mode.
   </shortdesc>
   <desc>
    <simpara>
     Returns the current selection mode set with
     <function class="GtkCList">set_selection_mode</function>.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkclist.property.sort_column" type="ro">
   <propname>sort_column</propname>
   <proptype>int</proptype>
   <shortdesc>
    The current row after which the list shall be sorted.
   </shortdesc>
   <desc>
    <simpara>
     The current row after which the list shall be 
     <link linkend="gtk.gtkclist.method.sort">sorted</link>.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkclist.property.sort_type" type="ro">
   <propname>sort_type</propname>
   <proptype><enumname>GtkSortType</enumname></proptype>
   <shortdesc>
    The current sort type (order).
   </shortdesc>
   <desc>
    <simpara>
     The current sort type (order) after which the list shall be 
     <link linkend="gtk.gtkclist.method.sort">sorted</link>.
     Can be GTK_SORT_ASCENDING or GTK_SORT_DESCENDING.
    </simpara>
   </desc>
  </prop>

 </properties>

</classentry>
