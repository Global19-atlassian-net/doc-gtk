<?xml version="1.0" encoding="ISO-8859-1" ?>
<classentry id="gtk.gtkmenuitem">
 <classmeta>
  <classtitle>GtkMenuItem</classtitle>
  <classparent>GtkItem</classparent>
  <shortdesc>
   Widget used for item in menus.
  </shortdesc>
  <desc>
   <simpara>
    A <classname>GtkMenuItem</classname> is a container widget that can
    be packed into a <classname>GtkMenu</classname> or 
    <classname>GtkMenuBar</classname>, containing a
    <classname>GtkAccelLabel</classname> and capable of being associated
    with a submenu.
   </simpara>
  </desc>
 </classmeta>

 <constructor id="gtk.gtkmenuitem.constructor">
  <funcsynopsis>
   <funcprototype>
    <funcdef> <function>GtkMenuItem</function></funcdef>
    <paramdef>string 
     <parameter><optional>label</optional></parameter>
    </paramdef>
   </funcprototype>
  </funcsynopsis>
  <shortdesc>
   Creates a menu item.
  </shortdesc>
  <desc>
   <para>
    The syntax
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php

$menuitem = &new GtkMenuItem("Edit");

?>
]]>
     </programlisting>
    </informalexample>
    will create a single item in a menu with the label 
    <literal>Edit</literal>.  However this label is really a 
    <classname>GtkAccelLabel</classname>, and has the ability to display
    any keyboard shortcuts - known as <literal>accelerators</literal> - 
    associated with it.
   </para>
   <para>
    For more information on setting up accelerator display in this way,
    see <function class="GtkWidget">add_accelerator</function>.  There is
    also a working example in the 
    <link linkend="gtk.gtkmenu.constructor">GtkMenu constructor</link> 
    section of this manual.
   </para>
   <simpara>
    Underlining an accelerator key within the label text is a separate issue, 
    and can be achieved by calling the <classname>GtkLabel</classname> method 
    <function class="GtkLabel">parse_uline</function> from the accelerator
    label.  A string passed using this method will overwrite any existing
    text in the label.
   </simpara>
   <simpara>
    Much of the above is to some extent automated in the 
    <classname>GtkItemFactory</classname> API, and different methods may apply
    when setting up a <classname>GtkItemFactory</classname>-generated menu.
   </simpara>
   <para>
    Note that it is not possible to add a 
    <classname>GtkHSeparator</classname> object to either a 
    <classname>GtkMenuItem</classname> or a <classname>GtkMenu</classname>. 
    The current workaround for this is to create an empty menu item and then
    toggle its sensitivity so that it cannot be inadvertently selected by the
    end user:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php

$separatoritem = &new GtkMenuItem();
$separatoritem->set_sensitive(false);
$menu->append($separatoritem);

?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </desc>
 </constructor>

 <methods>

  <method id="gtk.gtkmenuitem.method.set_submenu">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_submenu</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>submenu</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets a <classname>GtkMenu</classname> as submenu.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuItem">set_submenu</function> sets the
     instance of <classname>GtkMenu</classname> passed as the parameter to
     be a submenu for the calling <classname>GtkMenuItem</classname>.
    </simpara>
    <simpara>
     The submenu will be displayed whenever the calling menu item is
     selected.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkmenuitem.method.remove_submenu">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_submenu</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Removes a pre-existing submenu.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuItem">remove_submenu</function> is the 
     <classname>GtkMenuItem</classname>-specific version of the 
     <function class="GtkContainer">remove</function> found in 
     <classname>GtkContainer</classname>.  It is useful where a submenu
     needs to be removed or altered under given conditions within a script.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkmenuitem.method.set_placement">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_placement</function></funcdef>
     <paramdef>
      <enumname>GtkSubmenuPlacement</enumname> 
      <parameter>placement</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Toggles placement of submenu relative to parent.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuItem">set_placement</function> toggles the
     placement of the submenu relative to its parent.  This method is used
     internally to ensure that the submenu is always displayed within the
     visible screen area when it is activated.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkmenuitem.method.configure">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>configure</function></funcdef>
     <paramdef>int <parameter>show_toggle_indicator</parameter></paramdef>
     <paramdef>int <parameter>show_submenu_indicator</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Toggles indicators.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuItem">configure</function> is intended to
     set the visibility of both the toggle and submenu indicator.  However
     these are set internally in GTK+ to be <literal>true</literal> when
     appropriate and cannot be overridden, and although not marked as such
     this method has been eliminated from later revisions of GTK+.
    </simpara>
    <!-- So let's get rid of it, right? - sf jan 02 -->
   </desc>
  </method>

  <method id="gtk.gtkmenuitem.method.select">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>select</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emits the <signalname class="GtkItem">select</signalname> signal.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuItem">select</function> makes the calling 
     <classname>GtkMenuItem</classname> emit the 
     <signalname class="GtkItem">select</signalname> signal inherited from 
     <classname>GtkItem</classname>.
    </simpara>
    <simpara>
     In the <classname>GtkMenuItem</classname> widget, the emission of the
     <signalname class="GtkItem">select</signalname> signal causes the
     widget to display its prelight <enumname>GtkStateType</enumname> and
     pops up its submenu, if it has one.
    </simpara>
    <simpara>
     Note that the <signalname class="GtkItem">select</signalname> signal
     is also emitted whenever a <classname>GtkMenuItem</classname> is
     entered by the cursor, and by the first item in a 
     <classname>GtkMenu</classname> when it is popped up.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkmenuitem.method.deselect">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>deselect</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emits the <signalname class="GtkItem">deselect</signalname> signal.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuItem">deselect</function> makes the calling 
     <classname>GtkMenuItem</classname> emit the 
     <signalname class="GtkItem">deselect</signalname> signal inherited from 
     <classname>GtkItem</classname>.
    </simpara>
    <simpara>
     In the <classname>GtkMenuItem</classname> widget, the emission of the
     <signalname class="GtkItem">deselect</signalname> signal causes the
     widget to display its normal <enumname>GtkStateType</enumname> and
     pops down its submenu, if it has one.
    </simpara>
    <simpara>
     Note that the <signalname class="GtkItem">deselect</signalname> signal
     is also emitted whenever the cursor leaves the screen area of a menu
     item.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkmenuitem.method.activate">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>activate</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emits the <signalname class="GtkMenuItem">activate</signalname> signal.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuItem">activate</function> causes the calling
     <classname>GtkMenuItem</classname> to emit the 
     <signalname class="GtkMenuItem">activate</signalname> signal as if the
     user had clicked on it.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkmenuitem.method.right_justify">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>right_justify</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets item to the right of a <classname>GtkMenuBar</classname>.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkMenuItem">right_justify</function> sets a
     <classname>GtkMenuItem</classname> to the right of the
     <classname>GtkMenuBar</classname> it is appended to.  It has no
     effect in any other situation, and can only be used on the menu item
     taking the final position in the menu bar's array of items.
    </simpara>
   </desc>
  </method>

 </methods>

 <signals>

  <signal id="gtk.gtkmenuitem.signal.activate">
   <signalname>activate</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkMenuItem</classname> menuitem</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emitted when menu item is chosen.
   </shortdesc>
   <desc>
    <simpara>
     The <signalname class="GtkMenuItem">activate</signalname> signal is
     emitted when the user presses a mouse button while the cursor is over
     the widget, or hits the <literal>Enter</literal> key or 
     <literal>spacebar</literal> while the widget is selected, or if the
     <function class="GtkMenuItem">activate</function> method has been
     called from within the program by the widget, or if the 
     <function class="GtkMenuShell">activate_item</function> method has
     been called from within the program by the widget's parent.
    </simpara>
    <simpara>
     It is also defined as the accelerator signal, so that any accelerator
     key associated with the widget will also emit the 
     <signalname class="GtkMenuItem">activate</signalname>.when pressed, 
     whether the widget is currently selected or not.
    </simpara>
    <simpara>
     On activation, all <classname>GtkMenu</classname> widgets that are a
     part of the cascading selection sequence disappear from the screen, 
     regardless of whether or not the <classname>GtkMenuItem</classname> 
     has its <signalname class="GtkMenuItem">activate</signalname> signal
     connected to a function within the program.
    </simpara>
   </desc>
  </signal>

  <signal id="gtk.gtkmenuitem.signal.activate-item">
   <signalname>activate-item</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkMenuItem</classname> menuitem</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Fired when <function class="GtkMenuShell">activate_item</function> is
    called.
   </shortdesc>
   <desc>
    <simpara>
     The <signalname class="GtkMenuItem">activate-item</signalname> signal is
     fired when <function class="GtkMenuShell">activate_item</function> is
     called from a <classname>GtkMenuShell</classname> object.  It is used
     internally in order to provide an indirect means of firing the 
     <signalname class="GtkMenuItem">activate</signalname> signal.
    </simpara>
    <simpara>
     If you have called the 
     <function class="GtkMenuShell">activate_item</function> method, you
     will need to <function class="GtkObject">connect</function> the
     appropriate <classname>GtkMenuItem</classname> to the 
     <signalname class="GtkMenuItem">activate</signalname> signal.
    </simpara>
   </desc>
  </signal>

</signals>

</classentry>
