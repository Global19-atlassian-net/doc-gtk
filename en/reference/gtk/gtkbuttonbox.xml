<classentry id="gtk.gtkbuttonbox">
 <classmeta>
  <classtitle>GtkButtonBox</classtitle>
  <classparent>GtkBox</classparent>
  <shortdesc>
   Base class for <classname>GtkHButtonBox</classname> and
   <classname>GtkVButtonBox</classname>.
  </shortdesc>
  <desc>
   <simpara>
    <classname>GtkButtonBox</classname> is a base class providing a series
    of layout options for buttons packed into 
    <classname>GtkHButtonBox</classname> and
    <classname>GtkVButtonBox</classname> container widgets.
   </simpara>
   <note>
    <simpara>
     Please note that in GTK+ 2.0 all reference to <literal>spacing</literal> 
     will be completely removed; this is because these values are always
     relative in <classname>GtkButtonBox</classname> classes, and should be
     adjusted internally.
    </simpara>
   </note>
  </desc>
 </classmeta>

 <methods>

  <method id="gtk.gtkbuttonbox.method.get_spacing">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_spacing</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns spacing between buttons.  *deprecated in GTK2*
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkButtonBox">get_spacing()</function> returns the
     integer value representing the spacing in pixels between the buttons
     contained in a <classname>GtkButtonBox</classname>.
    </simpara>
    <note>
     <simpara>
      Note that this method is deprecated in GTK+ 2.0 and should not be used
      where forward compatibility is an issue.
     </simpara>
    </note>
   </desc>
  </method>

  <method id="gtk.gtkbuttonbox.method.get_layout">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <enumname>GtkButtonBoxStyle</enumname> 
      <function>get_layout</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retrieves the layout style setting.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkButtonBox">get_layout()</function> retrieves the
     current <enumname>GtkButtonBoxStyle</enumname> setting.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkbuttonbox.method.set_spacing">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_spacing</function></funcdef>
     <paramdef>int <parameter>spacing</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets spacing between buttons.  *deprecated in GTK2*
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkButtonBox">set_spacing()</function> sets the spacing
     between the buttons, in pixels.  See also gtk::
     <function ref="functions">hbutton_box_set_spacing_default()</function> or
     gtk::<function 
ref="functions">vbutton_box_set_spacing_default()</function> 
     to set the spacing default across an entire application.  If you don't
     change it, the default setting is currently <literal>10</literal> pixels
     for <classname>GtkVButtonBox</classname>, or <literal>30</literal> for 
     <classname>GtkHButtonBox</classname>.
    </simpara>
    <note>
     <simpara>
      Note that this method is deprecated in GTK+ 2.0.  Where forward
      compatibility is an issue, use 
      <function class="GtkButtonBox">set_layout()</function> instead.
     </simpara>
    </note>
   </desc>
  </method>

  <method id="gtk.gtkbuttonbox.method.set_layout">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_layout</function></funcdef>
     <paramdef>
      <enumname>GtkButtonBoxStyle</enumname> 
      <parameter>layout_style</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the button layout style.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkButtonBox">set_layout()</function> sets the
     spacing arrangement of the buttons in accordance with one of the five
     <enumname>GtkButtonBoxStyle</enumname> settings.
    </simpara>
    <simpara>
     The default setting is always the
     <optionname>GTK_BUTTONBOX_DEFAULT_STYLE</optionname>, which is itself
     pre-set to <optionname>GTK_BUTTONBOX_EDGE</optionname>.  This can be
     reset for an entire application by using gtk::
     <function ref="functions">hbutton_box_set_layout_default()</function> or
     gtk::<function 
ref="functions">vbutton_box_set_layout_default()</function>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkbuttonbox.method.set_child_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_child_size</function></funcdef>
     <paramdef>int <parameter>min_width</parameter></paramdef>
     <paramdef>int <parameter>min_height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets minimum child size.  *deprecated in GTK2*
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkButtonBox">set_child_size()</function> sets the
     minimum size for any child in the <classname>GtkButtonBox</classname>
     widget, in pixels.
    </simpara>
    <simpara>
     The default setting is <literal>(85, 27)</literal>.
    </simpara>
    <note>
     <simpara>
      Note that this method is deprecated, and that minimum sizing
      will be set internally in future versions of GTK+.
     </simpara>
    </note>
   </desc>
  </method>

  <method id="gtk.gtkbuttonbox.method.set_child_ipadding">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_child_ipadding</function></funcdef>
     <paramdef>int <parameter>ipad_x</parameter></paramdef>
     <paramdef>int <parameter>ipad_y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets child's internal padding.  *deprecated in GTK2*
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkButtonBox">set_child_ipadding()</function> sets
     the amount to increase the width and height of the space requested
     by the buttons.
    </simpara>
    <simpara>
     The default settings are currently <literal>(7, 0)</literal>.
    </simpara>
    <note>
     <simpara>
      Note that this method is deprecated, and that internal padding will
      be set by the widget itself in future versions of GTK+.
     </simpara>
    </note>
   </desc>
  </method>

 </methods>

</classentry>
