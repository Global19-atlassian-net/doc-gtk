<?xml version="1.0" encoding="ISO-8859-1" ?>
<classentry id="gtk.gtkrange">
 <classmeta>
  <classtitle>GtkRange</classtitle>
  <classparent>GtkWidget</classparent>
  <shortdesc>
   Base class for widgets that manipulate the value of a <classname>GtkAdjustment</classname>.
  </shortdesc>
  <desc>
   <simpara>
    <classname>GtkRange</classname> is the base class for widgets that allow a user to manipulate the value of a <classname>GtkAdjustment</classname>. In PHP-GTK 1.0 those widgets are <classname>GtkScale</classname> and <classname>GtkScrollbar</classname>. 
   </simpara>
   <simpara>
    <classname>GtkRange</classname> is an abstract class and may not be directly instantiated.
   </simpara>
  </desc>
 </classmeta>

 <methods>

  <method id="gtk.gtkrange.method.get_adjustment">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkAdjustment</classname> 
      <function>get_adjustment</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the widget's adjustment child.
   </shortdesc>
   <desc>
    <simpara>
     Returns the widget's adjustment child. The returned value should be assigned by reference if you want method calls and other changes to be shown in the adjustment's parent widget.
    </simpara>
    <para>
     <example>
      <title>Change the current value of an HScale</title>
      <programlisting role="php">
<![CDATA[
<?php
// Create an hScale object
$hScale = &new GtkHScale(new GtkAdjustment(.5, 0, 1, .1, .1, .1));

// Get the adjustment from the hScale
$adj =& $hScale->get_adjustment();

// Set the value to zero
$adj->set_value(0);
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     See also: <function class="GtkRange">set_adjustment</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkrange.method.set_adjustment">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>set_adjustment</function>
     </funcdef>
     <paramdef>
      <classname>GtkAdjustment</classname> 
      <parameter>adjustment</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the adjustment child.
   </shortdesc>
   <desc>
    <simpara>
     Sets the adjustment child to <parameter>adjustment</parameter>. This allows you to change the range of values that scale or scroll operates on without recreating the scale or scroll. For instance, if the user narrows the range of acceptable values from 0-100 down to 20-30, all you have to do is replace the <classname>GtkAdjustment</classname>.
    </simpara>
    <simpara>
     See also: <function class="GtkRange">get_adjustment</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkrange.method.set_update_policy">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_update_policy</function></funcdef>
     <paramdef>
      <enumname>GtkUpdateType</enumname> 
      <parameter>policy</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the widgets update policy.
   </shortdesc>
   <desc>
    <simpara>
     Sets the widgets update policy to <parameter>policy</parameter>.  The update policy describes when the value of the adjustment is changed. When <parameter>policy</parameter> is <enumname>GTK_UPDATE_CONTINUOUS</enumname>, the value of the adjustment is updated while the slider is being moved. If <parameter>policy</parameter> is <enumname>GTK_UPDATE_DELAYED</enumname>, the value of the adjustment will be updated when the user has stopped moving the slider. When <parameter>policy</parameter> is set to <enumname>GTK_UPDATE_DISCONTINUOUS</enumname>, the value of the adjustment will not be changed until the user has released the mouse button and ended the slider drag operation.
    </simpara>
    <simpara>
     Anytime the value of the adjustment is changed, the <signalname class="GtkAdjustment">value-changed</signalname> signal is emitted.
    </simpara>
    <para>
     <example>
      <title>Update Policies</title>
      <programlisting role="php">
<![CDATA[
<?php
// A function to see what is happening.
function valueChange() {
  echo "A value was changed!\n";
}

// A window and frame for testing.
$window = &new GtkWindow;
$frame  = &new GtkFrame('Test Area');

// Create an hscale.
$hScale = &new GtkHScale(new GtkAdjustment(.5, 0, 1, .05, .05, .05));

// Connect the adjustment signal to the above function.
$adj =& $hScale->get_adjustment();
$adj->connect('value-changed', 'valueChanged');

// Switch the uncommented line to see what affect the policy has.
$hScale->set_update_policy(GTK_UPDATE_CONTINUOUS);
//$hScale->set_update_policy(GTK_UPDATE_DELAYED);
//$hScale->set_update_policy(GTK_UPDATE_DISCONTINUOUS);

$frame->add($hScale);
$window->show_all();
gtk::main();
?>
]]>
      </programlisting>
     </example>
    </para>
   </desc>
  </method>

  <!-- 
   The following methods have been commented out because they are all abstratct
   and should not be called in code.
  <method id="gtk.gtkrange.method.draw_background">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>draw_background</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Abstract method.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkrange.method.clear_background">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>clear_background</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Abstract method.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkrange.method.draw_trough">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>draw_trough</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Abstract method.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkrange.method.draw_slider">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>draw_slider</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Abstract method.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkrange.method.draw_step_forw">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>draw_step_forw</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Abstract method.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkrange.method.draw_step_back">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>draw_step_back</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Abstract method.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkrange.method.slider_update">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>slider_update</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Abstract method.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkrange.method.default_hslider_update">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>default_hslider_update</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Abstract method.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkrange.method.default_vslider_update">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>default_vslider_update</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Abstract method.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkrange.method.default_hmotion">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>default_hmotion</function></funcdef>
     <paramdef>int <parameter>xdelta</parameter></paramdef>
     <paramdef>int <parameter>ydelta</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Abstract method.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkrange.method.default_vmotion">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>default_vmotion</function></funcdef>
     <paramdef>int <parameter>xdelta</parameter></paramdef>
     <paramdef>int <parameter>ydelta</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Abstract method.
   </shortdesc>
   <desc>

   </desc>
  </method>
  -->
 </methods>

</classentry>
