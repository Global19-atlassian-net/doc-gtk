<?xml version="1.0" encoding="ISO-8859-1" ?>
<classentry id="gtk.gtktree">
 <classmeta>
  <classtitle>GtkTree</classtitle>
  <classparent>GtkContainer</classparent>
  <shortdesc>
   Widget for displaying hierarchical information.
  </shortdesc>
  <desc>
   <simpara>
    A <classname>GtkTree</classname> is a structure for displaying hierchical
    information. A tree may contain one or more nodes which themselves may
    contain other trees, thus creating levels or groups of nodes. A tree can be
    used to display information such as a map of a website or the files and
    folders of a directory.
   </simpara>
  </desc>
 </classmeta>

 <constructor id="gtk.gtktree.constructor">
  <funcsynopsis>
   <funcprototype>
    <funcdef>
     <function>GtkTree</function>
    </funcdef>
    <paramdef>void</paramdef>
   </funcprototype>
  </funcsynopsis>
  <shortdesc>
   Creates a new GtkTree.
  </shortdesc>
  <desc>
   <simpara>
    Creates a new instance of a <classname>GtkTree</classname>.
   </simpara>
   <simpara>
    Because <classname>GtkTree</classname> extends 
    <classname>GtkContainer</classname>, it may contain one or more children. 
    These children should be <classname>GtkTreeItem</classname> widgets. 
   </simpara>
   <para>
    <example>
     <title>Building a tree of a file structure.</title>
     <programlisting role="php">
<![CDATA[
<?php
dl('php_gtk.' . (strstr(PHP_OS, 'WIN') ? 'dll' : 'so'));

// Creates a tree representing a directory.
function &createTreeFromDirectory($dir)
{
  // Create a new tree
  $tree = &new GtkTree;

  // Make sure dir is a directory
  if (is_dir($dir)) {
    // Open directory and read in file names
    $dir_handle = opendir($dir);
    while (($file = readdir($dir_handle)) !== false) {
      // Create a new tree item for each file
      $treeItem = &new GtkTreeItem($file);
      $treeItem->show();
      // Add the tree item to the tree
      $tree->append($treeItem);
      // If the file is a directory and not . or .. call
      // this function recursively
      if (is_dir($dir . '/' . $file) && strpos($file, '.') !== 0) {
	$treeItem->set_subtree(createTreeFromDirectory($dir . '/' . $file));
      } 
    }
    // Close the directory
    closedir($dir_handle);
  }
  // Return the tree
  return $tree;
}
// The directory to display
$directory = '/path/to/some/directory';

// Create a window to display the file structure
$window = &new GtkWindow;

// Add a frame
$frame = &new GtkFrame($directory);
$window->add($frame);

// Add the tree
$tree = createTreeFromDirectory($directory);
$frame->add($tree);

$window->show_all();
gtk::main();
?>
]]>
     </programlisting>
    </example>
   </para>
  </desc>
 </constructor>

 <methods>

  <method id="gtk.gtktree.method.append">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>append</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>tree_item</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds a node to the end of the tree.
   </shortdesc>
   <desc>
    <simpara>
     Adds <parameter>tree_item</parameter> to the end of the tree.
    </simpara>
    <para>
     <example>
      <title>Appending nodes to a tree</title>
      <programlisting role="php">
<![CDATA[
$tree = &new GtkTree;
$nodes = array('These nodes', 'were added', 'in this order');

// Add the nodes.  When displayed they will be in readable order.
foreach ($nodes as $node) {
  $item = &new GtkTreeItem($node);
  $tree->append($item);
}
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     See also: <function class="GtkTree">prepend</function>,
               <function class="GtkTree">insert</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktree.method.prepend">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>prepend</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>tree_item</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds a node to the begining of the tree.
   </shortdesc>
   <desc>
    <simpara>
     Adds <parameter>tree_item</parameter> to the begining of the tree. The first
     node of the tree is in position zero.
    </simpara>
    <simpara>
     See also: <function class="GtkTree">append</function>,
               <function class="GtkTree">insert</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktree.method.insert">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>insert</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>tree_item</parameter>
     </paramdef>
     <paramdef>int
      <parameter>position</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds a node to the tree in the given position.
   </shortdesc>
   <desc>
    <simpara>
     Adds <parameter>tree_item</parameter> to the tree at
     <parameter>position</parameter>. The first node of the tree is in position
     zero.
    </simpara>
    <para>
     If <parameter>position</parameter> is greater than the first empty position,
     <parameter>tree_item</parameter> is put in the first empty position.
     <example>
      <title>Inserting a tree item</title>
      <programlisting role="php">
<![CDATA[
<?php
dl('php_gtk.' . (strstr(PHP_OS, 'WIN') ? 'dll' : 'so'));

// Create a tree
$tree = &new GtkTree;

// Create a tree item
$treeItem = &new GtkTreeItem('A tree item');

// Insert the tree item into the 100th position.
$tree->insert($treeItem, 100);

// Check the position of the tree item.
echo $tree->child_position($treeItem); // Outputs 0
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     See also: <function class="GtkTree">append</function>,
               <function class="GtkTree">prepend</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktree.method.remove_item">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>remove_item</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>child</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Removes a node from a tree.
   </shortdesc>
   <desc>
    <simpara>
     Removes <parameter>child</parameter> from the tree.
    </simpara>
    <simpara>
     If <parameter>child</parameter> is not a node of the tree, a Gtk-CRITICAL
     warning will be issued.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktree.method.clear_items">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>clear_items</function>
     </funcdef>
     <paramdef>int
      <parameter>start</parameter>
     </paramdef>
     <paramdef>int
      <parameter>end</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Removes a range of nodes from the tree.
   </shortdesc>
   <desc>
    <simpara>
     Removes nodes from <parameter>start</parameter> to <parameter>end</parameter>
     inclusive.
    </simpara>
    <simpara>
     If <parameter>end</parameter> is greater than the number of nodes, all nodes
     from <parameter>start</parameter> to the end of the tree will be removed.
    </simpara>
    <simpara>
     Unlike gtk, nodes that are removed from the tree are not destroyed.
    </simpara>
    <simpara>
     See also: <function class="GtkTree">remove_item</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktree.method.select_item">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>select_item</function>
     </funcdef>
     <paramdef>int
      <parameter>position</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Selects a node of the tree by position.
   </shortdesc>
   <desc>
    <simpara>
     Highlights the node in <parameter>position</parameter> as selected. This will
     cause the node to emit the
     <signalname class="GtkTreeItem">select</signalname> signal. Selecting a node
     which is already selected will unselect that node.
    </simpara>
    <para>
     <example>
      <title>Selecting a node twice</title>
      <programlisting role="php">
<![CDATA[
// Call back function to notify when an item is deselected
function itemDeselected() {
  echo 'A tree item was deselected!';
}

// Create a tree
$tree = &new GtkTree;

// Create an item and add it to the tree
$treeItem = &new GtkTreeItem('Select me twice');
$tree->append($treeItem);

// Select the item twice and see what happens
$tree->select_item(0);
$tree->select_item(0); // itemDeselected() will be called.
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Node positions are indexed begining with zero.  The fourth node in a tree is
     in position three.
    </simpara>
    <simpara>
     See also: <function class="GtkTree">unselect_item</function>,
               <function class="GtkTree">select_child</function>,
               <function class="GtkTree">unselect_child</function>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktree.method.unselect_item">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>unselect_item</function>
     </funcdef>
     <paramdef>int
      <parameter>position</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Unselects a node of the tree by position.
   </shortdesc>
   <desc>
    <simpara>
     Unselects the node in <parameter>position</parameter>. Unselecting a node
     causes the node to emit the <signalname class="GtkTree">deselect</signalname>
     signal. Unselecting a node that is not selected will select the node.
    </simpara>
    <simpara>
     Node positions are indexed begining with zero. The fourth node is in position
     three.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktree.method.select_child">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>select_child</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>tree_item</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Selects a node of a tree by object.
   </shortdesc>
   <desc>
    <simpara>
     Selects the node <parameter>tree_item</parameter>. Selecting a node causes
     the <signalname class="GtkTreeItem">select</signalname> signal to be emitted.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktree.method.unselect_child">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>unselect_child</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>tree_item</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Unselects a node of a tree by object.
   </shortdesc>
   <desc>
    <simpara>
     Unselects <parameter>tree_item</parameter>. Unselecting a node causes the
     <signalname class="GtkTreeItem">deselect</signalname> signal to be emitted.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktree.method.child_position">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int
      <function>child_position</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname>
      <parameter>child</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the position of a node.
   </shortdesc>
   <desc>
    <simpara>
     Returns the position of <parameter>child</parameter>. The first node of a
     tree is in position zero.
    </simpara>
    <simpara>
     If <parameter>child</parameter> is not a node of the tree, -1 is returned.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktree.method.set_selection_mode">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>set_selection_mode</function>
     </funcdef>
     <paramdef>
      <enumname>GtkSelectionMode</enumname>
      <parameter>mode</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the tree's selection mode.
   </shortdesc>
   <desc>
    <simpara>
     Sets the selection mode to <parameter>mode</parameter>. <literal>GTK_SELECTION_SINGLE</literal> is the default.
    </simpara>
    <simpara>
     The selection mode determines how many nodes may/must be selected at one
     time.
    </simpara>
    <simpara>
     See also: <enumname>GtkSelectionMode</enumname>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktree.method.set_view_mode">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>set_view_mode</function>
     </funcdef>
     <paramdef>
      <enumname>GtkTreeViewMode</enumname>
      <parameter>mode</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the tree's view mode.
   </shortdesc>
   <desc>
    <simpara>
     Sets the tree's view mode to <parameter>mode</parameter>. The view mode
     defines how the tree looks when items are selected. The default mode is
     <literal>GTK_TREE_VIEW_ITEM</literal>.
    </simpara>
    <simpara>
     See also: <enumname>GtkTreeViewMode</enumname>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktree.method.set_view_lines">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void
      <function>set_view_lines</function>
     </funcdef>
     <paramdef>int
      <parameter>flag</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets how lines between nodes and children are to be drawn.
   </shortdesc>
   <desc>
    <simpara>
     Sets whether or not lines between nodes and children should be drawn. If
     <parameter>flag</parameter> evaluates to <literal>true</literal>
     (<parameter>flag</parameter> &gt; 0) connecting lines between nodes and
     children will be drawn. If <parameter>flag</parameter> evaluates to
     <literal>false</literal> (<parameter>flag</parameter> &lt;= 0) connecting
     lines between nodes and children will not be drawn. By default tree's begin
     with view lines set to one.
    </simpara>
   </desc>
  </method>

 </methods>

</classentry>
