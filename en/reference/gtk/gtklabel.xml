<?xml version="1.0" encoding="ISO-8859-1" ?>
<classentry id="gtk.gtklabel">
 <classmeta>
  <classtitle>GtkLabel</classtitle>
  <classparent>GtkMisc</classparent>
  <shortdesc>Widget that displays a small amount of text.</shortdesc>
  <desc>
   <simpara>
    A very common use of <classname>GtkLabel</classname> is to display
    text that describes or makes some comment about the use of an
    adjacent widget.  If you need to display a great deal of text, use 
    <classname>GtkText</classname> instead.
   </simpara>
   <simpara>
    Note that labels do not generate events. If you want to catch events
    (e.g. from a mouse click) you will need to put the label in a
    <classname>GtkEventBox</classname>.
   </simpara>
   <simpara>
    See also:  <classname>GtkEditable</classname>, 
    <classname>GtkEventBox</classname>, <classname>GtkText</classname>.
   </simpara>
  </desc>
 </classmeta>

 <constructor id="gtk.gtklabel.constructor">
  <funcsynopsis>
   <funcprototype>
    <funcdef> <function>GtkLabel</function></funcdef>
    <paramdef>string 
     <parameter><optional>label_text</optional></parameter>
    </paramdef>
   </funcprototype>
  </funcsynopsis>
  <shortdesc>
   Creates a new label with the given text inside it. If no text is
   specified, an empty label is created.
  </shortdesc>
  <desc>
   <para>
    <example>
     <title>Aligning the text in a <classname>GtkLabel</classname></title>
     <programlisting role="php">
<![CDATA[
<?php

dl('php_gtk.' . (strstr(PHP_OS, 'WIN') ? 'dll' : 'so'));

$window = &amp;new GtkWindow();
$window-&gt;set_usize(200, 200);
$window-&gt;connect_object('destroy', array('gtk', 'main_quit'));

/* Child widgets by default will expand to fill the available space */
$label = &amp;new GtkLabel(&quot;This is my label&quot;);
$label-&gt;set_alignment(1.0, 1.0);
$window-&gt;add($label);
$window-&gt;show_all();

gtk::main();

?>
]]>
     </programlisting>
    </example>
   </para>
   <simpara>
    The <function class="GtkMisc">set_alignment</function> method
    is inherited from <classname>GtkMisc</classname>.
   </simpara>
  </desc>
 </constructor>

 <methods>

  <method id="gtk.gtklabel.method.set_text">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_text</function></funcdef>
     <paramdef>string 
      <parameter>label_text</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the label text.
   </shortdesc>
   <desc>
    <simpara>
     Sets the text for the label widget. Previous text in the label
     is not stored.
    </simpara>
    <simpara>
     Note that any existing underlines are not overwritten in the
     same way that text is; use 
     <function class="GtkLabel">set_pattern</function> with no
     parameters to erase these.
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$label-&gt;set_text(&quot;Whatever text you wish to pass&quot;);

?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

  <method id="gtk.gtklabel.method.set_justify">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_justify</function></funcdef>
     <paramdef>
      <enumname>GtkJustification</enumname> 
      <parameter>justification</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets label justification.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkLabel">set_justify</function> is the method
     for justifying text in <classname>GtkLabel</classname>.  The
     options are <enumname>GtkJustification</enumname> enumerated flags, 
     the default setting being <literal>GTK_JUSTIFY_CENTER</literal>.
    </simpara>
    <simpara>
     Justification is relative to existing lines of text, and should be
     used in combination with 
     <function class="GtkLabel">set_line_wrap</function>.  It is
     irrelevant where there is only one line.  If you need to set the
     text alignment in a single-line label, use 
     <function class="GtkMisc">set_alignment</function>.  There is a
     working example of this method on the 
     <link linkend="gtk.gtklabel.constructor">constructor</link> page.
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$label-&gt;set_line_wrap(true);
$label-&gt;set_justify(GTK_JUSTIFY_FILL);

?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

  <method id="gtk.gtklabel.method.set_pattern">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_pattern</function></funcdef>
     <paramdef>string 
      <parameter><optional>pattern = NULL</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Underlines text in the label.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkLabel">set_pattern</function> is the method
     for underlining text in <classname>GtkLabel</classname>. It needs
     to be defined as a pattern, e.g. if your text consists of 
     <literal>A B C</literal>, then <literal>&quot;_   _&quot;</literal>
     will underline <literal>A</literal> and <literal>C</literal> but
     not <literal>B</literal>, as that is where the space falls. Each
     underscore or space in the pattern maps directly to the character
     position in the label text.
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$label-&gt;set_pattern(&quot;_   _&quot;);

?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <simpara>
     Call this method with no parameters to erase existing underlines.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtklabel.method.set_line_wrap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_line_wrap</function></funcdef>
     <paramdef>bool <parameter>wrap</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Toggles line wrapping.
   </shortdesc>
   <desc>
    <simpara>
     Toggles line wrapping in the label. If <parameter>wrap</parameter> is
     <literal>true</literal>, the lines exceeding the size of the widget will
     be automatically wrapped. Where <parameter>wrap</parameter> is
     <literal>false</literal>, those lines will be cut off at the widget's
     edge.
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$label-&gt;set_line_wrap(true);

?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

  <method id="gtk.gtklabel.method.get">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get</function></funcdef>
     <paramdef>void <parameter></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Gets label text.  *deprecated in GTK2*
   </shortdesc>
   <desc>
    <simpara>
     Returns the current text content of the label.
    </simpara>
    <note>
     <simpara>
      Note that this method is deprecated in GTK 2.0, and will be replaced
      by <literal>get_text()</literal>.
     </simpara>
    </note>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$label-&gt;get();

?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

  <method id="gtk.gtklabel.method.parse_uline">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>parse_uline</function></funcdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Parses underscores into underlines.  *deprecated in GTK2*
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkLabel">parse_uline</function> checks the
     string passed as the parameter for underscores, and then underlines
     the characters following the underscores. It will take the first
     underlined character in a label and return it as a lower-case
     accelerator key, e.g. <literal>_Save</literal> will return the
     accelerator key value for &quot;s&quot;.
    </simpara>
    <simpara>
     This method is used internally by Gtk+ for menu items.
    </simpara>
    <note>
     <simpara>
      Note that this method is deprecated in GTK+ 2.0.
     </simpara>
    </note>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$label-&gt;parse_uline(&quot;_File&quot;);

?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

 </methods>

</classentry> 
