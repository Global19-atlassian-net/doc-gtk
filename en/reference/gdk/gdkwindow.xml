<?xml version="1.0" encoding="ISO-8859-1" ?>
<classentry id="gdk.gdkwindow">
 <classmeta>
  <classtitle>GdkWindow</classtitle>
  <classparent></classparent>
  <shortdesc>
   Underlying window class for every <classname>GtkWidget</classname>.
  </shortdesc>
  <desc>
   <simpara>
    A <classname>GdkWindow</classname> represents the underlying window
    class of any <classname>GtkWidget</classname>, resp. the onscreen display 
    areas in the target window system which the widget covers.
   </simpara>
   <simpara>
    It can be accessed using the <propname class="GtkWidget">window</propname>
    property of the <classname>GtkWidget</classname> class.
   </simpara>
  </desc>
 </classmeta>

 <methods>

  <method id="gdk.gdkwindow.method.raise">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>raise</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Raises the window to the top of the z-order.
   </shortdesc>
   <desc>
    <simpara>
     Raises the window to the top of the Z-order (stacking order), 
     so that other windows with the same parent window appear below 
     the window. If the window is a toplevel, the window manager may 
     choose to deny the request to move the window in the Z-order. 
     Therefore, the <function class="GdkWindow">raise</function> method 
     only requests the restack, it does not guarantee it.
    </simpara>
   </desc>
  </method>

  <method id="gdk.gdkwindow.method.lower">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>lower</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Lowers the window to the bottom of the Z-order.
   </shortdesc>
   <desc>
    <simpara>
     Lowers the window to the bottom of the Z-order (stacking order), 
     so that other windows with the same parent window appear 
     above the window. If the window is a toplevel, 
     the window manager may choose to deny the request to move 
     the window in the Z-order. 
     Therefore, the <function class="GdkWindow">lower</function>
     method only requests the restack, 
     it does not guarantee it. 
    </simpara>
    <simpara>
     Note that the <function class="GtkWidget">show</function> method 
     raises the window again, 
     so don't call this method before calling the show() 
     method to avoid duplication.
    </simpara>
   </desc>
  </method>

  <method id="gdk.gdkwindow.method.get_pointer">
   <funcsynopsis>
    <funcprototype>
     <funcdef>array <function>get_pointer</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns an array of information about the mouse pointer.
   </shortdesc>
   <desc>
    <simpara>
     Returns an array of information about the mouse pointer.
    </simpara>
    <simpara>
     The first 2 values are the X and Y coordinates of the mouse pointer,
     and the third is the button 
     <propname class="GdkWindow">pointer_state</propname>.
    </simpara>
   </desc>
  </method>

  <method id="gdk.gdkwindow.method.set_cursor">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_cursor</function></funcdef>
     <paramdef>
      <classname>GdkCursor</classname> 
      <parameter><optional>cursor</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the mouse cursor used in that window.
   </shortdesc>
   <desc>
    <simpara>
     Sets the mouse cursor used in that window. The parameter is omitted, 
     the cursor is reset to the default pointer.
    </simpara>
    <para>
     <example>
      <title>Setting the cursor</title>
      <programlisting role="php">
<![CDATA[
$cursor = gdk::cursor_new(150); //GDK_WATCH
$window = $mainWindow->window; //GdkWindow
$window->set_cursor($cursor);
]]>
      </programlisting>    
     </example>
    </para> 
   </desc>
  </method>

  <method id="gdk.gdkwindow.method.new_gc">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>new_gc</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkwindow.method.property_get">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>property_get</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkwindow.method.property_change">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>property_change</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkwindow.method.property_delete">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>property_delete</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>void

  <method id="gdk.gdkwindow.method.set_icon">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_icon</function></funcdef>
     <paramdef><classname>GdkWindow</classname> window</paramdef>
     <paramdef><classname>GdkPixmap</classname> pixmap</paramdef>
     <paramdef><classname>GdkBitmap</classname> mask</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the window icon.
   </shortdesc>
   <desc>
    <simpara>
     Sets the window icon which can be shown by the window
     manager in the title or the task bar.
    </simpara>
    <note>
     This function does not work on Windows.
    </note>
    <programlisting role="php">
<![CDATA[
list( $pixmap, $mask) = gdk::pixmap_create_from_xpm($window->window, null, 'window.xpm');
$gdkwindow = $window->window;
$gdkwindow->set_icon( $gdkwindow, $pixmap, $mask);
]]>
    </programlisting>
   </desc>
  </method>

 </methods>

 <properties>

  <prop id="gdk.gdkwindow.property.width" type="ro">
   <propname>width</propname>
   <proptype>int</proptype>
   <shortdesc>
    The width of the window in pixels.
   </shortdesc>
   <desc>
    <simpara>
     The width of the window in pixels.
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkwindow.property.height" type="ro">
   <propname>height</propname>
   <proptype>int</proptype>
   <shortdesc>
    The height of the window in pixels.
   </shortdesc>
   <desc>
    <simpara>
     The height of the window in pixels. 
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkwindow.property.x" type="ro">
   <propname>x</propname>
   <proptype>int</proptype>
   <shortdesc>
    The x coordinate of the window position relative to the parent.
   </shortdesc>
   <desc>
    <simpara>
     The x coordinate of the window position relative to 
     <propname class="GdkWindow">parent</propname>.
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkwindow.property.y" type="ro">
   <propname>y</propname>
   <proptype>int</proptype>
   <shortdesc>
    The y coordinate of the window position relative to the parent.
   </shortdesc>
   <desc>
    <simpara>
     The y coordinate of the window position relative to 
     <propname class="GdkWindow">parent</propname>.
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkwindow.property.colormap" type="ro">
   <propname>colormap</propname>
   <proptype><classname>GdkColormap</classname></proptype>
   <shortdesc>

   </shortdesc>
   <desc>
    <simpara>
     
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkwindow.property.pointer" type="ro">
   <propname>pointer</propname>
   <proptype>array</proptype>
   <shortdesc>
    Array with the current mouse cursor position.
   </shortdesc>
   <desc>
    <simpara>
     Array with the current mouse cursor position.
     <literal>pointer[0]</literal> contains the X 
     and <literal>pointer[1]</literal> 
     the Y position. 
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkwindow.property.pointer_state" type="ro">
   <propname>pointer_state</propname>
   <proptype>int</proptype>
   <shortdesc>
    The current status of the mouse buttons.
   </shortdesc>
   <desc>
    <simpara>
     Returns the current status of the mouse buttons, so that
     you can determine if the left/middle/right button is being held.
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkwindow.property.parent" type="ro">
   <propname>parent</propname>
   <proptype>GdkWindow</proptype>
   <shortdesc>
    Returns the parent GdkWindow.
   </shortdesc>
   <desc>
    <simpara>
     Returns the parent <classname>GdkWindow</classname>.
    </simpara>
    <simpara>
     The highest window in the packing hierarchy will return 
     itself as the parent. Note that even the 
     <classname>GdkWindow</classname> of a
     <classname>GtkWindow</classname> has a parent. 
    </simpara>
    <programlisting role="php">
<![CDATA[
$gtk_window =& new GtkWindow();
$gdk_window = $gtk_window->window;
var_dump( $gdk_window == $gdk_window->parent);
]]>
    </programlisting>
    <simpara>
     The example output is false.
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkwindow.property.toplevel" type="ro">
   <propname>toplevel</propname>
   <proptype>GdkWindow</proptype>
   <shortdesc>
    Returns the GdkWindow of the toplevel GtkWindow.
   </shortdesc>
   <desc>
    <simpara>
     Returns the <classname>GdkWindow</classname> of the
     toplevel Widget, usually the <classname>GtkWindow</classname>.
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkwindow.property.children" type="ro">
   <propname>children</propname>
   <proptype>array</proptype>
   <shortdesc>
    Array of all direct children.
   </shortdesc>
   <desc>
    <simpara>
     The array contains all direct widgets of this container
     which have been added with 
     <function class="GtkContainer">add</function> or another
     pack function.
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkwindow.property.type" type="ro">
   <propname>type</propname>
   <proptype><enumname>GdkWindowType</enumname></proptype>
   <shortdesc>
    Returns the type of the widget.
   </shortdesc>
   <desc>
    <simpara>
     Returns the <enumname>GdkWindowType</enumname> of the 
     widget's <classname>GdkWindow</classname>.
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkwindow.property.depth" type="ro">
   <propname>depth</propname>
   <proptype>int</proptype>
   <shortdesc>
    Returns the color depth in bits per pixel.
   </shortdesc>
   <desc>
    <simpara>
     Returns the color depth in bits per pixel, e.g.
     24.
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkwindow.property.xid" type="ro">
   <propname>xid</propname>
   <proptype>int</proptype>
   <shortdesc>
    Returns the XWindow window id, but not on Windows.
   </shortdesc>
   <desc>
    <simpara>
     This property is not available on the Windows operating system.
     On *nix, it returns the XWindow window id.
    </simpara>
   </desc>
  </prop>

 </properties>

</classentry>
