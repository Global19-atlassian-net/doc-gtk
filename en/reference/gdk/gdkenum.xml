<?xml version="1.0" encoding="ISO-8859-1" ?>

<enum id="gdk.enum.gdkcapstyle">
 <enumname>GdkCapStyle</enumname>
  <shortdesc>
   Testing a theory.
  </shortdesc>

 <enumoption>
  <optionname>GDK_CAP_NOT_LAST</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_CAP_BUTT</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_CAP_ROUND</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_CAP_PROJECTING</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>

<enum id="gdk.enum.gdkcursortype">
 <enumname>GdkCursorType</enumname>
  <shortdesc>
   Testing a theory.
  </shortdesc>

 <enumoption>
  <optionname>GDK_CURSOR_IS_PIXMAP</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>

<enum id="gdk.enum.gdkdragaction">
 <enumname>GdkDragAction</enumname>

 <enumoption>
  <optionname>GDK_ACTION_DEFAULT</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_ACTION_COPY</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_ACTION_MOVE</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_ACTION_LINK</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_ACTION_PRIVATE</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_ACTION_ASK</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>

<enum id="gdk.enum.gdkeventmask">
 <enumname>GdkEventMask</enumname>
  <shortdesc>
   Testing a theory.
  </shortdesc>

 <enumoption>
  <optionname>GDK_EXPOSURE_MASK</optionname>
  <shortdesc>
   Setting this flag allows the <literal>GDK_EXPOSE</literal> event
   to be captured by a widget's <classname>GdkWindow</classname>. 
   This causes the widget to emit the 
   <signalname class="GtkWidget">expose-event</signalname> signal.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_POINTER_MOTION_MASK</optionname>
  <shortdesc>
   Setting this flag allows the <literal>GDK_MOTION_NOTIFY</literal> 
   event to be captured by a widget's <classname>GdkWindow</classname>. 
   This makes the widget emit the 
   <signalname class="GtkWidget">motion-notify-event</signalname> signal.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_POINTER_MOTION_HINT_MASK</optionname>
  <shortdesc>
   This is a special flag allowing a less intensive version of the 
   <literal>GDK_POINTER_MOTION_MASK</literal> functionality.  This can
   be necessary to avoid a time-lag in processing caused by the sheer
   volume of <literal>GDK_MOTION_NOTIFY</literal> events produced by
   mouse movement, each once of which causes a 
   <signalname class="GtkWidget">motion-notify-event</signalname> signal
   to be fired by the widget.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_BUTTON_MOTION_MASK</optionname>
  <shortdesc>
   Allows the <literal>GDK_MOTION_NOTIFY</literal> events to be picked up
   by the widget's <classname>GdkWindow</classname> only while a mouse-button
   (any) is pressed down.  This is a way of limiting the widget's 
   <signalname class="GtkWidget">motion-notify-event</signalname> signal
   emissions.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_BUTTON1_MOTION_MASK</optionname>
  <shortdesc>
   Allows the <literal>GDK_MOTION_NOTIFY</literal> events to be picked up
   by the widget's <classname>GdkWindow</classname> only while mouse-button
   <literal>1</literal> is pressed down - usually that's the left button. 
   This is a way of limiting the widget's 
   <signalname class="GtkWidget">motion-notify-event</signalname> signal
   emissions.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_BUTTON2_MOTION_MASK</optionname>
  <shortdesc>
   Allows the <literal>GDK_MOTION_NOTIFY</literal> events to be picked up
   by the widget's <classname>GdkWindow</classname> only while mouse-button
   <literal>2</literal> is pressed down - usually that's the center button, 
   where it exists.  This is a way of limiting the widget's 
   <signalname class="GtkWidget">motion-notify-event</signalname> signal
   emissions.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_BUTTON3_MOTION_MASK</optionname>
  <shortdesc>
   Allows the <literal>GDK_MOTION_NOTIFY</literal> events to be picked up
   by the widget's <classname>GdkWindow</classname> only while mouse-button
   <literal>3</literal> is pressed down - usually that's the right button. 
   This is a way of limiting the widget's 
   <signalname class="GtkWidget">motion-notify-event</signalname> signal
   emissions.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_BUTTON_PRESS_MASK</optionname>
  <shortdesc>
   Setting this flag allows the <literal>GDK_BUTTON_PRESS</literal> 
   events to be captured by a widget's <classname>GdkWindow</classname>. 
   This makes the widget emit the 
   <signalname class="GtkWidget">button-press-event</signalname> signal.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_BUTTON_RELEASE_MASK</optionname>
  <shortdesc>
   Setting this flag allows the <literal>GDK_BUTTON_RELEASE</literal> 
   event to be captured by a widget's <classname>GdkWindow</classname>. 
   This makes the widget emit the 
   <signalname class="GtkWidget">button-release-event</signalname> signal.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_KEY_PRESS_MASK</optionname>
  <shortdesc>
   Setting this flag allows the <literal>GDK_KEY_PRESS</literal> 
   event to be captured by a widget's <classname>GdkWindow</classname>. 
   This makes the widget emit the 
   <signalname class="GtkWidget">key-press-event</signalname> signal.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_KEY_RELEASE_MASK</optionname>
  <shortdesc>
   Setting this flag allows the <literal>GDK_KEY_RELEASE</literal> 
   event to be captured by a widget's <classname>GdkWindow</classname>. 
   This makes the widget emit the 
   <signalname class="GtkWidget">key-release-event</signalname> signal.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_ENTER_NOTIFY_MASK</optionname>
  <shortdesc>
   Setting this flag allows the <literal>GDK_ENTER_NOTIFY</literal> 
   event to be captured by a widget's <classname>GdkWindow</classname>. 
   This causes the widget to emit the 
   <signalname class="GtkWidget">enter-notify-event</signalname> signal.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_LEAVE_NOTIFY_MASK</optionname>
  <shortdesc>
   Setting this flag allows the <literal>GDK_LEAVE_NOTIFY</literal> 
   event to be captured by a widget's <classname>GdkWindow</classname>. 
   This makes the widget emit the 
   <signalname class="GtkWidget">leave-notify-event</signalname> signal.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_FOCUS_CHANGE_MASK</optionname>
  <shortdesc>
   Setting this flag allows the <literal>GDK_FOCUS_CHANGE</literal> 
   event to be captured by a widget's <classname>GdkWindow</classname>. 
   This makes the widget emit the 
   <signalname class="GtkWidget">focus-in-event</signalname> or 
   <signalname class="GtkWidget">focus-out-event</signalname> signal as
   appropriate.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_STRUCTURE_MASK</optionname>
  <shortdesc>
   This flag is set on all new instances of <classname>GdkWindow</classname>. 
   It allows map, unmap, destroy and configure events to be captured, 
   causing <signalname class="GtkWidget">map-event</signalname>, 
   <signalname class="GtkWidget">unmap-event</signalname>, 
   <signalname class="GtkWidget">destroy-event</signalname> and 
   <signalname class="GtkWidget">configure-event</signalname> signals to be
   emitted from all windowed widgets.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_PROPERTY_CHANGE_MASK</optionname>
  <shortdesc>
   Setting this flag allows the <literal>GDK_PROPERTY_NOTIFY</literal> 
   event to be captured by a widget's <classname>GdkWindow</classname>. 
   This makes the widget emit the 
   <signalname class="GtkWidget">property-notify-event</signalname> signal.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_VISIBILITY_NOTIFY_MASK</optionname>
  <shortdesc>
   Setting this flag allows the <literal>GDK_VISIBILITY_NOTIFY</literal> 
   event to be captured by a widget's <classname>GdkWindow</classname>. 
   This causes the widget to emit the 
   <signalname class="GtkWidget">visibility-notify-event</signalname> signal.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_PROXIMITY_IN_MASK</optionname>
  <shortdesc>
   Setting this flag allows the <literal>GDK_PROXIMITY_IN</literal> 
   event to be captured by a widget's <classname>GdkWindow</classname>. 
   This causes the widget to emit the 
   <signalname class="GtkWidget">proximity-in-event</signalname> signal.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_PROXIMITY_OUT_MASK</optionname>
  <shortdesc>
   Setting this flag allows the <literal>GDK_PROXIMITY_OUT</literal> 
   event to be captured by a widget's <classname>GdkWindow</classname>. 
   This makes the widget emit the 
   <signalname class="GtkWidget">proximity-out-event</signalname> signal.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_SUBSTRUCTURE_MASK</optionname>
  <shortdesc>
   Enables the widget's <classname>GdkWindow</classname> to capture 
   <literal>GDK_STRUCTURE_MASK</literal> events on any child windows.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_ALL_EVENTS_MASK</optionname>
  <shortdesc>
   Setting this flag allows any <classname>GdkEvent</classname> to be
   captured by a widget's <classname>GdkWindow</classname>.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gdk.enum.gdkeventtype">
 <enumname>GdkEventType</enumname>

 <enumoption>
  <optionname>GDK_NOTHING</optionname>
  <shortdesc>
   A null event.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_DELETE</optionname>
  <shortdesc>
   This event is triggered when the user clicks on the X button on a
   decorated window.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_DESTROY</optionname>
  <shortdesc>
   This event is triggered when a widget is being destroyed.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_EXPOSE</optionname>
  <shortdesc>
   This event is triggered whenever a widget is exposed to display.  That
   includes all redraws, full or partial.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_MOTION_NOTIFY</optionname>
  <shortdesc>
   This event is triggered when the mouse is moved.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_BUTTON_PRESS</optionname>
  <shortdesc>
   This event is triggered when any mouse button is pressed.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_2BUTTON_PRESS</optionname>
  <shortdesc>
   This event is triggered when there are two mouse button presses in
   quick succession - a double-click.  It is preceded by a second 
   <literal>GDK_BUTTON_PRESS</literal> and that event's corollary, a
   <literal>GDK_BUTTON_RELEASE</literal>.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_3BUTTON_PRESS</optionname>
  <shortdesc>
   This event is triggered when there are three mouse button presses in
   quick succession - a treble-click.  It is preceded by two 
   <literal>GDK_BUTTON_PRESS</literal> and one 
   <literal>GDK_2BUTTON_PRESS</literal> event, as well as the associated
   <literal>GDK_BUTTON_RELEASE</literal> events.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_BUTTON_RELEASE</optionname>
  <shortdesc>
   This event is triggered when any mouse button is released.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_KEY_PRESS</optionname>
  <shortdesc>
   This event is triggered when any key is pressed.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_KEY_RELEASE</optionname>
  <shortdesc>
   This event is triggered when any key is released.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_ENTER_NOTIFY</optionname>
  <shortdesc>
   This event is triggered when the cursor enters the screen area of a widget.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_LEAVE_NOTIFY</optionname>
  <shortdesc>
   This event is triggered when the cursor leaves the screen area of a widget.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_FOCUS_CHANGE</optionname>
  <shortdesc>
   This event is triggered whenever there is a keyboard focus change, in or
   out.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_CONFIGURE</optionname>
  <shortdesc>
   This event is triggered whenever a widget is drawn, that is, at its first
   display and on any subsequent redraws caused by moving or resizing.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_MAP</optionname>
  <shortdesc>
   This event is triggered during the 
   <function class="GtkWidget">show()</function> process, while the widget
   is being mapped to the screen.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_UNMAP</optionname>
  <shortdesc>
   This event is triggered during the 
   <function class="GtkWidget">hide()</function> process, while the widget
   is being removed from display.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_PROPERTY_NOTIFY</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_SELECTION_CLEAR</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_SELECTION_REQUEST</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_SELECTION_NOTIFY</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_PROXIMITY_IN</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_PROXIMITY_OUT</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_DRAG_ENTER</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_DRAG_LEAVE</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_DRAG_MOTION</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_DRAG_STATUS</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_DROP_START</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_DROP_FINISHED</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_CLIENT_EVENT</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_VISIBILITY_NOTIFY</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_NO_EXPOSE</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>

<enum id="gdk.enum.gdkfill">
 <enumname>GdkFill</enumname>

 <enumoption>
  <optionname>GDK_SOLID</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_TILED</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_STIPPLED</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_OPAQUE_STIPPLED</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>

<enum id="gdk.enum.gtkfonttype">
 <enumname>GdkFontType</enumname>

 <enumoption>
  <optionname>GDK_FONT_FONT</optionname>
  <shortdesc>
   An internal constuct denoting that a single font has been loaded
   into a <classname>GdkFont</classname> structure.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_FONT_FONTSET</optionname>
  <shortdesc>
   An internal construct denoting that several alternate fonts have
   been loaded into a <classname>GdkFont</classname> structure.  In win32,
   all <classname>GdkFont</classname> type queries will return this type.
  </shortdesc>
 </enumoption>

</enum>

<enum id="gdk.enum.gdkfunction">
 <enumname>GdkFunction</enumname>

 <enumoption>
  <optionname>GDK_COPY</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_INVERT</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_XOR</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_CLEAR</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_AND</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_AND_REVERSE</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_AND_INVERT</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_NOOP</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_OR</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_INVERT</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_XOR</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_EQUIV</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_OR_REVERSE</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_COPY_INVERT</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_OR_INVERT</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_NAND</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_SET</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>

<enum id="gdk.enum.gdkinputcondition">
 <enumname>GdkInputCondition</enumname>

 <enumoption>
  <optionname>GDK_INPUT_READ</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_INPUT_WRITE</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_INPUT_EXCEPTION</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>

<enum id="gdk.enum.gdkjoinstyle">
 <enumname>GdkJoinStyle</enumname>

 <enumoption>
  <optionname>GDK_JOIN_MITER</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_JOIN_ROUND</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_JOIN_BEVEL</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>

<enum id="gdk.enum.gdklinestyle">
 <enumname>GdkLineStyle</enumname>

 <enumoption>
  <optionname>GDK_LINE_SOLID</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_LINE_ON_OFF_DASH</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_LINE_DOUBLE_DASH</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>

<enum id="gdk.enum.gdkmodifiertype">
 <enumname>GdkModifierType</enumname>

 <enumoption>
  <optionname>GDK_SHIFT_MASK</optionname>
  <shortdesc>
   Denotes that a shift modifier is in place.  A dedicated key or
   mouse-button will not become active until the <literal>Shift</literal> 
   key is pressed down.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_LOCK_MASK</optionname>
  <shortdesc>
   Denotes that a <literal>Caps Lock</literal> modifier is in place.  Note
   that this modifier is illegal for use with accelerator keys, and will not
   work there.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GDK_CONTROL_MASK</optionname>
  <shortdesc>
   Denotes that a control modifier is in place.  A dedicated key or
   mouse-button will not become active until the <literal>Control</literal> 
   key is pressed down.
  </shortdesc>
 </enumoption>
 
 <enumoption>
  <optionname>GDK_MOD1_MASK</optionname>
  <shortdesc>
   Denotes that an alt modifier is in place.  A dedicated key or
   mouse-button will not become active until the <literal>Alt</literal> 
   key is pressed down.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_MOD2_MASK</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_MOD3_MASK</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_MOD4_MASK</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_MOD5_MASK</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_BUTTON1_MASK</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_BUTTON2_MASK</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_BUTTON3_MASK</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_BUTTON4_MASK</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_BUTTON5_MASK</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_RELEASE_MASK</optionname>
  <shortdesc>
   Denotes that the act of releasing the button is a modifier.
  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_MODIFIER_MASK</optionname>
  <shortdesc>
   Returns all the modifiers that are possible in the current context.
  </shortdesc>
 </enumoption>
</enum>

<enum id="gdk.enum.gdkrgbdither">
 <enumname>GdkRgbDither</enumname>

 <enumoption>
  <optionname>GDK_RGB_DITHER_NONE</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_RGB_DITHER_NORMAL</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_RGB_DITHER_MAX</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>

<enum id="gdk.enum.gdksubwindowmode">
 <enumname>GdkSubwindowMode</enumname>

 <enumoption>
  <optionname>GDK_CLIP_BY_CHILDREN</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_INCLUDE_INFERIORS</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>

<enum id="gdk.enum.gdkvisualtype">
 <enumname>GdkVisualType</enumname>

 <enumoption>
  <optionname>GDK_VISUAL_STATIC_GRAY</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_VISUAL_GRAYSCALE</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_VISUAL_STATIC_COLOR</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_VISUAL_PSEUDO_COLOR</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_VISUAL_TRUE_COLOR</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

 <enumoption>
  <optionname>GDK_VISUAL_DIRECT_COLOR</optionname>
  <shortdesc>

  </shortdesc>
 </enumoption>

</enum>


<!--
 * Local variables:
 * tab-width: 1
 * c-basic-offset: 1
 * End:
 * vim600: et sw=1 ts=1 tw=78 fdm=marker
 * vim<600: et sw=1 ts=1 tw=78
-->

