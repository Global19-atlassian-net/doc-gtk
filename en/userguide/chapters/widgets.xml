<chapter id="gtk.widgets">
 <title>Widgets and Containers</title>

 <sect1 id="gtk.widgets.intro">
  <title>Introduction</title>
  <simpara>
   This chapter will explain some of the concepts behind GTK and
   how you can use them. 
  </simpara>
 </sect1>

 <sect1 id="gtk.widgets.whatare">
  <title>What are Widgets</title>
  <simpara>
   A Widget is a term used in the world of X for any user interface.
   A Widget can be a text box, label, frames, windows or any GUI component. GTK Widgets are all derived from the base 
   class <literal>GtkWidget</literal>.   
  </simpara>
  <simpara>
   From a programming point of view a widget has five parts to
   its life cycle:
  </simpara>
  <para>
   <orderedlist>
    <listitem>
     <simpara>Creation</simpara>
     <simpara>
      In PHP-GTK this is done by creating an object, e.g. 
      <literal>$window = &amp;new GtkWindow;</literal>
     </simpara>
    </listitem>
    <listitem>
     <simpara>Placement</simpara>
     <simpara>
      This is the step of adding a widget to a 
      <link linkend="gtk.containers.whatare">container</link>.
      This is achived in PHP-GTK by using the syntax
      <literal>$container-&gt;add($widget);</literal>
     </simpara>
    </listitem>
    <listitem>
     <simpara>Signal Connection</simpara>
     <simpara>
      This is the step of setting up call back functions for use.  
      An example of this might be <literal>
       $widget-&gt;connect("event","my_focus_func");</literal>
      where 'event' is a predefined state such as 'clicked'
      and 'my_focus_func' is the called subroutine. 
     </simpara>
    </listitem>
    <listitem>
     <simpara>Display</simpara>
     <simpara>
      This describes whether the widget is on display to the user.
      It is started by calling 
      <literal>$widget-&gt;show();</literal> and finished by
      <literal>$widget-&gt;hide();</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>Destruction</simpara>
     <simpara>
      This occurs when the shutdown routine is called. 
      All actions that are necessary here are handled by PHP-GTK itself. 
     </simpara>
    </listitem>
   </orderedlist>
  </para>
 </sect1>

 <sect1 id="gtk.containers.whatare">
  <title>What are Containers</title>
  <simpara>
   A container is simply a 
   <link linkend="gtk.widgets.whatare">widget</link>
   that can contain another widget.  Examples of these are
   <literal>GtkWindow</literal>, <literal>GtkTable</literal>
   and <literal>GtkBox</literal>.  Other than this property they are
   exactly the same as widgets. They are derived from the 
   <literal>GtkContainer</literal> base class, which itself is 
   derived from the <literal>GtkWidget</literal> class.
  </simpara>
 </sect1>

</chapter>
