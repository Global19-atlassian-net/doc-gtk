<?xml version="1.0" encoding="ISO-8859-1" ?>
<chapter id="widgets">
 <title>Widgets and Containers</title>
 <sect1 id="widgets.intro"></sect1>

 <sect1 id="widgets.whatare">
  <title>O que são Widgets?</title>
  <simpara>
   <literal>widget</literal> é um termo usado no mundo do X para qualquer
   interface gráfica.  Um widget pode ser uma caixa de texto, label, frame, 
   window ou qualquer outro componente GUI.  Widgets GTK são todos derivados
   da base abstrata de classes <classname>GtkWidget</classname>, e seus
   métodos, sinais e propriedades implementados.
  </simpara>
  <simpara>
   Do ponto de vista da programação um widget tem cinco partes para seu ciclo
   de vida:
  </simpara>
  <para>
   <orderedlist>
    <listitem>
     <simpara>Criação</simpara>
     <simpara>
      Em PHP-GTK isto é feito pela criação de um objeto, e.g. 
      <literal>$window = &amp;new GtkWindow();</literal>
     </simpara>
    </listitem>
    <listitem>
     <simpara>Colocação</simpara>
     <simpara>
      Esta é a etapa de adicionar um widget em um 
      <link linkend="containers.whatare">container</link>. 
      Isto é alcançado no PHP-GTK usando a sintaxe 
      <literal>$container-&gt;add($widget);</literal>
     </simpara>
    </listitem>
    <listitem>
     <simpara>Conexão de sinal</simpara>
     <simpara>
      Esta é a etapa de registrar callback functions para o uso. Um exemplo
      disto pode ser 
      <literal>
       $widget-&gt;connect(&quot;event&quot;, &quot;my_focus_func&quot;);
      </literal>,
      onde &quot;event&quot; é um estado predefinido como um 
      <signalname>clicked</signalname> and &quot;my_focus_func&quot; e a 
      subrotina chamada.
     </simpara>
    </listitem>
    <listitem>
     <simpara>Exibir</simpara>
     <simpara>
      Isto define se o widget está em exibição para o usuário.  Para isso
      começa-se chamando <literal>$widget-&gt;show();</literal> e termina
      com <literal>$widget-&gt;hide();</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>Destruição</simpara>
     <simpara>
      Isto ocorre quando a funçõa <literal>gtk::main_quit()</literal>
      é chamada. Todas ações que são necessárias aqui são manipuladas
      internamente.
     </simpara>
    </listitem>
   </orderedlist>
  </para>
 </sect1>

 <sect1 id="containers.whatare">
  <title>O que são Containers?</title>
  <simpara>
   Um container é simplesmente um 
   <link linkend="widgets.whatare">widget</link> que está apto a conter
   outro widget.  A maioria dos widgets cai nesta classe; obviamente exemplos
   como <classname>GtkWindow</classname>, <classname>GtkTable</classname> e 
   <classname>GtkBox</classname>.  Suas propriedades são exatamente as mesmas
   do que qualquer outro widget, e podem ser adicionadas a outros containers
   tão bem como suportar seus próprios widgets filhos.  Eles são derivados da
   classe <classname>GtkContainer</classname> que por si só é derivada da
   classe <classname>GtkWidget</classname>.
  </simpara>
 </sect1>

</chapter>
