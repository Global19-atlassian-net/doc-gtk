<?xml version="1.0" encoding="ISO-8859-1" ?>
<classentry id="gtk.gtkbox">
 <classmeta>
  <classtitle>GtkBox</classtitle>
  <classparent>GtkContainer</classparent>
  <shortdesc>
   Basisklasse f&uuml;r Containerboxen.
  </shortdesc>
  <desc>
   <simpara>
    <classname>GtkBox</classname> ist eine Basisklasse die Containerboxen
	Eigenschaften und Methoden zur Verf&uuml;gung stellt um eine beliebige
   </simpara>
   <simpara>
    Beachte dass <classname>GtkBox</classname> eine abstrakte Klasse ist die
	nicht direkt konstruiert werden kann.
   </simpara>	
   <simpara>
    Siehe auch: <classname>GtkContainer</classname>,
	<classname>GtkBin</classname>, <classname>GtkBoxChild</classname>.
   </simpara>
  </desc>
 </classmeta>
	
 <methods>


  <method id="gtk.gtkbox.method.pack_start">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pack_start</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>child</parameter>
     </paramdef>
     <paramdef>bool 
      <parameter><optional>expand = true</optional></parameter>
     </paramdef>
     <paramdef>bool 
      <parameter><optional>fill = true</optional></parameter>
     </paramdef>
     <paramdef>int 
      <parameter><optional>padding = 0</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Packt von von oben oder links des Box Containers>
   </shortdesc>
   <desc>
    <simpara>
	 <function class="GtkBox">pack_start()</function> packt das Kinderwidget
	 von oben oder links in den Box Container. Der
	 <parameter>expand</parameter> ist ein boolscher Wert der bestimmt ob das
	 Kind sich expandieren kann wenn sich die G&ouml;sse des Elterncontainers
	 ver&auml;ndert. Der zweite Parameter <parameter>fill</parameter> ist auch
	 ein boolscher Wert und bestimmt ob das Kind den ihmzur Verf&uuml;gung
	 stehenden Platz f&uuml;llen soll. Der dritte Parameter
	 <parameter>padding</parameter> ist ein Integer Wert der die Polsterung um
	 das Kinderwidget in Pixeln angibt. Die Vorgabewerte sind
	 <literal>true</literal>, <literal>true</literal>, <literal>0</literal>.
	</simpara>
	<simpara>
	 Aufrufe von <function class="GtkBox">pack_start()</function> k&ouml;nnen
	 mit Aufrufen von <function class="GtkBox">pack_end()</function> und sogar
	 <function class="GtkContainer">add()</function> innerhalb desselben Box
	 Containers vermischt werden.
	</simpara>
   </desc>
  </method> 	 

  <method id="gtk.gtkbox.method.pack_end">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pack_end</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>child</parameter>
     </paramdef>
     <paramdef>bool 
      <parameter><optional>expand = true</optional></parameter>
     </paramdef>
     <paramdef>bool 
      <parameter><optional>fill = true</optional></parameter>
     </paramdef>
     <paramdef>int 
      <parameter><optional>padding = 0</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Packt vom Boden aus oder von links in den Box Container.
   </shortdesc>
   <desc>
    <simpara>
	 <function class="GtkBox">pack_end()</function> packt das Kinderwidget
	 vom Boden oder von links in den Box Container. der
	 <parameter>expand</parameter> Parameter ist ein boolscher Wert 
	 der bestimmt ob das Kind sich asuweiten darf wenn der Elterncontainer
	 seine Gr&ouml;sse ver&auml;ndert. Der zweite Parameter
	 <parameter>fill</parameter> ist auch ein boolscher Wert der bestimmt ob
	 das Kind den gesamten Platz der ihm zur Verf&uuml;gung steht f&uuml;llen
	 soll. Der dritte Parameter, <parameter>padding</parameter>, ist ein
	 Integer Wert der die Polsterung um das Kinderwidget in Pixeln angibt. Die
	 Vorgabewerte sind <literal>true</literal>, <literal>true</literal>,
	 <literal>0</literal>.
	</simpara>
	<simpara>
	 Aufrufe von <function class="GtkBox">pack_end()</function> k&ouml;nnen
	 innerhalb desselben Box Container Widgets mit Aufrufen zu 
	 <function class="GtkBox">pack_start()</function> vermischt werden.
	</simpara>
   </desc>
  </method> 	 
	 
  <method id="gtk.gtkbox.method.pack_start_defaults">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pack_start_defaults</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Packt etwas von oben oder links in einen Box Container, mit den
	vorgegebenen Werten.
   </shortdesc>
   <desc>
    <simpara>
	 <function class="GtkBox">pack_start_defaults()</function> packt das
	 gegebene Kinderwidget mit den Vorgabewerten <literal>true</literal>,
	 <literal>true</literal>, <literal>0</literal> von oben oder links in den
	 Box Container.
	</simpara>
	<para>
	 Dasselbe Ergebnis kann erzielt werden in dem man einfach
	 <informalexample>
	  <programlisting role="php">
$box-&gt;pack_start($child);
	  </programlisting>
	 </informalexample> 
	 benutzt ohne die Werte der Parameter anzugeben.
	</para>
   </desc>
  </method> 	 

  <method id="gtk.gtkbox.method.pack_end_defaults">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pack_end_defaults</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Packt etwas vom Boden oder von links mit den Vorgabwerten der Parameter.
   </shortdesc>
   <desc>
    <simpara>
	 <function class="GtkBox">pack_end_defaults()</function> packt das
	 angegebene Kinderwidget von unten oder links in den Box Container unter
	 Benutzung der Vorgabewerte <literal>true</literal>,
	 <literal>true</literal>, <literal>0</literal> f&uuml;r die Parameter.
	</simpara>
	<para>
	 Dasselbe Ergebnis kann erzielt werden indem man
	 <informalexample>
	  <programlisting role="php">
$box-&gt;pack_end($child);
	  </programlisting>
	 </informalexample>
	</para>  
   </desc>
  </method>
  <method id="gtk.gtkbox.method.set_homgeneous">
   <funcsynopsis>
    <funcprototype>
	 <funcdef>void <function>set_homogeneous</function></funcdef>
	 <paramdef>bool <parameter>homogeneous</parameter></paramdef>
	</funcprototype>
   </funcsynopsis>
   <shortdesc>
    Schaltet Gr&ouml;sseneinstellung der Kinder gleich.
   </shortdesc>
   <desc>
    <simpara>
	 <function class="GtkBox">set_homogeneous()</function> setzt alle
	 Kinderwidgets in einem Container auf die Gr&ouml;sse des gr&ouml;ssten
	 Kinderwidgets wenn auf <literal>true</literal> gesetzt. Der Vorgabewert
	 ist <literal>false</literal>.
	</simpara>
	<simpara>
	 Beachte dass die <propname class="GtkBox">homgeneous</propname>
	 Eigenschaft die mit dieser Funktion korrespondiert sich nur auf die
	 Gr&ouml;sseneinteilung eines Kinderwidgets in einer Dimension bezieht,
	 also die Breite einer Zeile oder die H&ouml;he einer Spalte.
	</simpara>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.set_spacing">
   <funcsynopsis>
    <funcprototype>
	 <funcdef>void <parameter>spacing</parameter></funcdef>
	</funcprototype>
   </funcsynopsis>
   <shortdesc>
    Setzt den Abstand zwischen Kindern.
   </shortdesc>
   <desc>
    <simpara>
	 <function class="GtkBox">set_spacing()</function> wird benutzt um einen
	 universellen Mindestabstand zwischen den Kinderwidgets in Pixeln zu
	 setzen.
	</simpara>
	<simpara>
	 Die Voreinstellung ist <literal>0</literal>
	</simpara>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.reorder_child">
   <funcsynopsis>
    <funcprototype>
	 <funcdef>void <function>reorder_child</function></funcdef>
	 <paramdef>
	  <classname>GtkWidget</classname> <parameter>child</parameter>
	 </paramdef> 
	 <paramdef>int <parameter>position></parameter></paramdef>
	</funcprototype>
   </funcsynopsis>
   <shortdesc>
    Setzt das Kind auf eine neue Position.
   </shortdesc>
   <desc>
    <simpara>
	 <function class="GtkBox">reorder_child()</function> setzt die Postion des
	 Kindes im <propname class="GtkBox">children</propname> Array auf die als
	 zweiten Parameter gegebene Position.
	</simpara>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.set_child_packing">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_child_packing</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>child</parameter>
     </paramdef>
     <paramdef>bool <parameter>expand</parameter></paramdef>
     <paramdef>bool <parameter>fill</parameter></paramdef>
     <paramdef>int <parameter>padding</parameter></paramdef>
     <paramdef>
      <enumname>GtkPackType</enumname> <parameter>pack_type</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Setzt die Packparameter f&uuml;r ein Kind.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkBox">set_child_packing()</function> setzt die
	 <classname>GtkBoxChild</classname> Parameter f&uuml;r ein Kinderwidget.
	</simpara> 
   </desc>
  </method>

  <method id="gtk.gtkbox.method.query_child_packing">
   <funcsynopsis>
    <funcprototype>
     <funcdef>array <function>query_child_packing</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> <parameter>child</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Fragt die Pack Parameter f&uuml;r ein Kind ab.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkBox">query_children_packing()</function> ist ein Weg
	 die <classname>GtkBoxChild</classname> Parameter
	 <parameter>expand</parameter>, <parameter>fill</parameter>,
	 <parameter>padding</parameter> und <parameter>pack_type</parameter>
	 f&uuml;r ein individuelles Kind abzufragen.
    </simpara>
   </desc>
  </method>
 </methods>

 <properties>

  <prop id="gtk.gtkbox.property.children" type="ro">
   <propname>children</propname>
   <proptype>array</proptype>
   <shortdesc>
    Array mit Packinformationen der Kinder.
   </shortdesc>
   <desc>
    <simpara>
	 Die Packinformationen f&uuml; die einzelnen Kinderwidgets ist in
	 <propname class="GtkBox">children</propname> als ein Array von
	 <classname>GtkBoxChild</classname> Objekten abgelegt.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkbox.property.spacing" type="ro">
   <propname>spacing</propname>
   <proptype>int</proptype>
   <shortdesc>
    Universelle Abstandspolitik.
   </shortdesc>
   <desc>
    <simpara>
	 Die <propname class="GtkBox">spacing</propname> Eigenschaft
	 repr&auml;sentiert den Minimalen Abstand zwischen den Kinderwidgets in
	 Pixeln. Diese Einstellung gilt universell f&uuml;r den gesamten Box
	 Container.
    </simpara>
    <simpara>
	 Um den Abstand f&uuml;r ein individuelles Kinderwidget zu setzen, benutzt
	 man <function class="GtkBox">pack_start()</function>,
	 <function class="GtkBox">pack_end()</function>,
	 <function class="GtkBox">set_child_packing()</function>, oder die
	 <propname class="GtkBoxChild">padding</propname> Eigenschaft von
	 <classname>GtkBoxChild</classname>.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkbox.property.homogeneous" type="ro">
   <propname>homogeneous</propname>
   <proptype>bool</proptype>
   <shortdesc>
    Universelle Gr&ouml;seneinstellungspolitik.
   </shortdesc>
   <desc>
    <simpara>
	 Die <propname class="GtkBox">homgeneous</propname> Eigenschaft ist ein
	 boolscher Wert der, wenn auf <literal>true</literal> gesetzt, alle
	 Kinderwidgets in dem Container auf die gleiche Gr&ouml;sse setzt wie das
	 gr&ouml;sste Kind.
    </simpara>
    <simpara>
	 Benutze die <function class="GtkBox">set_homgeneous()</function> um
	 diesen Wert zu setzen.
	</simpara> 
    <simpara>
     Beachte dass der Wert dieser Eigenschaft nur eine Dimension beeinflusst,
	 und zwar die H&ouml;he einer Zeile oder die Breite einer Spalte,
	 ungeachtet der Einstellungen.
    </simpara>
   </desc>
  </prop>

 </properties>

</classentry>
