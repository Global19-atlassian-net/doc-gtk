<?xml version="1.0" encoding="ISO-8859-1" ?>
<chapter id="widgets">
 <title>Widgets und Container</title>

 <sect1 id="widgets.intro">
  <title>Einleitung</title>
  <simpara>
   Dieses Kapitel wird einige der Konzepte hinter GTK+ erklären,
   und wie man diese benutzen kann.
  </simpara>
 </sect1>

 <sect1 id="widgets.whatare">
  <title>Was sind Widgets?</title>
  <simpara>
   <literal>Widget</literal> ist ein Begriff der in der X-Window Welt für
    jegliche Benutzerschnittstelle gebraucht wird.
    Ein Widget kann eine Textbox sein, eine Beschriftung, ein Rahmen, ein
    Fenster oder irgendein anderer GUI Bestandteil.
    Alle GTK Widgets sind von der allgemeinen Basisklasse 
    <classname>GtkWidget</classname> abgeleitet und erben so
    die Methoden, Signale und Eigenschaften die dort implementiert sind.
  </simpara>
  <simpara>
   Aus der Perspektive des Programmierens hat ein Widget einen fünfstufigen
   Lebenszyklus:
  </simpara>
  <para>
   <orderedlist>
    <listitem>
     <simpara>Erstellung</simpara>
     <simpara>
      In PHP-GTK geschieht dies durch die Erschaffung eines Objektes, zum
       Beispiel <literal>$window = &amp;new GtkWindow();</literal>
     </simpara>
    </listitem>
    <listitem>
     <simpara>Platzierung</simpara>
     <simpara>
      In diesem Schritt wird ein Widget zu einem 
      <link linked="containers.whatare">Container</link> hinzugefügt. 
      Dies geschieht in PHP-GTK am einfachsten durch Benutzung der Syntax
      <literal>$container-&gt;add($widget);</literal>
     </simpara>
    </listitem>
    <listitem>
     <simpara>Signalverknüpfung</simpara>
     <simpara>
      Bei diesem Schritt werden Rückmeldungsfunktionen festgelegt.  Ein
      Beispiel hierfür wäre: 
      <literal>
       $widget-&gt;connect(&quot;event&quot;, &quot;my_focus_func&quot;);
      </literal>
      Wobei &quot;event&quot; ein vordefinierter Status wie zum Beispiel
      <signalname>clicked</signalname>ist und &quot;my_focus_func&quot;
      die bei diesem Status aufgerufene Subroutine.
     </simpara>
    </listitem>
    <listitem>
     <simpara>Anzeige</simpara>
     <simpara>
      Dies bedeutet dass das Widget für den Benutzer angezeigt wird.  Dieser
      Schritt beginnt mit <literal>$widget-&gt;show()</literal> und endet
      mit <literal>$widget-&gt;hide()</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>Zerstörung</simpara>
     <simpara>
      Dies geschieht wenn die Funktion 
      <literal>gtk::main_quit()</literal> aufgerufen wird. Alle Aktionen
      die hier notwendig sind werden intern behandelt.
     </simpara>
    </listitem>
    </orderedlist>
   </para>
  </sect1>
 
 <sect1 id="containers.whatare">
  <title>Was sind Container?</title>
  <simpara>
   Ein Container ist einfach ein
   <link linked="widgets.whatare">Widget</link> das wiederum
   ein anderes Widget enthalten kann. Die grosse Mehrzahl der Widgets
   fällt in diese Klasse; offensichtliche Beispiele sind 
   <classname>GtkWindow</classname>, <classname>GtkTable</classname>,
   und <classname>GtkBox</classname>. Abgesehen von dieser Eigenschaft
   sind sie genau dasselbe wie jedes andere Widget, sie können
   sowohl einem anderen Container hinzugefügt werden als auch
   selbst Kinderwidgets haben.
  </simpara> 
 </sect1>
</chapter> 
