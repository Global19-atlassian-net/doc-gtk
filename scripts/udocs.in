#!/bin/bash

#
# $Id$
#

SAXON="@SAXON@"
srcdir="@srcdir@"
LANGDIR="@LANGDIR@"
LANG="@LANG@"
BUILDDIR="build"
CHUNKDIR="$BUILDDIR/html"
PHPWEBDIR="$BUILDDIR/php"
TESTDIR="$BUILDDIR/test"
STYLESHEETDIR="$srcdir/stylesheets/xsl"

# Get Command Line Arguments
mode=q
stylesheet=update.xsl


while getopts :us: o
do	
    case "$o" in
        u )   mode="s";;
        s )   case "$OPTARG" in
               "chunk" ) stylesheet=chunk.xsl 
                         fileext=".html";;
               "phpweb" ) stylesheet=phpweb.xsl
                          fileext=".php";;
               * ) echo >&2 "$OPTARG is not a valid stylesheet please use phpweb or chunk" 
                   exit 1;;
             esac ;;
	    \? ) echo >&2 "Usage: $0 [-u] [-s phpweb|chunk] files ..."
		     exit 1;;
	esac

done

shift $(($OPTIND - 1))

#
# XML Files we need to process
#
files=$@

test -d $BUILDDIR || mkdir $BUILDDIR
test -d $TESTDIR || mkdir $TESTDIR

case "$stylesheet" in
    "chunk.xsl" ) finaldir="$CHUNKDIR"
                  test -d $CHUNKDIR || mkdir $CHUNKDIR ;;

    "phpweb.xsl" ) finaldir="$PHPWEBDIR"
                   test -d $PHPWEBDIR || mkdir $PHPWEBDIR ;;
    * ) echo >&2 "Unknown stylesheet $stylesheet"
        exit 1 ;;
esac

######################################################
#
# Get the actual names and paths of the files
#
######################################################
#
# Lets see if we need to update all modified xml files
#
######################################################
if [ -z "$files" ]
then
        echo "No files specified, defaulting to update mode..." 
        mode="s"
        echo "detecting which need to be updated..."
        for xmlfile in `find $srcdir/en -name "*.xml" | sed -e"s%^$srcdir\/en\/%%g" | sort`
        do
            if test -f $srcdir/$LANGDIR/$xmlfile  
            then
     	        xmlfilepath=$srcdir/$LANGDIR/$xmlfile	
            else
                xmlfilepath=$srcdir/en/$xmlfile
            fi

            ID=`head -n 1 $xmlfilepath | sed -e's%<[a-zA-Z0-9 \t\n]\+id="\([A-Za-z0-9.]\+\)"[a-zA-Z0-9 \t\n]\?>%\1%g'`
            htmlfilename="$ID$fileext"
            #
            # Lets see which path the file should be in
            #
            if test ".php" = "$fileext"
            then
                htmldir=$PHPWEBDIR
            else
                htmldir=$CHUNKDIR
            fi
            htmlfilename="./$htmldir/$htmlfilename" 

            if test "$xmlfilepath" -nt "$htmlfilename"
            then
                echo "$xmlfile"
                xmlfiles="$xmlfiles $xmlfilepath"
            fi
        done
        if [ -z "$xmlfiles" ]
        then
            echo "Nothing to update"
            exit 0
        else
            echo ""
        fi
else
    for file in $files 
    do
        for xmlfile in `find $srcdir/en -name $file | sed -e"s%^$srcdir\/en\/%%g" | sort`
        do
            if test -f $srcdir/$LANGDIR/$xmlfile  
            then
     	        xmlfile=$srcdir/$LANGDIR/$xmlfile	
            else
 	            xmlfile=$srcdir/en/$xmlfile
            fi
            xmlfiles="$xmlfiles $xmlfile"
        done
    done
fi

IDS=""

case $mode in
    s ) for file in $xmlfiles
        do
            ID=`head -n 1 $file | sed -e's%<[a-zA-Z0-9 \t\n]\+id="\([A-Za-z0-9.]\+\)"[a-zA-Z0-9 \t\n]\?>%\1%g'`
            if [ -z "$ID" ]
            then
                echo "Could not find ID in $file"
                exit 1
            fi
            if test $IDS="" 
            then
                IDS="//£[@id=\'$ID\']"
            else
                IDS="$IDS|//£[@id=\'$ID\']"
            fi
        done 
        IDS=`echo $IDS | sed -e"s%£%*%g"`
        cat "$STYLESHEETDIR/update.xsl" | sed -e"s%STYLESHEET%$stylesheet%g" | sed -e's%<xsl:message[a-zA-Z0-9 \t\n].*</xsl:message>%%g' | sed -e's%[<!]*--[>]\?%%g' | sed -e"s%IDMARKER%$IDS%g" > $STYLESHEETDIR/temp.xsl
        test -d $BUILDDIR/temp || mkdir $BUILDDIR/temp
        rm -f $TESTDIR/temp/*
        echo "Running Saxon to update: $xmlfiles"
        $($SAXON manual.xml $STYLESHEETDIR/temp.xsl base.dir="$BUILDDIR/temp/" html.ext="$fileext")
        cp -f $BUILDDIR/temp/* $finaldir/
        rm -rf $BUILDDIR/temp 
        rm -f $STYLESHEETDIR/temp.xsl
        ;;
    q ) #substiture in correct stylesheet and 
        cat "$STYLESHEETDIR/update.xsl" | sed -e"s%STYLESHEET%$stylesheet%g" | sed -e's%<xsl:message[a-zA-Z0-9 \t\n].*</xsl:message>%%g' > $STYLESHEETDIR/temp.xsl
        #We now need to process each file
        for file in $xmlfiles
        do
            DIRNAME=`echo $file | sed -e's%[.a-zA-Z0-9]*/%%g' | sed -e's%.xml%%g'`
            test -d $TESTDIR/$DIRNAME || mkdir $TESTDIR/$DIRNAME
            echo "Running Saxon to make: $file"
            $($SAXON $file $STYLESHEETDIR/temp.xsl base.dir="$TESTDIR/$DIRNAME/" html.ext="$fileext")
        done
        rm -f $STYLESHEETDIR/temp.xsl
        ;;
esac
