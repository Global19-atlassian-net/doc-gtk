<?xml version="1.0" encoding="ISO-8859-1" ?>
<classentry id="gdk.gdkfont">
 <classmeta>
  <classtitle>GdkFont</classtitle>
  <classparent></classparent>
  <shortdesc>
   Estructura para mantener la informacion de una fuente.
  </shortdesc>
  <desc>
   <simpara>
    <classname>GdkFont</classname> es una estructura de datos que contiene la
    informacion basica de una fuente, que son
    <propname class="GdkFont">type</propname>, 
    <propname class="GdkFont">ascent</propname> y 
    <propname class="GdkFont">descent</propname>.  No hay contructor,
    ya que las fuentes disponibles las provee el sistema. La estructura
    <classname>GdkFont</classname> simplemente permite a una nueva fuente ser
    cargada y pedida.
   </simpara>
   <simpara>
    Para cargar una fuente, usa <function>gdk::font_load</function>.  Para
    carga un conjunto de fuentes - un rango de distintas fuentes - usa
    <function>gdk::fontset_load</function>.  Cualquiera de las funciones
    devolveran una sola <classname>GdkFont</classname>.
   </simpara>
   <note>
    <simpara>
     En win32 actualmente, todas las fuentes son del tipo 
     <literal>GDK_FONT_FONTSET</literal>, deacuerdo a el metodo de carga.
    </simpara>
   </note>
  </desc>
 </classmeta>

 <methods>

  <method id="gdk.gdkfont.method.extents">
   <funcsynopsis>
    <funcprototype>
     <funcdef>array <function>extents</function></funcdef>
     <paramdef>string <parameter>text_string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Devuelve un array de informacion del tamaño.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GdkFont">extents</function> devuelve un array de cinco
     enteros que representan izquierda bearing, derecha bearing, ancho,
     ascent y descent del string que usa la fuente, o de la fuenet por si misma.
    </simpara>
    <simpara>
     Los  bearing izquierdos y derechos son la distancia entre el origen del 
     dibujo hasta extremo izquierdo y derecho del string respectivamente, medido
     en pixels.
    </simpara>
    <simpara>
     El ancho el el largo del string actual, medido en pixels. Esta medida 
     da informacion de donde comienza a dibujarse el proximo string, si es que
     hay mas de uno. El entero devuelto deberia ser mayor o menor que el valor
     de la derecha bearing.
    </simpara>
    <simpara>
     Los ascent y descent son a medida en pixel de la extension actual del 
     string por debajo y por arriba de la linea base.
    </simpara>
    <simpara>
     Si estas trabajando en unix, todo lo de arriba seria correcto. SI estas
     usando win32, el bearing de izquierda siempre seria  <literal>0</literal>,
     el de derecha seria igual a el ancho, el ascent seria alto-linea + 1 
     pixels, y el descent es descent + 1 pixels.  Usa las propiedades de
     <classname>GdkFont</classname> si necesitas  los valores de
     <propname class="GdkFont">ascent</propname> y 
     <propname class="GdkFont">descent</propname> en win32.
    </simpara>
   </desc>
  </method>

  <method id="gdk.gdkfont.method.measure">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>measure</function></funcdef>
     <paramdef>string <parameter>text_string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    El acho del dibujo del string de texto, medido en pixels.
   </shortdesc>
   <desc>
    <simpara>
     El retorno desde el metodo es equivalente a el bearing derecho devuelto
     por <function class="GdkFont">extents</function>.  Es el tamaño en pixels
     del ancho del string.
    </simpara>
    <simpara>
     Si necesitas un ancho logico del string - esto es, hasta el punto donde el
     proximo caracter deberia insertarse- usa
     <function class="GdkFont">width</function>.
    </simpara>
   </desc>
  </method>

  <method id="gdk.gdkfont.method.height">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>height</function></funcdef>
     <paramdef>string <parameter>text_string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Devuelve el alto de la linea, medido en pixels.
   </shortdesc>
   <desc>
    <simpara>
     El valor de retorno de <function class="GdkFont">height</function> es
     se saca a partir de la suma de los valores de <parameter>ascent</parameter>
     y <parameter>descent</parameter> devueltos por 
     <function class="GdkFont">extents</function> y relacionado con el string
     actual.
    </simpara>
    <simpara>
     En win32, estos es un valor esoterico.  Suma los valores de retorno de las 
     propiedades <classname>GdkFont</classname> 
     <propname class="GdkFont">ascent</propname> y
     <propname class="GdkFont">descent</propname> para obtener el valor del alto
     de la fuente.
    </simpara>
    <simpara>
     El valor de altura es el alto-linea, dado en pixels, y representa el 
     espacio logico requerido por la linea. Si esta usando esta medida para
     calcular el tamaño de un caja de texto, necesitaras sumar 6 pixels a el 
     total para permitir los bordes de los widget de texto.
    </simpara>
   </desc>
  </method>

  <method id="gdk.gdkfont.method.width">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>width</function></funcdef>
     <paramdef>string <parameter>text_string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    El ancho logico de un string de texto, medido en pixels.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GdkFont">width</function> devuelve el ancho logico
     de un string de texto, medido en pixels. El ancho logico incluye el area
     donde se deberia escribir el proximo caracter.
    </simpara>
    <simpara>
     Este metodo no funciona en Windows, y devuelve siempre la medidda de 
     bearing de la derecha.
    </simpara>
   </desc>
  </method>

 </methods>

 <properties>

  <prop id="gdk.gdkfont.property.type" type="ro">
   <propname>type</propname>
   <proptype>int</proptype>
   <shortdesc>
    Tipo de fuente o conjunto de fuentes.
   </shortdesc>
   <desc>
    <simpara>
     El entero que retorna tendria un valor de <literal>0</literal>, 
     que indica que la fuente se ha cargado como una fuente unica o   
     <literal>1</literal>  que forma parte de un conjuto de fuentes. Mira
     <enumname>GdkFontType</enumname>.
    </simpara>
    <simpara>
     Mira que en Win32 esta propiedad no siempre tiene el valor
     <literal>1</literal>, debido a que todas la fuentes se cargan para 
     proveer soporte para una gran variedad de caracteres usados por el 
     sistema operativo.
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkfont.property.ascent" type="ro">
   <propname>ascent</propname>
   <proptype>int</proptype>
   <shortdesc>
    Linea base de arriba del area logica.
   </shortdesc>
   <desc>
    <simpara>
     El <propname class="GdkFont">ascent</propname> es la distancia entre
     la linea base de la fuente y la parte de arriba del espacio logico 
     tomado por esa fuente.
    </simpara>
    <simpara>
     Suma esto a <propname class="GdkFont">descent</propname> param obtener
     el tamaño total del valor de la fuente en pixels.
    </simpara>
   </desc>
  </prop>

  <prop id="gdk.gdkfont.property.descent" type="ro">
   <propname>descent</propname>
   <proptype>int</proptype>
   <shortdesc>
    Linea base del fondo del area logica.
   </shortdesc>
   <desc>
    <simpara>
     El <propname class="GdkFont">descent</propname> es la distancia
     entre la linea base de la fuente y el fondo de el espacio logico tomado
     por la fuente.
    </simpara>
   </desc>
  </prop>

 </properties>

</classentry>
