<?xml version="1.0" encoding="ISO-8859-1" ?>
<classentry id="gtk.gtkpaned">
 <classmeta>
  <classtitle>GtkPaned</classtitle>
  <classparent>GtkContainer</classparent>
  <shortdesc>
   Base class for widgets with two adjustable panes.
  </shortdesc>
  <desc>
   <simpara>
    <classname>GtkPaned</classname> provides methods and properties for
    container widgets with two panes whose relative size can be adjusted
    by the end user.  The panes are arranged horizontally in 
    <classname>GtkHPaned</classname> or vertically in 
    <classname>GtkVPaned</classname>, and are divided by a handle.  By
    default, the initial position of the handle is set in accordance with
    the size requests of the child widgets.
   </simpara>
   <simpara>
    Note that the panes are defined through their child widgets, i.e. they
    have an initial size of zero.
   </simpara>
   <simpara>
    <classname>GtkPaned</classname> is an abstract base class and cannot
    be constructed directly.
   </simpara>
  </desc>
 </classmeta>

 <methods>

  <method id="gtk.gtkpaned.method.add1">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>add1</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>child</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds child to first pane.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkPaned">add1()</function> adds the child widget
     specified to the top or left pane of a 
     <classname>GtkPaned</classname>-based widget.
    </simpara>
    <simpara>
     The only difference between <function class="GtkPaned">add1()</function> 
     and <function class="GtkPaned">pack1()</function> is that the packing
     parameters are not visible to the programmer where 
     <function class="GtkPaned">add1()</function> is used, and so cannot
     easily be altered.  The settings are identical to the 
     <function class="GtkPaned">pack1()</function> defaults.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkpaned.method.add2">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>add2</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>child</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds child to second pane.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkPaned">add2()</function> adds the child widget
     specified to the bottom or right pane of a 
     <classname>GtkPaned</classname>-based widget.
    </simpara>
    <simpara>
     The only difference between <function class="GtkPaned">add2()</function> 
     and <function class="GtkPaned">pack2()</function> is that the packing
     parameters are not visible to the programmer where 
     <function class="GtkPaned">add2()</function> is used, and so cannot
     easily be altered.  The settings are identical to the 
     <function class="GtkPaned">pack2()</function> defaults.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkpaned.method.pack1">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pack1</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>child</parameter>
     </paramdef>
     <paramdef>bool 
      <parameter><optional>resize = false</optional></parameter>
     </paramdef>
     <paramdef>bool 
      <parameter><optional>shrink = true</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds child to first pane, with options.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkPaned">pack1()</function> packs the child widget
     specified into the top or left pane of a 
     <classname>GtkPaned</classname>-based widget.
    </simpara>
    <simpara>
     The <parameter>resize</parameter> parameter when set to its default 
     <literal>false</literal> ensures that the pane will not expand beyond
     its initial size when the top-level window is maximised, in the
     direction of the pane arrangement.  Note that the 
     <parameter>resize</parameter> parameter describes the spatial
     relationship between the two panes, so that setting both panes alike
     will always result in both panes resizing when the top-level window
     is maximised.  The user resizing facility offered by the handle is
     not affected by the <parameter>resize</parameter> setting.
    </simpara>
    <simpara>
     The <parameter>shrink</parameter> parameter when set to its default 
     <literal>true</literal> allows the pane to shrink beyond the size
     requested by its child widget.  Setting the 
     <parameter>shrink</parameter> parameter to <literal>false</literal> 
     prevents it from doing this.  Note that setting the parameter to 
     <literal>false</literal> across both panes renders the dividing handle
     ineffective where the size of the top-level window is reliant upon the
     size requests of the child widgets.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkpaned.method.pack2">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pack2</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
       <parameter>child</parameter>
     </paramdef>
     <paramdef>bool 
      <parameter><optional>resize = true</optional></parameter>
     </paramdef>
     <paramdef>bool 
      <parameter><optional>shrink = true</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds child to second pane, with options.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkPaned">pack2()</function> packs the child widget
     specified into the bottom or right pane of a 
     <classname>GtkPaned</classname>-based widget.
    </simpara>
    <simpara>
     The <parameter>resize</parameter> parameter when set to its default
     <literal>true</literal> allows the pane and its child widget to expand
     to fill the area between the dividing handle and the edge of the
     container when the toplevel window is maximised, in the direction of
     the pane arrangement.  The position of the dividing handle can be set
     using <function class="GtkPaned">set_position()</function>, or by
     default is set at the size requested by the child belonging to the
     opposite pane, where its <parameter>resize</parameter> parameter has
     been set to <literal>false</literal>.
    </simpara>
    <simpara>
     Note that the <parameter>resize</parameter> parameter describes the
     spatial relationship between the two panes, so that setting both panes
     alike will always result in both panes resizing when the top-level
     window is maximised.  The user resizing facility offered by the handle
     is not affected by the <parameter>resize</parameter> setting.
    </simpara>
    <simpara>
     The <parameter>shrink</parameter> parameter when set to its default 
     <literal>true</literal> allows the pane to shrink beyond the size
     requested by its child widget.  Setting the 
     <parameter>shrink</parameter> parameter to <literal>false</literal> 
     prevents it from doing this.  Note that setting the parameter to 
     <literal>false</literal> across both panes renders the dividing handle
     ineffective where the size of the top-level window is reliant upon the
     size requests of the child widgets.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkpaned.method.set_position">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_position</function></funcdef>
     <paramdef>int <parameter>position</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets position of dividing handle.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkPaned">set_position()</function> sets the
     position of the dividing handle at the specified number of pixels
     from the edge of the widget, in the direction of the pane arrangement,
     without regard to the size requests of the child widgets in the panes. 
     It is overridden by the user's repositioning of the dividing handle.
    </simpara>
    <para>
     To unset the position of the dividing handle, use 
     <informalexample>
      <programlisting role="php">$paned-&gt;set_position(-1);</programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

  <!-- TODO  Find out why we don't have get_position() in PHP-GTK- sf  -->

  <method id="gtk.gtkpaned.method.set_handle_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_handle_size</function></funcdef>
     <paramdef>int <parameter>size</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets handle size.  *deprecated in GTK2*
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkPaned">set_handle_size()</function> can currently
     be used to set the width or height of the handle in pixels.  The
     default setting is 5 pixels in the win32 binary, or 10 pixels in the
     1.2.* series of GTK+.  In GTK2 the size of the handle will be set at
     5 pixels, across both platforms.
    </simpara>
    <note>
     <simpara>
      Please note that both this function and the 
      <propname class="GtkPaned">handle_size</propname> property are
      deprecated in GTK2, and so should not be used.
     </simpara>
    </note>
   </desc>
  </method>

  <method id="gtk.gtkpaned.method.set_gutter_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_gutter_size</function></funcdef>
     <paramdef>int <parameter>size</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets gutter size.  *deprecated in GTK2*
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkPaned">set_gutter_size()</function> can currently
     be used to set the width or height in pixels of the gutter where the
     dividing handle is based, only where the 1.2.* series of GTK+ is being
     used to compile PHP-GTK.  It does nothing in the win32 version.
    </simpara>
    <note>
     <simpara>
      Please note that this function is more than deprecated in GTK2; the
      <propname class="GtkPaned">gutter_size</propname> property does not
      exist in later releases.  Do not use this function.
     </simpara>
    </note>
   </desc>
  </method>

 </methods>

 <properties>

  <prop id="gtk.gtkpaned.property.child1" type="ro">
   <propname>child1</propname>
   <proptype>GtkWidget</proptype>
   <shortdesc>
    Child widget in first pane.
   </shortdesc>
   <desc>
    <simpara>
     <propname class="GtkPaned">child1</propname> is the internal name
     for the child widget in the first pane of a 
     <classname>GtkPaned</classname>-derived widget.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkpaned.property.child2" type="ro">
   <propname>child2</propname>
   <proptype>GtkWidget</proptype>
   <shortdesc>
    Child widget in second pane.
   </shortdesc>
   <desc>
    <simpara>
     <propname class="GtkPaned">child2</propname> is the internal name
     for the child widget in the second pane of a 
     <classname>GtkPaned</classname>-derived widget.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkpaned.property.handle_size" type="ro">
   <propname>handle_size</propname>
   <proptype>int</proptype>
   <shortdesc>
    Size of separating handle.  *deprecated in GTK2*
   </shortdesc>
   <desc>
    <simpara>
     <propname class="GtkPaned">handle_size</propname> is an integer
     describing the width or height (as appropriate) of the separating
     handle in a <classname>GtkPaned</classname>-derived widget.
    </simpara>
    <note>
     <simpara>
      Please note that in future releases of GTK+ there is no such property. 
      It will be replaced internally by private fields.
     </simpara>
    </note>
   </desc>
  </prop>

  <prop id="gtk.gtkpaned.property.gutter_size" type="ro">
   <propname>gutter_size</propname>
   <proptype>int</proptype>
   <shortdesc>
    Size of separating gutter.  *deprecated in GTK2*
   </shortdesc>
   <desc>
    <simpara>
     <propname class="GtkPaned">gutter_size</propname> is an integer
     describing the width or height (as appropriate) of the gutter which
     provides the base for the separating handle of a 
     <classname>GtkPaned</classname>-derived widget.
    </simpara>
    <note>
     <simpara>
      Please note that in later releases of GTK+ - including that currently
      used by the PHP-GTK win32 binary - there is no such property.  The 
      gutter itself has been deprecated.
     </simpara>
    </note>
   </desc>
  </prop>

  <prop id="gtk.gtkpaned.property.child1_resize" type="ro">
   <propname>child1_resize</propname>
   <proptype>bool</proptype>
   <shortdesc>
    Status of first child's resize setting.
   </shortdesc>
   <desc>
    <simpara>
     <propname class="GtkPaned">child1_resize</propname> describes the
     current status of the <parameter>resize</parameter> parameter relating
     to the child that is packed in the first pane.  This is useful where
     the end user needs to be given control over the 
     <parameter>resize</parameter> setting.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkpaned.property.child1_shrink" type="ro">
   <propname>child1_shrink</propname>
   <proptype>bool</proptype>
   <shortdesc>
    Status of first child's shrink setting.
   </shortdesc>
   <desc>
    <simpara>
     <propname class="GtkPaned">child1_shrink</propname> describes the
     current status of the <parameter>shrink</parameter> parameter relating
     to the child that is packed in the first pane.  This is useful where
     the end user needs to be given control over the 
     <parameter>shrink</parameter> setting.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkpaned.property.child2_resize" type="ro">
   <propname>child2_resize</propname>
   <proptype>bool</proptype>
   <shortdesc>
    Status of second child's resize setting.
   </shortdesc>
   <desc>
    <simpara>
     <propname class="GtkPaned">child2_resize</propname> describes the
     current status of the <parameter>resize</parameter> parameter relating
     to the child that is packed in the second pane.  This is useful where
     the end user needs to be given control over the 
     <parameter>resize</parameter> setting.
    </simpara>
   </desc>
  </prop>

  <prop id="gtk.gtkpaned.property.child2_shrink" type="ro">
   <propname>child2_shrink</propname>
   <proptype>bool</proptype>
   <shortdesc>
    Status of second child's shrink setting.
   </shortdesc>
   <desc>
    <simpara>
     <propname class="GtkPaned">child2_shrink</propname> describes the
     current status of the <parameter>shrink</parameter> parameter relating
     to the child that is packed in the second pane.  This is useful where
     the end user needs to be given control over the 
     <parameter>shrink</parameter> setting.
    </simpara>
   </desc>
  </prop>

 </properties>

</classentry>
