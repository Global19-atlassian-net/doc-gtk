<?xml version="1.0" encoding="ISO-8859-1" ?>
<refentry id="gtk.functions">
 <refmeta>
  <refentrytitle>Funciones GTK miscelaneas</refentrytitle>
  <shortdesc>
  Métodos estaticos en GTK.
  </shortdesc>
 </refmeta>

  <method id="gtk.method.accel_group_get_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkAccelGroup</classname> 
      <function>gtk::accel_group_get_default</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Toma el valor por defecto <classname>GtkAccelGroup</classname> de la ventana
    de mayor nivel.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.button_box_set_child_ipadding_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::button_box_set_child_ipadding_default</function>
     </funcdef>
     <paramdef>int <parameter>ipad_x</parameter></paramdef>
     <paramdef>int <parameter>ipad_y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets <classname>GtkButtonBox</classname> default child internal padding.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.button_box_set_child_size_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::button_box_set_child_size_default</function>
     </funcdef>
     <paramdef>int <parameter>min_width</parameter></paramdef>
     <paramdef>int <parameter>min_height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets <classname>GtkButtonBox</classname> default minimum child size.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.check_version">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>gtk::check_version</function></funcdef>
     <paramdef>int <parameter>required_major</parameter></paramdef>
     <paramdef>int <parameter>required_minor</parameter></paramdef>
     <paramdef>int <parameter>required_micro</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Se fija cual versión de  GTK+ se esta usando.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_finish">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::drag_finish</function></funcdef>
     <paramdef>
      <classname>GdkDragContext</classname> 
      <parameter>context</parameter>
     </paramdef>
     <paramdef>bool <parameter>success</parameter></paramdef>
     <paramdef>bool <parameter>del</parameter></paramdef>
     <paramdef>int <parameter>time</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_get_source_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkWidget</classname> 
      <function>gtk::drag_get_source_widget</function>
     </funcdef>
     <paramdef>
      <classname>GdkDragContext</classname> 
      <parameter>context</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_set_default_icon">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::drag_set_default_icon</function></funcdef>
     <paramdef>
      <classname>GdkColormap</classname> 
      <parameter>colormap</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkPixmap</classname> 
      <parameter>pixmap</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkBitmap</classname> 
      <parameter>mask</parameter>
     </paramdef>
     <paramdef>int <parameter>hot_x</parameter></paramdef>
     <paramdef>int <parameter>hot_y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_set_icon_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::drag_set_icon_default</function></funcdef>
     <paramdef>
      <classname>GdkDragContext</classname> 
      <parameter>context</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_set_icon_pixmap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::drag_set_icon_pixmap</function></funcdef>
     <paramdef>
      <classname>GdkDragContext</classname> 
      <parameter>context</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkColormap</classname> 
      <parameter>colormap</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkPixmap</classname> 
      <parameter>pixmap</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkBitmap</classname> 
      <parameter>mask</parameter>
     </paramdef>
     <paramdef>int <parameter>hot_x</parameter></paramdef>
     <paramdef>int <parameter>hot_y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_set_icon_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::drag_set_icon_widget</function></funcdef>
     <paramdef>
      <classname>GdkDragContext</classname> 
      <parameter>context</parameter>
     </paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>int <parameter>hot_x</parameter></paramdef>
     <paramdef>int <parameter>hot_y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_dest_handle_event">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::drag_dest_handle_event</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>toplevel</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkEvent</classname> 
      <parameter>event</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.drag_source_handle_event">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::drag_source_handle_event</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkEvent</classname> 
      <parameter>event</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.draw_arrow">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_arrow</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
       <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkArrowType</enumname> 
      <parameter>arrow_type</parameter>
     </paramdef>
     <paramdef>bool <parameter>fill</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Dibuja una flecha.   
   </shortdesc>
   <desc>
    <simpara>
    La mayor ventaja de dibujar tu propia flecha GTK en vez de usar el widget
     <classname>GtkArrow</classname> es que podes darle forma, usando los parametros
     <parameter>width</parameter> y <parameter>height</parameter>. 
     El parametro de <parameter>fill</parameter> se refiere a el color de la flecha, 
     con <literal>false</literal> utiliza en mismo color que el area de dibujo. 
     Todas las posiciones y tamaños son absolutos en terminos de dibujo.
    </simpara>
    <simpara>
     <literal>
      gtk::draw_arrow($style, $gdkwindow, GTK_STATE_NORMAL, GTK_SHADOW_OUT, 
      GTK_ARROW_RIGHT, false, $x, $y, $width, $height);
     </literal>
    </simpara>
   </desc>
  </method>

  <method id="gtk.method.draw_box">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_box</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Dibuja una caja.
   </shortdesc>
   <desc>
    <simpara>
    Esta es la manera mas simple de dibujar una caja, con o sin
    sombra. El coloreo es totalmente dependiente del
     <classname>GtkStyle</classname> que es pasado como primer
     parametro.
    </simpara>
    <simpara>
     <literal>
      gtk::draw_box($style, $gdkwindow, GTK_STATE_ACTIVE, GTK_SHADOW_IN,
      $x, $y, $width, $height);
     </literal>
    </simpara>
   </desc>
  </method>

  <method id="gtk.method.draw_diamond">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_diamond</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.draw_hline">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_hline</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x1</parameter></paramdef>
     <paramdef>int <parameter>x2</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.draw_oval">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_oval</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Not implemented.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.draw_shadow">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_shadow</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.draw_string">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_string</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.draw_vline">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::draw_vline</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>int <parameter>y1</parameter></paramdef>
     <paramdef>int <parameter>y2</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.entry_new_with_max_length">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkWidget</classname> 
      <function>gtk::entry_new_with_max_length</function>
     </funcdef>
     <paramdef>int <parameter>max</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Crear <classname>GtkEntry</classname> con cantidad de caracteres limitados.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.events_pending">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::events_pending</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Se fija si hay un <classname>GdkEvent</classname> en cola.
   </shortdesc>
   <desc>
    <simpara>
     <function>gtk::events_pending</function> se utiliza cuando hay una
     función que necesita ser arrastrada durante largos porcesod de
     ejecución, por ejemplo actualizando una barra de estado durante 
     una consulta SQL.
    </simpara>
    <para>
    La formna en la que seria usado en esa situació es teniendo
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

while(gtk::events_pending()) gtk::main_iteration();

?>
]]>
      </programlisting>
     </informalexample>
    despueso cada actualización se le hace a la GUI.  Esto causa que el ciclo 
    principal se ejecute cada vez que os enventos sean anticipados.
    </para>
    <simpara>
     Mira también:  <function>gtk::main_iteration</function>, 
     <function>gtk::main_iteration_do</function>, 
     <function>gtk::timeout_add</function>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.method.false">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::false</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Devuelve false.
   </shortdesc>
   <desc>
    <simpara>
    Una función estatica que simplemente devuelve  false.  Por defecto esto es 
     <literal>null</literal>; podes forzar a devolver <literal>0</literal> declarandolo
     como un tipo <literal>(int)</literal>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.method.hbutton_box_get_layout_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <enumname>GtkButtonBoxStyle</enumname> 
      <function>gtk::hbutton_box_get_layout_default</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Devuelve la forma de <classname>GtkHButtonBox</classname> por defecto.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.hbutton_box_get_spacing_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int 
      <function>gtk::hbutton_box_get_spacing_default</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Devuelve el espaciado por defecto de  <classname>GtkHButtonBox</classname>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.grab_add">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::grab_add</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Dota a un widget con la posibilidad de  keyboard grab.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.grab_get_current">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkWidget</classname> 
      <function>gtk::grab_get_current</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Devuelve el widget que actualmente tiene un keyboard grab.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.grab_remove">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::grab_remove</function></funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Borra un keyboard grab de un widget.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.hbutton_box_set_layout_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::hbutton_box_set_layout_default</function>
     </funcdef>
     <paramdef>
      <enumname>GtkButtonBoxStyle</enumname> 
      <parameter>layout</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Pone como por defecto la forma para <classname>GtkHButtonBox</classname>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.hbutton_box_set_spacing_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::hbutton_box_set_spacing_default</function>
     </funcdef>
     <paramdef>int <parameter>spacing</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Pone como por defecto es espaciado para <classname>GtkHButtonBox</classname>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.idle_add">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::idle_add</function></funcdef>
     <paramdef>
      <literal>GtkFunction</literal> 
      <parameter>function</parameter>
     </paramdef>
     <paramdef>mixed 
      <parameter><optional>data</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.idle_remove">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::idle_remove</function></funcdef>
     <paramdef>int <parameter>idle_handler_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.input_add">
   <funcsynopsis>
    <funcprototype>
     <funcdef>XXX <function>gtk::input_add</function></funcdef>
     <paramdef>XXX</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.input_remove">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::input_remove</function></funcdef>
     <paramdef>int <parameter>input_handler_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.item_factories_path_delete">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::item_factories_path_delete</function>
     </funcdef>
     <paramdef>string <parameter>ifactory_path</parameter></paramdef>
     <paramdef>string <parameter>path</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.item_factory_from_path">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkItemFactory</classname> 
      <function>gtk::item_factory_from_path</function>
     </funcdef>
     <paramdef>string <parameter>path</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.item_factory_from_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkItemFactory</classname> 
      <function>gtk::item_factory_from_widget</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.item_factory_parse_rc">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::item_factory_parse_rc</function></funcdef>
     <paramdef>string <parameter>file_name</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.item_factory_parse_rc_string">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::item_factory_parse_rc_string</function>
     </funcdef>
     <paramdef>string <parameter>rc_string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.item_factory_path_from_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string 
      <function>gtk::item_factory_path_from_widget</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.main">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::main</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Runs the main loop.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.main_do_event">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::main_do_event</function></funcdef>
     <paramdef>
      <classname>GdkEvent</classname> 
      <parameter>event</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Procesa un solo <classname>GdkEvent</classname>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.main_iteration">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::main_iteration</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Ejecuta el ciclo principal una vez y luego bloquea GTK hasta que un evento este 
   pendiente.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.main_iteration_do">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::main_iteration_do</function></funcdef>
     <paramdef>bool 
      <parameter><optional>blocking = TRUE</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Ejecuta una vez el ciclo principal, con opcion a bloqueo.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.main_level">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::main_level</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Devuelve lacantidad de ciclos del ciclo principal.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.main_quit">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::main_quit</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Aborta el ciclo principal.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_arrow">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_arrow</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>
      <enumname>GtkArrowType</enumname> 
      <parameter>arrow_type</parameter>
     </paramdef>
     <paramdef>bool <parameter>fill</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_box">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_box</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_box_gap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_box_gap</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
     <paramdef>
      <enumname>GtkPositionType</enumname> 
      <parameter>gap_side</parameter>
     </paramdef>
     <paramdef>int <parameter>gap_x</parameter></paramdef>
     <paramdef>int <parameter>gap_width</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_check">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_check</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_cross">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_cross</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_diamond">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_diamond</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_extension">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_extension</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
     <paramdef>
      <enumname>GtkPositionType</enumname> 
      <parameter>gap_side</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_flat_box">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_flat_box</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Pinta una caja chata.
   </shortdesc>
   <desc>
    <simpara>
     Ademas del <enumname>GtkShadowType</enumname> detallado aqui, 
     el efecto es similar a la caja dibujada usando
     <function>gtk::draw_box</function> y
     <literal>GTK_SHADOW_NONE</literal>.
    </simpara>
    <simpara>
     Cuando se usa un <classname>GdkRectangle</classname>  deberia estar en la
     misma posición y tener la misma dimensión como los pasados 
     en la función, si no solamente la superposicion entre los dos rectangulos
     se mostrará, o no si no hay una zona de superposicion.
     El parametro  <parameter>detail</parameter> nohace nada aqui, 
     pero se necesita por compatibilidad. Pasanolo como
     <literal>null</literal>, o como un string cualquier esta bien.
    </simpara>
    <para>
    <informalexample>
     <programlisting role="php">
<![CDATA[
$rectangle = &new GdkRectangle($x, $y, $width, $height);
gtk::paint_flat_box($style, $gdkwindow, GTK_STATE_ACTIVE, GTK_SHADOW_NONE, 
$rectangle, $drawingarea, null, $x, $y, $width, $height);
]]>
      </programlisting>
     </informalexample>
    </para>
   </desc>
  </method>

  <method id="gtk.method.paint_focus">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_focus</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Una forma rápida de dibujar una sombra para un rectangulo.
   </shortdesc>
   <desc>
    <simpara>
     La función <function>gtk::paint_focus</function> 
     dibuja una sombra a lo largo de la izquierda y parte de arriba,
     haciendolo parecer a un widget GTK cuando eta en foco.
    </simpara>
    <simpara>
    Esta es la unica funcion que usa el parametro <parameter>detail</parameter>;
     Si pasas <literal>'set-mode'</literal> como ese parametro, la sombra
     aparecera como punteada en vez de linea continua. 
     Cualquier otro string funciona como si seria <literal>null</literal>.
    </simpara>
    <simpara>
    
     Los otros paramtros de explican por si solos.  El parametro 
     <parameter>widget</parameter> se refiere a el widget en que esta siendo
     dibujado n (habitualmente  <classname>GtkDrawingArea</classname>).
    </simpara>
   </desc>
  </method>

  <method id="gtk.method.paint_handle">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_handle</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
     <paramdef>
      <enumname>GtkOrientation</enumname> 
      <parameter>orientation</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_hline">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_hline</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x1</parameter></paramdef>
     <paramdef>int <parameter>x2</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_option">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_option</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_oval">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_oval</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Not implemented.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_ramp">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_ramp</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>
      <enumname>GtkArrowType</enumname> 
      <parameter>arrow_type</parameter>
     </paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_shadow">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_shadow</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
      </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_shadow_gap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_shadow_gap</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
     <paramdef>
      <enumname>GtkPositionType</enumname> 
      <parameter>gap_side</parameter>
     </paramdef>
     <paramdef>int <parameter>gap_x</parameter></paramdef>
     <paramdef>int <parameter>gap_width</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_slider">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_slider</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
     <paramdef>
      <enumname>GtkOrientation</enumname> 
      <parameter>orientation</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_string">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_string</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_tab">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_tab</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkShadowType</enumname> 
      <parameter>shadow_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.paint_vline">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::paint_vline</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkWindow</classname> 
      <parameter>window</parameter>
     </paramdef>
     <paramdef>
      <enumname>GtkStateType</enumname> 
      <parameter>state_type</parameter>
     </paramdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
     <paramdef>string <parameter>detail</parameter></paramdef>
     <paramdef>int <parameter>y1</parameter></paramdef>
     <paramdef>int <parameter>y2</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_get_cmap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GdkColormap</classname> 
      <function>gtk::preview_get_cmap</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_get_visual">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GdkVisual</classname> 
      <function>gtk::preview_get_visual</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_reset">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::preview_reset</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_set_color_cube">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::preview_set_color_cube</function></funcdef>
     <paramdef>int <parameter>nred_shades</parameter></paramdef>
     <paramdef>int <parameter>ngreen_shades</parameter></paramdef>
     <paramdef>int <parameter>nblue_shades</parameter></paramdef>
     <paramdef>int <parameter>ngray_shades</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_set_gamma">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::preview_set_gamma</function></funcdef>
     <paramdef>double <parameter>gamma</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_set_install_cmap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::preview_set_install_cmap</function></funcdef>
     <paramdef>int <parameter>install_cmap</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.preview_set_reserved">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::preview_set_reserved</function></funcdef>
     <paramdef>int <parameter>nreserved</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.quit_add">
   <funcsynopsis>
    <funcprototype>
     <funcdef>XXX <function>gtk::quit_add</function></funcdef>
     <paramdef>XXX</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.quit_remove">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::quit_remove</function></funcdef>
     <paramdef>int <parameter>quit_handler_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_add_default_file">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::rc_add_default_file</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_find_module_in_path">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string 
      <function>gtk::rc_find_module_in_path</function>
     </funcdef>
     <paramdef>string <parameter>module_file</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_get_module_dir">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>gtk::rc_get_module_dir</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_get_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkStyle</classname> 
      <function>gtk::rc_get_style</function>
     </funcdef>
     <paramdef>
      <classname>GtkWidget</classname> 
      <parameter>widget</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_get_theme_dir">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>gtk::rc_get_theme_dir</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_load_image">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GdkPixmap</classname> 
      <function>gtk::rc_load_image</function>
     </funcdef>
     <paramdef>
      <classname>GdkColormap</classname> 
      <parameter>colormap</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkColor</classname> 
      <parameter>transparent_color</parameter>
     </paramdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_parse">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::rc_parse</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Parses an application's rc file(s).
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_parse_string">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::rc_parse_string</function></funcdef>
     <paramdef>string <parameter>rc_string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.rc_reparse_all">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>gtk::rc_reparse_all</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.timeout_add">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::timeout_add</function></funcdef>
     <paramdef>int <parameter>interval</parameter></paramdef>
     <paramdef>
      <literal>GtkFunction</literal> 
      <parameter>function</parameter>
     </paramdef>
     <paramdef>mixed 
      <parameter><optional>data</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Hace que una funcion pueda ser llamada a intervalos regulares.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.timeout_remove">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::timeout_remove</function></funcdef>
     <paramdef>int <parameter>timeout_handler_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Borra el timeout.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.true">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::true</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Devuelve true.
   </shortdesc>
   <desc>
    <simpara>
    Esta es una funcion estatica que simplemente devuelve <literal>1</literal>. 
    No tiene otra funcionalidad.
    </simpara>
   </desc>
  </method>

  <method id="gtk.method.type_from_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>gtk::type_from_name</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Devuelve el tipo de objeto desde el nombre del mismo.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.type_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>gtk::type_name</function></funcdef>
     <paramdef>int <parameter>type</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Devuelve el nombre del objeto.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.vbutton_box_get_layout_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <enumname>GtkButtonBoxStyle</enumname> 
      <function>gtk::vbutton_box_get_layout_default</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Devuelve la forma del <classname>GtkVButtonBox</classname> por defecto.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.vbutton_box_get_spacing_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int 
      <function>gtk::vbutton_box_get_spacing_default</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Devuelve el espacios por defecto de <classname>GtkVButtonBox</classname>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.vbutton_box_set_layout_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::vbutton_box_set_layout_default</function>
     </funcdef>
     <paramdef>
      <enumname>GtkButtonBoxStyle</enumname> 
      <parameter>layout</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Pone la forma del  <classname>GtkVButtonBox</classname> por defecto.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.vbutton_box_set_spacing_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::vbutton_box_set_spacing_default</function>
     </funcdef>
     <paramdef>int <parameter>spacing</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Pone el espaciado por defecto de <classname>GtkVButtonBox</classname>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_get_default_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GdkColormap</classname> 
      <function>gtk::widget_get_default_colormap</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Devuelve el <classname>GdkColormap</classname> por defecto de la aplicacion.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_get_default_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GtkStyle</classname> 
      <function>gtk::widget_get_default_style</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   Devuelve el <classname>GtkStyle</classname> por defecto de la aplicacion.
   </shortdesc>
   <desc>
    <simpara>
    Devuelve el  <classname>GtkStyle</classname> por defecto que esta actualmente
    siendo usado a traves de la aplicacion.
    </simpara>
    <simpara>
     Usa <function>gtk::widget_set_default_style</function> para cambiar los aspectos
     del estilo por defecto.
    </simpara>
   </desc>
  </method>

  <method id="gtk.method.widget_get_default_visual">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <classname>GdkVisual</classname> 
      <function>gtk::widget_get_default_visual</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Devuelve el <classname>GdkVisual</classname> por defecto de la aplicacion.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_pop_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::widget_pop_colormap</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_pop_composite_child">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
<function>gtk::widget_pop_composite_child</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_pop_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::widget_pop_style</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_pop_visual">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::widget_pop_visual</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_push_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::widget_push_colormap</function></funcdef>
     <paramdef>
      <classname>GdkColormap</classname> 
      <parameter>cmap</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_push_composite_child">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
<function>gtk::widget_push_composite_child</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_push_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::widget_push_style</function></funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_push_visual">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>gtk::widget_push_visual</function></funcdef>
     <paramdef>
      <classname>GdkVisual</classname> 
      <parameter>visual</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_set_default_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::widget_set_default_colormap</function>
     </funcdef>
     <paramdef>
      <classname>GdkColormap</classname> 
      <parameter>colormap</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Pone el <classname>GdkColormap</classname> como por defecto para la aplicacion.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_set_default_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::widget_set_default_style</function>
     </funcdef>
     <paramdef>
      <classname>GtkStyle</classname> 
      <parameter>style</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Pone el <classname>GtkStyle</classname> como por defecto para la aplicacion.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.method.widget_set_default_visual">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void 
      <function>gtk::widget_set_default_visual</function>
     </funcdef>
     <paramdef>
      <classname>GdkVisual</classname> 
      <parameter>visual</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Pone el <classname>GdkVisual</classname> como por defecto para la aplicacion.
   </shortdesc>
   <desc>

   </desc>
  </method>

</refentry>
