<?xml version="1.0" encoding="utf-8" ?>
<classentry id="gtk.gtkbutton">
 <classmeta>
  <classtitle>GtkButton</classtitle>
  <classparent>GtkBin</classparent>
  <classimage fileref="&directory.images;/reference/gtk/gtkbutton.png" frame="no"/>
  <shortdesc>
    A pushbutton widget that issues a signal when clicked.
  </shortdesc>
  <desc>
   <para>
    The <classname>GtkButton</classname> widget is usually displayed as a
    pushbutton with a text label, <classname>GtkLabel</classname>, although it
    can contain any valid widget. The <literal>GtkButton</literal> is generally
    used to attach a callback function or method that is called when the button
    is clicked.
    </para>
  </desc>
 </classmeta>

 <constructors>

  <constructor id="gtk.gtkbutton.constructor">
   <funcsynopsis>
    <funcprototype>
    <funcdef> <function>GtkButton</function></funcdef>
    <paramdef><enumname>string</enumname> <parameter>label</parameter></paramdef>
    <paramdef><enumname>boolean</enumname> <parameter>use_underline</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Creates a new button widget.
   </shortdesc>
   <desc>
    <para>
     Creates a new <classname>GtkButton</classname> widget, the content of
     which is dependant on the parameters <parameter>label</parameter> and
     <parameter>use_underline</parameter>. The default values are
     <literal>null</literal> and <literal>true</literal> respectively.
    </para>
    <para>
     <parameter>label</parameter> is the text to be displayed in the button.
     If you want to display anything other than a
     <classname>GtkLabel</classname> in the button, create the button without
     passing any parameters and add the widget at a later stage.
    </para>
    <para>
     <parameter>use_underline</parameter>, if <literal>true</literal>, means
     that an underscore in the label text will flag the next character as
     the mnemonic accelerator key, if it is the first character so marked. This
     is the default behaviour in PHP-GTK 2; you can switch it off by passing
     <literal>0</literal> or <literal>false</literal> as the second parameter.
    </para>
    <para>
     The mnemonic character is used as the keyboard accelerator for the button
     when pressed simultaneously with the <literal>Alt</literal> key.
    </para>
    <example>
     <title>A button example</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" 
                  href="&directory.examples;/reference/gtk/gtkbutton/gtkbutton.php" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
   </desc>
  </constructor>

  <constructor id="gtk.gtkbutton.constructor.new_from_stock">
   <funcsynopsis>
    <funcprototype>
    <funcdef> <function>GtkButton::new_from_stock</function></funcdef>
    <paramdef>string <parameter>stock_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
        Creates a <classname>GtkButton</classname> from stock.
   </shortdesc>
   <desc>
    <para>
     This method creates a new button with an image and label from stock. See
     <enumname>GtkStockItems</enumname> for a list of the options available.
    </para>
   </desc>
  </constructor>
 </constructors>

 <methods>

  <method id="gtk.gtkbutton.method.clicked">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>clicked</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emits the "clicked" signal to the button.
   </shortdesc>
   <desc>
    <para>
        The clicked() method emits the "clicked" signal to the button.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbutton.method.enter">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>enter</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emits the "enter" signal to the button.
   </shortdesc>
   <desc>
    <para>
        The enter() method emits the "enter" signal to the button.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbutton.method.get_alignment">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_alignment</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
        Returns the xalign and the yalign.
   </shortdesc>
   <desc>
    <para>
        The get_alignment() method returns the values of the "xalign" and "yalign" properties.
        See the <function class="GtkButton">set_alignment</function> method for more information.
    </para>
    <para>
     See also: 
     <function class="GtkButton">set_alignment</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkbutton.method.get_focus_on_click">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_focus_on_click</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
        Returns the value of the "focus-on-click" property.
   </shortdesc>
   <desc>
    <para>
        The get_focus_on_click() method returns the value of the "focus-on-click" property.
        If <literal>true</literal>, the button grabs focus when it is clicked by the mouse .
    </para>
    <para>
     See also: 
     <function class="GtkButton">set_focus_on_click</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkbutton.method.get_image">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkWidget <function>get_image</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkButton">set_image</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkbutton.method.get_label">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_label</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retrieves the text from the button label.
   </shortdesc>
   <desc>
    <para>
        The get_label() method retrieves the text from the label of the button, as set by
        <function class="GtkButton">set_label</function> or by the <classname>GtkButton</classname>
        constructor. This string is owned by the widget and must not be modified or freed.
        If the label text has not been set the return value will be null. This will be the
        case if you create an empty button with <classname>GtkButton</classname> to use as a container.
    </para>
    <para>
     See also: 
     <function class="GtkButton">set_label</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkbutton.method.get_relief">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkReliefStyle <function>get_relief</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retrieves the current relief style.
   </shortdesc>
   <desc>
    <para>
       The get_relief() method retrieves the current relief style (the "relief" property) set for the button.
    </para>
    <para>
     See also: 
     <function class="GtkButton">set_relief</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkbutton.method.get_use_stock">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_use_stock</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the value of the "use_stock" property.
   </shortdesc>
   <desc>
    <para>
        The get_use_stock() method returns the value of the "use_stock" property.
        If <literal>true</literal>, the button label is used to select a stock item instead of being used directly as the label text.
    </para>
    <para>
     See also: 
     <function class="GtkButton">set_use_stock</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkbutton.method.get_use_underline">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_use_underline</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns whether the "use_underline" property.
   </shortdesc>
   <desc>
    <para>
        The get_use_underline() method returns whether the "use_underline" property is <literal>true</literal> meaning
        that an underscore in the button label indicates a mnemonic.
    </para>
    <para>
     See also: 
     <function class="GtkButton">set_use_underline</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkbutton.method.leave">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>leave</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    The leave() method emits the "leave" signal to the button.
   </shortdesc>
   <desc>
    <para>
        The leave() method emits the "leave" signal to the button.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbutton.method.pressed">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pressed</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    The pressed method emits the "pressed" signal to the button.
   </shortdesc>
   <desc>
    <para>
        The pressed method emits the "pressed" signal to the button.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbutton.method.released">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>released</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    The released() method emits the "released" signal to the button.
   </shortdesc>
   <desc>
    <para>
        The released() method emits the "released" signal to the button.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbutton.method.set_alignment">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_alignment</function></funcdef>
     <paramdef>double <parameter>xalign</parameter></paramdef>
     <paramdef>double <parameter>yalign</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the "xalign" and "yalign" properties.
   </shortdesc>
   <desc>
    <para>
        The set_alignment() method sets the "xalign" and "yalign" properties to the value of
        xalign and yalign respectively. This property has no effect unless the child is a <classname>GtkMisc</classname>
        or a <classname>GtkAlignment</classname>.
    </para>
    <para>
     See also: 
     <function class="GtkButton">get_alignment</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkbutton.method.set_focus_on_click">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_focus_on_click</function></funcdef>
     <paramdef>bool <parameter>focus_on_click</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
        Sets the "focus-on-click" property.
   </shortdesc>
   <desc>
    <para>
        The set_focus_on_click() method sets the "focus-on-click" property to the value of
        focus_on_click. If focus_on_click is <literal>true</literal>, the button grabs focus when it is clicked by the mouse.
    </para>
    <para>
     See also: 
     <function class="GtkButton">get_focus_on_click</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkbutton.method.set_image">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_image</function></funcdef>
     <paramdef>GtkWidget <parameter>image</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkButton">get_image</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkbutton.method.set_label">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_label</function></funcdef>
     <paramdef>string <parameter>label</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
        Sets the text of the button label to label
   </shortdesc>
   <desc>
    <para>
        <literal>label </literal>: a string to be set as the text in the button label.
    </para>
    <para>
        The set_label() method sets the text of the button label to label
        (also sets the "label" property). This string is also used to select
        the stock item if the "use_stock" property is <literal>true</literal> and the string
        references a stock item. Any previously set labels will be cleared.
    </para>
    <para>
     See also: 
     <function class="GtkButton">get_label</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkbutton.method.set_relief">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_relief</function></funcdef>
     <paramdef>GtkReliefStyle <parameter>newstyle</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the relief style of the edges of the button.
   </shortdesc>
   <desc>
    <para>
        <literal>newstyle</literal> :one of Gtk::RELIEF_NONE, Gtk::RELIEF_NORMAL or Gtk::RELIEF_HALF
    </para>
    <para>
        The set_relief() method sets the relief style of the edges of the button.
        Three styles exist, Gtk::RELIEF_NORMAL, Gtk::RELIEF_HALF, Gtk::RELIEF_NONE.
        The default style is, as one can guess, Gtk::RELIEF_NORMAL.
    </para>
    <para>
     See also: 
     <function class="GtkButton">get_relief</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkbutton.method.set_use_stock">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_use_stock</function></funcdef>
     <paramdef>bool <parameter>use_stock</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the "use_stock" property to the value of use_stock.
   </shortdesc>
   <desc>
    <para>
        <literal>use_stock </literal> : If <literal>true</literal> the button should use a stock item.
    </para>
    <para>
        The set_use_stock() method sets the "use_stock" property to the value of use_stock.
        If use_stock is <literal>true</literal>, the label set on the button is used as a stock id to select the stock item for the button.
    </para>
    <para>
     See also: 
     <function class="GtkButton">get_use_stock</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkbutton.method.set_use_underline">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_use_underline</function></funcdef>
     <paramdef>bool <parameter>use_underline</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the "use_underline" property to the value of use_underline.
   </shortdesc>
   <desc>
    <para>
        <literal>use_underline</literal> : <literal>true</literal> if underscores in the text indicate mnemonics
    </para>
    <para>
        The set_use_underline() method sets the "use_underline" property to the value of
        use_underline. If use_underline is <literal>true</literal>, an underscore in the text of the button label
        indicates that the next character should be underlined and used for the mnemonic accelerator
        key if it is also the first underlined character.
    </para>
    <para>
     See also: 
     <function class="GtkButton">get_use_underline</function>
    </para>

   </desc>
  </method>

 </methods>

 <signals>

  <signal id="gtk.gtkbutton.signal.activate">
   <signalname>activate</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkButton <parameter>button</parameter></paramdef>
     <paramdef>mixed <parameter>user_param</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
       For a button it causes the "clicked" signal to be emitted.
   </shortdesc>
   <desc>
    <para>
        The "activate" signal is emitted when the <function class="GtkWidget">activate</function> method is called.
        For a button it causes the "clicked" signal to be emitted.
    </para>
    <para> <literal>button </literal>:	the button that received the signal </para>
    <para> <literal>user_param1 </literal>:	the first user parameter (if any) specified with the connect() method</para>
   </desc>
  </signal>
  
  <signal id="gtk.gtkbutton.signal.clicked">
   <signalname>clicked</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkButton <parameter>button</parameter></paramdef>
     <paramdef>mixed <parameter>user_param</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
       The "clicked" signal is emitted when the mouse button is pressed and released while the pointer is over the button.
   </shortdesc>
   <desc>
    <para>
        The "clicked" signal is emitted when the mouse button is pressed and released while the pointer is over the button.
    </para>
    <para> <literal>button </literal>:	the button that received the signal </para>
    <para> <literal>user_param1 </literal>:	the first user parameter (if any) specified with the connect() method</para>
   </desc>
  </signal>
  
  <signal id="gtk.gtkbutton.signal.enter">
   <signalname>enter</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkButton <parameter>button</parameter></paramdef>
     <paramdef>mixed <parameter>user_param</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
       The "enter" signal is emitted when the pointer enters the button.
   </shortdesc>
   <desc>
    <para>
        The "enter" signal is emitted when the pointer enters the button.
    </para>
    <para> <literal>button </literal>:	the button that received the signal </para>
    <para> <literal>user_param1 </literal>:	the first user parameter (if any) specified with the connect() method</para>
   </desc>
  </signal>
  
  <signal id="gtk.gtkbutton.signal.leave">
   <signalname>leave</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkButton <parameter>button</parameter></paramdef>
     <paramdef>mixed <parameter>user_param</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
       The "leave" signal is emitted when the pointer leaves the button.
   </shortdesc>
   <desc>
    <para>
        The "leave" signal is emitted when the pointer leaves the button.
    </para>
    <para> <literal>button </literal>:	the button that received the signal </para>
    <para> <literal>user_param1 </literal>:	the first user parameter (if any) specified with the connect() method</para>
   </desc>
  </signal>
  
  <signal id="gtk.gtkbutton.signal.pressed">
   <signalname>pressed</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkButton <parameter>button</parameter></paramdef>
     <paramdef>mixed <parameter>user_param</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
       The "pressed" signal is emitted when the mouse button is pressed while the pointer is over the button.
   </shortdesc>
   <desc>
    <para>
        The "pressed" signal is emitted when the mouse button is pressed while the pointer is over the button.
    </para>
    <para> <literal>button </literal>:	the button that received the signal </para>
    <para> <literal>user_param1 </literal>:	the first user parameter (if any) specified with the connect() method</para>
   </desc>
  </signal>
  
  <signal id="gtk.gtkbutton.signal.released">
   <signalname>released</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkButton <parameter>button</parameter></paramdef>
     <paramdef>mixed <parameter>user_param</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
       The "released" signal is emitted when the button is released no matter where the pointer is.
   </shortdesc>
   <desc>
    <para>
        The "released" signal is emitted when the button is released no matter where the pointer is.
    </para>
    <para> <literal>button </literal>: the button that received the signal </para>
    <para> <literal>user_param1 </literal>: the first user parameter (if any) specified with the connect() method</para>
   </desc>
  </signal>
  
 </signals>

</classentry>
