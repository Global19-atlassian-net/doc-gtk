<?xml version="1.0" encoding="utf-8" ?>
<classentry id="gtk.gtkcellrenderer">
 <classmeta>
  <classtitle>GtkCellRenderer</classtitle>
  <classparent>GtkObject</classparent>
  <shortdesc>
   Base class to display cell contents in a GtkTreeView.
  </shortdesc>
  <desc>
   <para>
    The GtkCellRenderer is a base class of a set of objects used for rendering
    a cell to a <classname>GdkDrawable</classname>. These objects are used
    primarily by the <classname>GtkTreeView</classname> widget, though they
    aren't tied to them in any specific way. It is worth noting that
    GtkCellRenderer is not a <classname>GtkWidget</classname> and cannot be
    treated as such.
   </para>
   <para>
    Beyond merely rendering a cell, cell renderers can optionally provide
    active user interface elements. A cell renderer can be
    <propname class="GtkCellRendererToggle">activatable</propname>
    like <classname>GtkCellRendererToggle</classname>, which toggles when it
     gets activated by a mouse click, or it can be
    <propname class="GtkCellRendererText">editable</propname> like
    <classname>GtkCellRendererText</classname>, which allows the user to edit
    the text using a <classname>GtkEntry</classname>.
   </para>
   <para>
    Changes of edited cells are not automatically saved in the model; this has
    to be done by hand: Connect to the
    <signalname class="GtkCellRendererText">edited</signalname> (text) or
    <signalname class="GtkCellRendererToggle">toggled</signalname> (toggle)
    signal and set the new values in the store.
   </para>

    <example>
     <title>Editable cell renderers</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" 
                  href="&directory.examples;/reference/gtk/gtktreeview/editable.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
  </desc>
 </classmeta>

 <methods>

  <method id="gtk.gtkcellrenderer.method.activate">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>activate</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkcellrenderer.method.editing_canceled">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>editing_canceled</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkcellrenderer.method.get_fixed_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_fixed_size</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkCellRenderer">set_fixed_size</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkcellrenderer.method.get_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_size</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkcellrenderer.method.render">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>render</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkcellrenderer.method.set_fixed_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_fixed_size</function></funcdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkCellRenderer">get_fixed_size</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkcellrenderer.method.start_editing">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>start_editing</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkCellRenderer">stop_editing</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkcellrenderer.method.stop_editing">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>stop_editing</function></funcdef>
     <paramdef>bool <parameter>canceled</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkCellRenderer">start_editing</function>
    </para>

   </desc>
  </method>

 </methods>

 <signals>

  <signal id="gtk.gtkcellrenderer.signal.editing-canceled">
   <signalname>editing-canceled</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkCellRenderer <parameter>cellrenderer</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtkcellrenderer.signal.editing-started">
   <signalname>editing-started</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkCellRenderer <parameter>cellrenderer</parameter></paramdef>
     <paramdef><!-- was: GtkCellEditable -->XXX <parameter>UNKNOWN</parameter></paramdef>
     <paramdef><!-- was: gchararray -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
 </signals>

</classentry>
