<?xml version="1.0" encoding="utf-8" ?>
<classentry id="gtk.gtkscrolledwindow">
 <classmeta>
  <classtitle>GtkScrolledWindow</classtitle>
  <classparent>GtkBin</classparent>
  <shortdesc>
   A container that shows all or part of its child within a scrollable
   window.
  </shortdesc>
  <desc>
   <para>
    <classname>GtkScrolledWindow</classname> is a <classname>GtkBin</classname>
    subclass: it's a container the accepts a single child widget.
    GtkScrolledWindow adds scrollbars to the child widget and optionally draws
    a beveled frame around the child widget.
   </para>
   <para>
    The scrolled window can work in two ways. Some widgets have native scrolling
    support; these widgets have "slots" for
    <classname>GtkAdjustment</classname> objects. Widgets with native scroll
    support include <classname>GtkTreeView</classname>,
    <classname>GtkTextView</classname>, and <classname>GtkLayout</classname>.
   </para>
   <para>
    For widgets that lack native scrolling support, the
    <classname>GtkViewport</classname> widget acts as an adaptor class,
    implementing scrollability for child widgets that lack their own scrolling
    capabilities. Use <classname>GtkViewport</classname> to scroll child
    widgets such as <classname>GtkTable</classname>,
    <classname>GtkBox</classname>, and so on.
   </para>
   <para>
    If a widget has native scrolling abilities, it can be added to the
    <classname>GtkScrolledWindow</classname> with
    <function class="GtkContainer">add</function>. If a widget does not,
    you must first add the widget to a <classname>GtkViewport</classname>,
    then add the <classname>GtkViewport</classname> to the scrolled window.
    The convenience function
    <function class="GtkScrolledWindow">add_with_viewport</function> does
    exactly this, so you can ignore the presence of the viewport.
   </para>
   <para>
    The position of the scrollbars is controlled by the scroll adjustments.
    See <classname>GtkAdjustment</classname> for the fields in an adjustment
     - for <classname>GtkScrollbar</classname>, used by
     <classname>GtkScrolledWindow</classname>, the
     <fieldname class="GtkAdjustment">value</fieldname> field represents the
     position of the scrollbar, which must be between the
     <fieldname class="GtkAdjustment">lower</fieldname> field and
     "<fieldname class="GtkAdjustment">upper</fieldname> -
      <fieldname class="GtkAdjustment">page_size</fieldname>".
     The <fieldname class="GtkAdjustment">page_size</fieldname> field
     represents the size of the visible scrollable area. The
     <fieldname class="GtkAdjustment">step_increment</fieldname> and
     <fieldname class="GtkAdjustment">page_increment</fieldname> fields are
     used when the user asks to step down (using the small stepper arrows)
     or page down (using for example the PageDown key).
    </para>
    <para>
     If a GtkScrolledWindow doesn't behave quite as you would like, or
     doesn't have exactly the right layout, it's very possible to set up your
     own scrolling with <classname>GtkScrollbar</classname> and for example a
     <classname>GtkTable</classname>.
   </para>
  </desc>
 </classmeta>

 <constructors>

  <constructor id="gtk.gtkscrolledwindow.constructor">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>GtkScrolledWindow</function></funcdef>
     <paramdef>
      <classname>GtkAdjustment</classname>
      <parameter><optional>hadjustment = null</optional></parameter>
     </paramdef>
     <paramdef>
      <classname>GtkAdjustment</classname>
      <parameter><optional>vadjustment = null</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Creates a new scrolled window.
   </shortdesc>
   <desc>
    <para>
     Creates a new scrolled window. The two arguments are the scrolled
     window's adjustments; these will be shared with the scrollbars and
     the child widget to keep the bars in sync with the child.
    </para>
    <para>
     Usually you want to pass <literal>null</literal> for the adjustments,
     which will cause the scrolled window to create them for you.
    </para>
   </desc>
  </constructor>

 </constructors>

 <methods>

  <method id="gtk.gtkscrolledwindow.method.add_with_viewport">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>add_with_viewport</function></funcdef>
     <paramdef>GtkWidget <parameter>child</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
   </desc>
  </method>

  <method id="gtk.gtkscrolledwindow.method.get_hadjustment">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkAdjustment <function>get_hadjustment</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkScrolledWindow">set_hadjustment</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkscrolledwindow.method.get_placement">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkCornerType <function>get_placement</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkScrolledWindow">set_placement</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkscrolledwindow.method.get_policy">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_policy</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkScrolledWindow">set_policy</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkscrolledwindow.method.get_shadow_type">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkShadowType <function>get_shadow_type</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkScrolledWindow">set_shadow_type</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkscrolledwindow.method.get_vadjustment">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkAdjustment <function>get_vadjustment</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkScrolledWindow">set_vadjustment</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkscrolledwindow.method.set_hadjustment">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_hadjustment</function></funcdef>
     <paramdef>GtkAdjustment <parameter>hadjustment</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkScrolledWindow">get_hadjustment</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkscrolledwindow.method.set_placement">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_placement</function></funcdef>
     <paramdef>GtkCornerType <parameter>window_placement</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkScrolledWindow">get_placement</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkscrolledwindow.method.set_policy">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_policy</function></funcdef>
     <paramdef>GtkPolicyType <parameter>hscrollbar_policy</parameter></paramdef>
     <paramdef>GtkPolicyType <parameter>vscrollbar_policy</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkScrolledWindow">get_policy</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkscrolledwindow.method.set_shadow_type">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_shadow_type</function></funcdef>
     <paramdef>GtkShadowType <parameter>type</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkScrolledWindow">get_shadow_type</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkscrolledwindow.method.set_vadjustment">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_vadjustment</function></funcdef>
     <paramdef>GtkAdjustment <parameter>hadjustment</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkScrolledWindow">get_vadjustment</function>
    </para>

   </desc>
  </method>

 </methods>

 <signals>

  <signal id="gtk.gtkscrolledwindow.signal.move-focus-out">
   <signalname>move-focus-out</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkScrolledWindow <parameter>scrolledwindow</parameter></paramdef>
     <paramdef>GtkDirectionType <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtkscrolledwindow.signal.scroll-child">
   <signalname>scroll-child</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkScrolledWindow <parameter>scrolledwindow</parameter></paramdef>
     <paramdef>GtkScrollType <parameter>UNKNOWN</parameter></paramdef>
     <paramdef>bool <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
 </signals>

</classentry>
