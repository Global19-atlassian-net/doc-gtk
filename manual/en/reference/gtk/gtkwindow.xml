<?xml version="1.0" encoding="utf-8" ?>
<classentry id="gtk.gtkwindow">
 <classmeta>
  <classtitle>GtkWindow</classtitle>
  <classparent>GtkBin</classparent>
  <shortdesc>
   A window which will likely contain the rest of the application.
  </shortdesc>
  <desc>
   <simpara>
    A window is the framework that contains the application. It 
    provides a context for the other widgets that make up the
    application. 
   </simpara>
   <simpara>
    As a subclass of <classname>GtkBin</classname> a window may
    only have one child. To add more widgets to a window first
    add a widget which can accept more than one child like a 
    <classname>GtkHBox</classname> or a <classname>GtkVBox</classname>.
    Then add the other widgets to the child container. Trying to 
    add more than one child will produce a warning.
   </simpara>
   <para>
    <example>
     <title>Adding too many children.</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" 
                  href="&directory.examples;/reference/gtk/gtkwindow/constructor.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
   </para>
   <simpara>
    <classname>GtkWindow</classname> is a top level widget. This 
    means that it may not be added as a child of another widget.
    Trying to do so will produce a Gtk-WARNING.
   </simpara>
  </desc>
 </classmeta>

 <constructors>

  <constructor id="gtk.gtkwindow.constructor">
   <funcsynopsis>
    <funcprototype>
    <funcdef> <function>GtkWindow</function></funcdef>
    <paramdef><enumname>GtkWindowType</enumname> <parameter><optional>type = GTK::WINDOW_TOPLEVEL</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Creates a new GtkWindow instance.
   </shortdesc>
   <desc>
    <para>
     Creates a new instance of GtkWindow of type <parameter>type</parameter>. 
     If no <parameter>type</parameter> is passed, the window will be created as
     a <enumname>Gtk::WINDOW_TOPLEVEL</enumname>. This means that the window 
     will have borders and a title bar by default. Windows of type
     <enumname>Gtk::WINDOW_POPUP</enumname> will not have borders or a title
     bar. Popup windows are used for things such as tooltips and menus. They 
     should not be used to create regular windows without borders. For that
     you should use a toplevel window and 
     <function class="GtkWindow">set_decorated</function>.
    </para>
   </desc>
  </constructor>

 </constructors>

 <methods>

  <method id="gtk.gtkwindow.method.activate_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>activate_default</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Send the activate signal to the default widget.
   </shortdesc>
   <desc>
    <para>
     Activates the window's default widget (e.g. sends the
     <signalname class="GtkButton">activate</signalname> signal to the widget).
     Returns <literal>true</literal> if the widget could be activated,
     <literal>false</literal> if not.
    </para>
    <note>
     <para>
      Before you can activate the default widget, you need to define it
      with <function class="GtkWindow">set_default</function>.
     </para>
    </note>
    <para>
     That is very useful if you don't know which widget the default one is
     (or don't care about that), but need to cause it to be clicked/activated.
     The example shows how this method is used to cause the default button to
     be activated when the user presses the <literal>Return</literal> key on
     the text entry widget.
    </para>
    <para>
     <example>
      <title>Activating the button with return key on entry</title>
      <programlisting role="php">
       <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" 
        href="&directory.examples;/reference/gtk/gtkwindow/activate_default.phpw" parse="text">
        <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
       </xi:include>
      </programlisting>
     </example>
    </para>
    <para>
     See also:
     <function class="GtkWindow">set_default</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.activate_focus">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>activate_focus</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Activates the widget with the focus.
   </shortdesc>
   <desc>
    <para>
     Activates the current focused widget within the window.
     Returns <literal>true</literal> if the widget got activated.
    </para>
    <para>
     See also:
     <function class="GtkWindow">get_focus</function>,
     <function class="GtkWindow">set_focus</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.activate_key">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>activate_key</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Activate a keyboard shortcut in the window by hand.
   </shortdesc>
   <desc>
    <para>
     Activates mnemonics and accelerators for this GtkWindow.
     This is normally called by the default key_press_event
     handler for toplevel windows, however in some cases it
     may be useful to call this directly when overriding
     the standard key handling for a toplevel window.
    </para>
    <para>
     Returns <literal>true</literal> if a mnemonic or accelerator 
     was found and activated.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.add_accel_group">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>add_accel_group</function></funcdef>
     <paramdef><classname>GtkAccelGroup</classname> <parameter>accel_group</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     Associate <parameter>accel_group</parameter> with the window, such
     that pressing shortcuts and mnemonics on the window will activate
     accelerators in <parameter>accel_group</parameter>.
    </para>
    <para>
     See also: 
     <function class="GtkWindow">remove_accel_group</function>
    </para>
   </desc>
  </method>
<!-- Doesn't exist any more
  <method id="gtk.gtkwindow.method.add_embedded_xid">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>add_embedded_xid</function></funcdef>
     <paramdef>int <parameter>xid</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">remove_embedded_xid</function>
    </para>

   </desc>
  </method>
-->

  <method id="gtk.gtkwindow.method.add_mnemonic">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>add_mnemonic</function></funcdef>
     <paramdef>int <parameter>keyval</parameter></paramdef>
     <paramdef><classname>GtkWidget</classname> <parameter>target</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds a mnemonic to the window.
   </shortdesc>
   <desc>
    <para>
     Adds a mnemonic to the window. Whenever the mnemonic key is pressed,
     the <parameter>target</parameter> widget will be activated.
    </para>
    <para>
     The <parameter>keyval</parameter> parameter is the ASCII number of the
     letter which shall cause the mnemonic to be activated. E.g. if you want
     <literal>Alt+K</literal> to activate a <literal>$button</literal>, the
     keyval would be 
     <programlisting role="php"><![CDATA[ord('K')]]></programlisting> that is
     value <literal>75</literal> in ASCII.
    </para>
    <note>
     <para>
      Before the window gets destroyed, you have to remove the mnemonic by
      hand if you don't want a warning to be thrown.
     </para>
    </note>
    <para>
     <example>
      <title>Adding a mnemonic by hand</title>
      <programlisting role="php">
       <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" 
        href="&directory.examples;/reference/gtk/gtkwindow/add_mnemonic.phpw" parse="text">
        <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
       </xi:include>
      </programlisting>
     </example>
    </para>
    <para>
     See also:
     <function class="GtkWindow">remove_mnemonic</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.begin_move_drag">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>begin_move_drag</function></funcdef>
     <paramdef>int <parameter>button</parameter></paramdef>
     <paramdef>int <parameter>root_x</parameter></paramdef>
     <paramdef>int <parameter>root_y</parameter></paramdef>
     <paramdef>int <parameter>timestamp</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.begin_resize_drag">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>begin_resize_drag</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.deiconify">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>deiconify</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Deiconifies (unminimizes) the window.
   </shortdesc>
   <desc>
    <simpara>
     Asks the window manager to deiconify (to un-minimize) the window.
    </simpara>
    <note>
     It may be that there are some settings preventing this, so don't depend
     on that it is really unminimized after calling this function.
     Normally it is, but don't write code that crashes if not.
    </note>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.fullscreen">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>fullscreen</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the window to fullscreen mode.
   </shortdesc>
   <desc>
    <simpara>
     Asks the window manager to set the window to fullscreen, taking
     all the available space. Note that other windows on the screen
     may still be above as long as the window is not activated.
     To be sure the window is really fullscreen, activate it.
    </simpara>
    <note>
     It may be that there are some settings preventing this, so don't depend
     on that it is really fullscreen after calling this function.
     Normally it is, but don't write code that crashes if not.
    </note>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_accept_focus">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_accept_focus</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    If the window wants to be focusable or not.
   </shortdesc>
   <desc>
    <para>
     Returns the value set with 
     <function class="GtkWindow">set_accept_focus</function>.
    </para>
    <para>
     See also:
     <function class="GtkWindow">set_accept_focus</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_decorated">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_decorated</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    If the window has a frame border.
   </shortdesc>
   <desc>
    <simpara>
     Tells you if the window has a border or is borderless.
    </simpara>
    <para>
     See also: 
     <function class="GtkWindow">set_decorated</function>, 
     <propname class="GtkWindow">decorated</propname>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_default_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef>array <function>get_default_size</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the window's default size.
   </shortdesc>
   <desc>
    <para>
     Gets the default size of the window. A value of <literal>-1</literal>
     for the width or height indicates that a default size has not been 
     explicitly set (with 
     <function class="GtkWindow">set_default_size</function>) for that 
     dimension, so the "natural" size of the window will be used.
    </para>
    <para>
     The first value of the returned array is the width, the second 
     is the height.
    </para>
    <para>
     See also:
     <function class="GtkWindow">set_default_size</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_destroy_with_parent">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_destroy_with_parent</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Whether the window will be destroyed with its transient parent.
   </shortdesc>
   <desc>
    <para>
     Returns whether the window will be destroyed with its transient parent.
    </para>
    <para>
     See also:
     <function class="GtkWindow">set_destroy_with_parent</function>, 
     <propname class="GtkWindow">destroy_with_parent</propname>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_focus">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkWidget</classname> <function>get_focus</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the widget that has the focus.
   </shortdesc>
   <desc>
    <para>
     Retrieves the current focused widget within the window. Returns
     <literal>NULL</literal> if no widget has the focus.
    </para>
    <note>
     <para>
      Note that this is the widget that would have the focus if the toplevel
      window focused; if the toplevel window is not focused then
      <programlisting role="php"><![CDATA[$widget->flags() & Gtk::HAS_FOCUS]]></programlisting>
      will not be <literal>&gt; 0</literal> for the widget.
     </para>
    </note>
    <para>
     <example>
      <title>Using GtkWindow::get_focus()</title>
      <programlisting role="php">
       <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" 
        href="&directory.examples;/reference/gtk/gtkwindow/get_focus.phpw" parse="text">
        <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
       </xi:include>
      </programlisting>
     </example>
    </para>
    <para>
     See also:
     <function class="GtkWindow">activate_focus</function>, 
     <function class="GtkWindow">set_focus</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_focus_on_map">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_focus_on_map</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    If window should receive the input focus when mapped.
   </shortdesc>
   <desc>
    <para>
     Gets the value set by
     <function class="GtkWindow">set_focus_on_map</function>.
    </para>
    <para>
     See also:
     <function class="GtkWindow">set_focus_on_map</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_frame_dimensions">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_frame_dimensions</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">set_frame_dimensions</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_gravity">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_gravity</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">set_gravity</function>, 
     <propname class="GtkWindow">gravity</propname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_has_frame">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_has_frame</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">set_has_frame</function>, 
     <propname class="GtkWindow">has_frame</propname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_icon">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_icon</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">set_icon</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_icon_list">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_icon_list</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">set_icon_list</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_icon_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_icon_name</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">set_icon_name</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_mnemonic_modifier">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_mnemonic_modifier</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">set_mnemonic_modifier</function>, 
     <propname class="GtkWindow">mnemonic_modifier</propname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_modal">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_modal</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    If the window is modal or not.
   </shortdesc>
   <desc>
    <simpara>
     Tells you if the window is modal.
    </simpara>
    <simpara>
     Modal windows prevent user interaction with other windows of the
     same application.
    </simpara>
    <para>
     See also: 
     <function class="GtkWindow">set_modal</function>, 
     <propname class="GtkWindow">modal</propname>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_position">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_position</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns nothing. This method should probably be removed from the
    documentation.
   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">set_position</function>, 
     <propname class="GtkWindow">position</propname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_resizable">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_resizable</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    If the window can be resized by the user.
   </shortdesc>
   <desc>
    <simpara>
     Tells you if the user may resize the window.
    </simpara>
    <para>
     See also: 
     <function class="GtkWindow">set_resizable</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_role">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_role</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">set_role</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_screen">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_screen</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">set_screen</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_size</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_skip_pager_hint">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_skip_pager_hint</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    If a pager shall display the window.
   </shortdesc>
   <desc>
    <simpara>
     Tells you if a pager shall display the window.
    </simpara>
    <para>
     See also:
     <function class="GtkWindow">set_skip_pager_hint</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_skip_taskbar_hint">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_skip_taskbar_hint</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    If the window shall be hidden from the task bar.
   </shortdesc>
   <desc>
    <simpara>
     Tells you if the window shall be hidden fron the task bar.
     Even if it's not shown in the task bar, it still may be shown
     in the window list when doing an <literal>ALT+TAB</literal>.
    </simpara>
    <para>
     See also: 
     <function class="GtkWindow">set_skip_taskbar_hint</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_title">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_title</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">set_title</function>, 
     <propname class="GtkWindow">title</propname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_transient_for">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkWindow <function>get_transient_for</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">set_transient_for</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.get_type_hint">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_type_hint</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">set_type_hint</function>, 
     <propname class="GtkWindow">type_hint</propname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.has_toplevel_focus">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>has_toplevel_focus</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.iconify">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>iconify</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Minimizes the window.
   </shortdesc>
   <desc>
    <simpara>
     Minimizes (iconifies) the window.
    </simpara>
    <note>
     It may be that there are some settings preventing this, so don't depend
     on that it is really minimized after calling this function.
     Normally it is, but don't write code that crashes if not.
    </note>
    <para>
     See:
     <function class="GtkWindow">deiconify</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.is_active">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>is_active</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.maximize">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>maximize</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Maximizes the window.
   </shortdesc>
   <desc>
    <simpara>
     Tells the window manager to maximize the window. If it's maximized,
     it takes all the available space which is not occupied by extra windows
     like e.g. the task bar.
    </simpara>
    <note>
     It may be that there are some settings preventing this, so don't depend
     on that it is really fullscreen after calling this function.
     Normally it is, but don't write code that crashes if not.
    </note>
    <para>
     See: <function class="GtkWindow">unmaximize</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.mnemonic_activate">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>mnemonic_activate</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.move">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>move</function></funcdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.parse_geometry">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>parse_geometry</function></funcdef>
     <paramdef>string <parameter>geometry</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.present">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>present</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Shows the window to the user.
   </shortdesc>
   <desc>
    <simpara>
     Activates and shows the window to the user. If it was hidden, it's shown. If 
     the window has been overlapped by other windows, it will be raised
     to the top. If it was minimized, it will be unminimized.
    </simpara>
    <simpara>
     The method is useful to show a window which already exists, e.g. when
     there is a "Show preferences" menu item in your application, but the
     preferences dialog is already open, but hidden somewhere. In that case
     you should use this function.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.propagate_key_event">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>propagate_key_event</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.remove_accel_group">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_accel_group</function></funcdef>
     <paramdef>GtkAccelGroup <parameter>accel_group</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">add_accel_group</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.remove_embedded_xid">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_embedded_xid</function></funcdef>
     <paramdef>int <parameter>xid</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">add_embedded_xid</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.remove_mnemonic">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_mnemonic</function></funcdef>
     <paramdef>int <parameter>keyval</parameter></paramdef>
     <paramdef>GtkWidget <parameter>target</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">add_mnemonic</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.reshow_with_initial_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>reshow_with_initial_size</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.resize">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>resize</function></funcdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_accept_focus">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_accept_focus</function></funcdef>
     <paramdef>bool <parameter>setting</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_accept_focus</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_auto_startup_notification">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_auto_startup_notification</function></funcdef>
     <paramdef>bool <parameter>setting</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_decorated">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_decorated</function></funcdef>
     <paramdef>bool <parameter>setting</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Turns the borders and title bar for the window on/off.
   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_decorated</function>, 
     <propname class="GtkWindow">decorated</propname>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_default</function></funcdef>
     <paramdef>GtkWidget <parameter>default_widget</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">activate_default</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_default_icon">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_default_icon</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_default_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_default_size</function></funcdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_default_size</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_destroy_with_parent">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_destroy_with_parent</function></funcdef>
     <paramdef>bool <parameter>setting</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_destroy_with_parent</function>, 
     <propname class="GtkWindow">destroy_with_parent</propname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_focus">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_focus</function></funcdef>
     <paramdef>GtkWidget <parameter>focus</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">activate_focus</function>, 
     <function class="GtkWindow">get_focus</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_focus_on_map">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_focus_on_map</function></funcdef>
     <paramdef>bool <parameter>setting</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_focus_on_map</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_frame_dimensions">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_frame_dimensions</function></funcdef>
     <paramdef>int <parameter>left</parameter></paramdef>
     <paramdef>int <parameter>top</parameter></paramdef>
     <paramdef>int <parameter>right</parameter></paramdef>
     <paramdef>int <parameter>bottom</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_frame_dimensions</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_geometry_hints">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_geometry_hints</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_gravity">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_gravity</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_gravity</function>, 
     <propname class="GtkWindow">gravity</propname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_has_frame">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_has_frame</function></funcdef>
     <paramdef>bool <parameter>setting</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_has_frame</function>, 
     <propname class="GtkWindow">has_frame</propname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_icon">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_icon</function></funcdef>
     <paramdef><optional>GdkPixbuf <parameter>icon</parameter></optional></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_icon</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_icon_from_file">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_icon_from_file</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>GError <parameter>error</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_icon_list">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_icon_list</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_icon_list</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_icon_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_icon_name</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_icon_name</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_keep_above">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_keep_above</function></funcdef>
     <paramdef>bool <parameter>setting</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Forces the window to remain on top of other windows on the screen.
   </shortdesc>
   <desc>
    <simpara>
     Tells the window manager to keep the window above all other windows.
    </simpara>
    <note>
     It may be that there are some settings preventing this, so don't depend
     on that it is really above every other window after calling this function.
     Normally it is, but don't write code that crashes if not.
    </note>
    <simpara>
     See also: 
     <function class="GtkWindow">set_keep_below</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_keep_below">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_keep_below</function></funcdef>
     <paramdef>bool <parameter>setting</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Forces the window to remain beneath other windows on the screen.
   </shortdesc>
   <desc>
    <simpara>
     Tells the window manager to keep the window below all other windows.
    </simpara>
    <note>
     It may be that there are some settings preventing this, so don't depend
     on that it is really below all other windows after calling this function.
     Normally it is, but don't write code that crashes if not.
    </note>
    <simpara>
     See also: 
     <function class="GtkWindow">set_keep_above</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_mnemonic_modifier">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_mnemonic_modifier</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_mnemonic_modifier</function>, 
     <propname class="GtkWindow">mnemonic_modifier</propname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_modal">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_modal</function></funcdef>
     <paramdef>bool <parameter>modal</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the window modal.
   </shortdesc>
   <desc>
    <simpara>
     Sets the window modal, preventing user interaction with any other
     window of the same application.
    </simpara>
    <simpara>
     A window should be set modal if it requires user interaction before
     the rest of the application can continue, e.g. a message box.
    </simpara>
    <para>
     See also: 
     <function class="GtkWindow">get_modal</function>, 
     <propname class="GtkWindow">modal</propname>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_policy">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_policy</function></funcdef>
     <paramdef>int <parameter>allow_shrink</parameter></paramdef>
     <paramdef>int <parameter>allow_grow</parameter></paramdef>
     <paramdef>int <parameter>auto_shrink</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_position">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_position</function></funcdef>
     <paramdef>GtkWindowPosition <parameter>position</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_position</function>, 
     <propname class="GtkWindow">position</propname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_resizable">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_resizable</function></funcdef>
     <paramdef>bool <parameter>resizable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets if the window may be resized by the user.
   </shortdesc>
   <desc>
    <simpara>
     Sets if the user may resize window or not.
    </simpara>
    <para>
     See also: 
     <function class="GtkWindow">get_resizable</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_role">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_role</function></funcdef>
     <paramdef>string <parameter>role</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_role</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_screen">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_screen</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_screen</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_skip_pager_hint">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_skip_pager_hint</function></funcdef>
     <paramdef>bool <parameter>setting</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Hide the window from the pager or not.
   </shortdesc>
   <desc>
    <simpara>
     If the window shall <emphasis>not</emphasis> be shown in the pager.
    </simpara>
    <note>
     <simpara>
      A pager is a program showing the contents (windows) of each virtual
      desktop, in small scale, to help the user get an overview of all
      the desktops and its open applications.
     </simpara>
     <simpara>
      Users of Microsoft Windows rarely have multiple desktops and probably
      don't care about this setting.
     </simpara>
    </note>
    <para>
     See also: 
     <function class="GtkWindow">get_skip_pager_hint</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_skip_taskbar_hint">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_skip_taskbar_hint</function></funcdef>
     <paramdef>bool <parameter>setting</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set that the window shall be hidden from the task bar.
   </shortdesc>
   <desc>
    <simpara>
     If the window shall <emphasis>not</emphasis> be shown in the task
     bar. Note that even though the window is not shown in the task bar,
     it still may be visible in the window list when <literal>ALT+TAB</literal>ing
     through the windows.
    </simpara>
    <para>
     See also: 
     <function class="GtkWindow">get_skip_taskbar_hint</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_title">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_title</function></funcdef>
     <paramdef>string <parameter>title</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the window title
   </shortdesc>
   <desc>
    <simpara>
     Sets the window title.
    </simpara>
    <para>
     See also: 
     <function class="GtkWindow">get_title</function>, 
     <propname class="GtkWindow">title</propname>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_transient_for">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_transient_for</function></funcdef>
     <paramdef>GtkWindow <parameter>parent</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_transient_for</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_type_hint">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_type_hint</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_type_hint</function>, 
     <propname class="GtkWindow">type_hint</propname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.set_wmclass">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_wmclass</function></funcdef>
     <paramdef>string <parameter>wmclass_name</parameter></paramdef>
     <paramdef>string <parameter>wmclass_class</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.stick">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>stick</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Show the window on all desktops.
   </shortdesc>
   <desc>
    <simpara>
     Shows the window on all (virtual) desktops.
    </simpara>
    <para>
     See: <function class="GtkWindow">unstick</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.tooltips_get_info_from_tip_window">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>tooltips_get_info_from_tip_window</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwindow.method.unfullscreen">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>unfullscreen</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the window to its original size and location.
   </shortdesc>
   <desc>
    <simpara>
     If the window has been set to be fullscreen, it's returned
     to its original size and location.
    </simpara>
    <para>
     See: <function class="GtkWindow">fullscreen</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.unmaximize">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>unmaximize</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the window to its original size and location.
   </shortdesc>
   <desc>
    <simpara>
     If the window has been set to be maximized, it's returned
     to its original size and location.
    </simpara>
    <para>
     See: <function class="GtkWindow">maximize</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwindow.method.unstick">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>unstick</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Don't show the window on all desktops.
   </shortdesc>
   <desc>
    <simpara>
     Don't show the window on all (virtual) desktops.
    </simpara>
    <para>
     See: <function class="GtkWindow">stick</function>
    </para>
   </desc>
  </method>

 </methods>

 <properties>

  <property id="gtk.gtkwindow.property.allow_grow" type="ro">
   <propname>allow_grow</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.allow_shrink" type="ro">
   <propname>allow_shrink</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.configure_notify_received" type="ro">
   <propname>configure_notify_received</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.configure_request_count" type="ro">
   <propname>configure_request_count</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.decorated" type="ro">
   <propname>decorated</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_decorated</function>, 
     <function class="GtkWindow">set_decorated</function>
    </para>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.default_widget" type="ro">
   <propname>default_widget</propname>
   <proptype>GtkWidget</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.destroy_with_parent" type="ro">
   <propname>destroy_with_parent</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_destroy_with_parent</function>, 
     <function class="GtkWindow">set_destroy_with_parent</function>
    </para>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.focus_widget" type="ro">
   <propname>focus_widget</propname>
   <proptype>GtkWidget</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.frame" type="ro">
   <propname>frame</propname>
   <proptype></proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.frame_bottom" type="ro">
   <propname>frame_bottom</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.frame_left" type="ro">
   <propname>frame_left</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.frame_right" type="ro">
   <propname>frame_right</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.frame_top" type="ro">
   <propname>frame_top</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.gravity" type="ro">
   <propname>gravity</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_gravity</function>, 
     <function class="GtkWindow">set_gravity</function>
    </para>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.group" type="ro">
   <propname>group</propname>
   <proptype>GtkWindowGroup</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.has_focus" type="ro">
   <propname>has_focus</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.has_frame" type="ro">
   <propname>has_frame</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_has_frame</function>, 
     <function class="GtkWindow">set_has_frame</function>
    </para>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.has_user_ref_count" type="ro">
   <propname>has_user_ref_count</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.iconify_initially" type="ro">
   <propname>iconify_initially</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.keys_changed_handler" type="ro">
   <propname>keys_changed_handler</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.maximize_initially" type="ro">
   <propname>maximize_initially</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.mnemonic_modifier" type="ro">
   <propname>mnemonic_modifier</propname>
   <proptype></proptype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_mnemonic_modifier</function>, 
     <function class="GtkWindow">set_mnemonic_modifier</function>
    </para>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.modal" type="ro">
   <propname>modal</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_modal</function>, 
     <function class="GtkWindow">set_modal</function>
    </para>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.need_default_position" type="ro">
   <propname>need_default_position</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.need_default_size" type="ro">
   <propname>need_default_size</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.position" type="ro">
   <propname>position</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_position</function>, 
     <function class="GtkWindow">set_position</function>
    </para>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.stick_initially" type="ro">
   <propname>stick_initially</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.title" type="ro">
   <propname>title</propname>
   <proptype>string</proptype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_title</function>, 
     <function class="GtkWindow">set_title</function>
    </para>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.transient_parent" type="ro">
   <propname>transient_parent</propname>
   <proptype>GtkWindow</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.type" type="ro">
   <propname>type</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.type_hint" type="ro">
   <propname>type_hint</propname>
   <proptype>int</proptype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     See also: 
     <function class="GtkWindow">get_type_hint</function>, 
     <function class="GtkWindow">set_type_hint</function>
    </para>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.wm_role" type="ro">
   <propname>wm_role</propname>
   <proptype>string</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.wmclass_class" type="ro">
   <propname>wmclass_class</propname>
   <proptype>string</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

  <property id="gtk.gtkwindow.property.wmclass_name" type="ro">
   <propname>wmclass_name</propname>
   <proptype>string</proptype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </property>

 </properties>

 <signals>

  <signal id="gtk.gtkwindow.signal.activate-default">
   <signalname>activate-default</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWindow <parameter>window</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtkwindow.signal.activate-focus">
   <signalname>activate-focus</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWindow <parameter>window</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtkwindow.signal.frame-event">
   <signalname>frame-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWindow <parameter>window</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtkwindow.signal.keys-changed">
   <signalname>keys-changed</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWindow <parameter>window</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtkwindow.signal.move-focus">
   <signalname>move-focus</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWindow <parameter>window</parameter></paramdef>
     <paramdef>GtkDirectionType <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtkwindow.signal.set-focus">
   <signalname>set-focus</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWindow <parameter>window</parameter></paramdef>
     <paramdef>GtkWidget <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
 </signals>

</classentry>
