<?xml version="1.0" encoding="utf-8"?>
<classentry id="gdk.gdkpixbuf">
 <classmeta>
  <classtitle>GdkPixbuf</classtitle>
  <classparent>GObject</classparent>
  <shortdesc>
   An object holding information about images in memory.
  </shortdesc>
  <desc>
   <para>
    A GdkPixbuf is an object that holds information about a whole image
    (all the color values [red/green/blue/alpha] for every single pixel)
    in memory.
   </para>
   <para>
    Pixbufs can be created by loading an image file via
    <link linkend="gdk.gdkpixbuf.constructor.new_from_file">GdkPixbuf::new_from_file</link>,
    by using a given GD image object as source
    (<link linkend="gdk.gdkpixbuf.constructor.new_from_file">GdkPixbuf::new_from_gd</link>)
    or just using the normal constructor, creating an empty image.
   </para>
   <para>
    A GdkPixbuf itself just <emphasis>contains</emphasis> the information, it does
    <emphasis>not</emphasis> display it in any way. To display an image in your application,
    you most likely want to use a <classname>GtkImage</classname> which uses a
    GdkPixbuf as source.
   </para>
  </desc>
 </classmeta>

 <constructors>

  <constructor id="gdk.gdkpixbuf.constructor">
   <funcsynopsis>
    <funcprototype>
    <funcdef> <function>GdkPixbuf</function></funcdef>
    <paramdef><enumname>GdkColorspace</enumname> <parameter>colorspace</parameter></paramdef>
    <paramdef>bool </paramdef>
    <paramdef>int <parameter>bits_per_sample</parameter></paramdef>
    <paramdef>int <parameter>width</parameter></paramdef>
    <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Creates an empty image with the desired size.
   </shortdesc>
   <desc>
    <para>
     Creates an empty image with the desired size.
    </para>
    <para>
     The <parameter>colorspace</parameter> parameter is always
     <enumname>Gdk::COLORSPACE_RGB</enumname> as Gtk itself doesn't
     support any other. <parameter>has_alpha</parameter> defines
     it the image has opacity (transparency) information for each pixel.
    </para>
    <para>
     <parameter>bits_per_sample</parameter> is the number of bits reserved
     for each color sample (red/green/blue/alpha). This is normally 8.
    </para>
    <para>
     Most times you don't want to create an image yourself but use an
     one existing in a file - use
     <link linkend="gdk.gdkpixbuf.constructor.new_from_file">GdkPixbuf::new_from_file</link>
     then.
    </para>
   </desc>
  </constructor>

  <constructor id="gdk.gdkpixbuf.constructor.new_from_file">
   <funcsynopsis>
    <funcprototype>
     <funcdef><function>GdkPixbuf::new_from_file</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Creates a pixbuf based on an image file.
   </shortdesc>
   <desc>
    <para>
     This constructor creates a <classname>GdkPixbuf</classname>
     object filled with the image information available in
     <parameter>filename</parameter>. If an error occurs (e.g. file doesn't
     exist), an exceptionof type <literal>PhpGtkGErrorException</literal>
     is thrown.
    </para>
    <para>
     Gdk supports loading a number of image formats, including
     <literal>.jpg</literal>, <literal>.png</literal>
     and <literal>.gif</literal>. On Windows, you need a 
     dll for each file type in the <filename>pixbufloaders/</filename>
     folder of your Gtk installation, e.g.
     <filename>libpixbufloader-png.dll</filename> or
     <filename>libpixbufloader-jpeg.dll</filename>.
    </para>
    <example>
     <title>Loading an image file and catching errors</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" 
                  href="&directory.examples;/reference/gdk/gdkpixbuf/new_from_file.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
   </desc>
  </constructor>

  <constructor id="gdk.gdkpixbuf.constructor.new_from_file_at_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef><function>GdkPixbuf::new_from_file_at_size</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Load an image file and scales it to the given size.
   </shortdesc>
   <desc>
    <para>
     Loads the given image into the pixbuf object and scales it to the given
     size, respecting the aspect ratio. If an error occurs, an exception of type
     <literal>PhpGtkGErrorException</literal> is thrown.
    </para>
    <example>
     <title>Loading and scaling an image file</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" 
                  href="&directory.examples;/reference/gdk/gdkpixbuf/new_from_file_at_size.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
   </desc>
  </constructor>

  <constructor id="gdk.gdkpixbuf.constructor.new_from_xpm_data">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>GdkPixbuf::new_from_xpm_data</function></funcdef>
     
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </constructor>

  <constructor id="gdk.gdkpixbuf.constructor.new_from_gd">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>GdkPixbuf::new_from_gd</function></funcdef>
     <paramdef> <parameter>gd_image</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </constructor>

 </constructors>

 <methods>

  <method id="gdk.gdkpixbuf.method.add_alpha">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GdkPixbuf <function>add_alpha</function></funcdef>
     <paramdef>bool <parameter>substitute_color</parameter></paramdef>
     <paramdef>char <parameter>r</parameter></paramdef>
     <paramdef>char <parameter>g</parameter></paramdef>
     <paramdef>char <parameter>b</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.composite">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>composite</function></funcdef>
     <paramdef>GdkPixbuf <parameter>dest</parameter></paramdef>
     <paramdef>int <parameter>dest_x</parameter></paramdef>
     <paramdef>int <parameter>dest_y</parameter></paramdef>
     <paramdef>int <parameter>dest_width</parameter></paramdef>
     <paramdef>int <parameter>dest_height</parameter></paramdef>
     <paramdef>double <parameter>offset_x</parameter></paramdef>
     <paramdef>double <parameter>offset_y</parameter></paramdef>
     <paramdef>double <parameter>scale_x</parameter></paramdef>
     <paramdef>double <parameter>scale_y</parameter></paramdef>
     <paramdef>GdkInterpType <parameter>interp_type</parameter></paramdef>
     <paramdef>int <parameter>overall_alpha</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.composite_color">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>composite_color</function></funcdef>
     <paramdef>GdkPixbuf <parameter>dest</parameter></paramdef>
     <paramdef>int <parameter>dest_x</parameter></paramdef>
     <paramdef>int <parameter>dest_y</parameter></paramdef>
     <paramdef>int <parameter>dest_width</parameter></paramdef>
     <paramdef>int <parameter>dest_height</parameter></paramdef>
     <paramdef>double <parameter>offset_x</parameter></paramdef>
     <paramdef>double <parameter>offset_y</parameter></paramdef>
     <paramdef>double <parameter>scale_x</parameter></paramdef>
     <paramdef>double <parameter>scale_y</parameter></paramdef>
     <paramdef>GdkInterpType <parameter>interp_type</parameter></paramdef>
     <paramdef>int <parameter>overall_alpha</parameter></paramdef>
     <paramdef>int <parameter>check_x</parameter></paramdef>
     <paramdef>int <parameter>check_y</parameter></paramdef>
     <paramdef>int <parameter>check_size</parameter></paramdef>
     <paramdef>int <parameter>color1</parameter></paramdef>
     <paramdef>int <parameter>color2</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.composite_color_simple">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GdkPixbuf <function>composite_color_simple</function></funcdef>
     <paramdef>int <parameter>dest_width</parameter></paramdef>
     <paramdef>int <parameter>dest_height</parameter></paramdef>
     <paramdef>GdkInterpType <parameter>interp_type</parameter></paramdef>
     <paramdef>int <parameter>overall_alpha</parameter></paramdef>
     <paramdef>int <parameter>check_size</parameter></paramdef>
     <paramdef>int <parameter>color1</parameter></paramdef>
     <paramdef>int <parameter>color2</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.copy">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GdkPixbuf <function>copy</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.copy_area">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>copy_area</function></funcdef>
     <paramdef>int <parameter>src_x</parameter></paramdef>
     <paramdef>int <parameter>src_y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
     <paramdef>GdkPixbuf <parameter>dest_pixbuf</parameter></paramdef>
     <paramdef>int <parameter>dest_x</parameter></paramdef>
     <paramdef>int <parameter>dest_y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.fill">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>fill</function></funcdef>
     <paramdef>int <parameter>pixel</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.fill_area">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>fill_area</function></funcdef>
     
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.get_bits_per_sample">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_bits_per_sample</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.get_colorspace">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GdkColorspace <function>get_colorspace</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.get_from_drawable">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GdkPixbuf <function>get_from_drawable</function></funcdef>
     <paramdef>GdkWindow <parameter>src</parameter></paramdef>
     <paramdef>GdkColormap <parameter>cmap</parameter></paramdef>
     <paramdef>int <parameter>src_x</parameter></paramdef>
     <paramdef>int <parameter>src_y</parameter></paramdef>
     <paramdef>int <parameter>dest_x</parameter></paramdef>
     <paramdef>int <parameter>dest_y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.get_from_image">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GdkPixbuf <function>get_from_image</function></funcdef>
     <paramdef>GdkImage <parameter>src</parameter></paramdef>
     <paramdef>GdkColormap <parameter>cmap</parameter></paramdef>
     <paramdef>int <parameter>src_x</parameter></paramdef>
     <paramdef>int <parameter>src_y</parameter></paramdef>
     <paramdef>int <parameter>dest_x</parameter></paramdef>
     <paramdef>int <parameter>dest_y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.get_has_alpha">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_has_alpha</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.get_height">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_height</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the height of the image.
   </shortdesc>
   <desc>
    <para>
     Returns the height of the image in pixels.
    </para>
   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.get_n_channels">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_n_channels</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.get_option">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_option</function></funcdef>
     <paramdef>string <parameter>key</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.get_pixel">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_pixel</function></funcdef>
     
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.get_pixels">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_pixels</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.get_rowstride">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_rowstride</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.get_width">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_width</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the width of the image.
   </shortdesc>
   <desc>
    <para>
     Returns the width of the image in pixels.
    </para>
   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.put_pixel">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>put_pixel</function></funcdef>
     
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.render_pixmap_and_mask">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>render_pixmap_and_mask</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.render_to_drawable">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>render_to_drawable</function></funcdef>
     <paramdef>GdkWindow <parameter>drawable</parameter></paramdef>
     <paramdef>GdkGC <parameter>gc</parameter></paramdef>
     <paramdef>int <parameter>src_x</parameter></paramdef>
     <paramdef>int <parameter>src_y</parameter></paramdef>
     <paramdef>int <parameter>dest_x</parameter></paramdef>
     <paramdef>int <parameter>dest_y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
     <paramdef>GdkRgbDither <parameter><optional>dither = GDK_RGB_DITHER_NORMAL</optional></parameter></paramdef>
     <paramdef>int <parameter><optional>x_dither = GDK_RGB_DITHER_NORMAL</optional></parameter></paramdef>
     <paramdef>int <parameter><optional>y_dither = GDK_RGB_DITHER_NORMAL</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.render_to_drawable_alpha">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>render_to_drawable_alpha</function></funcdef>
     <paramdef>GdkWindow <parameter>drawable</parameter></paramdef>
     <paramdef>int <parameter>src_x</parameter></paramdef>
     <paramdef>int <parameter>src_y</parameter></paramdef>
     <paramdef>int <parameter>dest_x</parameter></paramdef>
     <paramdef>int <parameter>dest_y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
     <paramdef>GdkPixbufAlphaMode <parameter>alpha_mode</parameter></paramdef>
     <paramdef>int <parameter>alpha_threshold</parameter></paramdef>
     <paramdef>GdkRgbDither <parameter><optional>dither = GDK_RGB_DITHER_NORMAL</optional></parameter></paramdef>
     <paramdef>int <parameter><optional>x_dither = GDK_RGB_DITHER_NORMAL</optional></parameter></paramdef>
     <paramdef>int <parameter><optional>y_dither = GDK_RGB_DITHER_NORMAL</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.saturate_and_pixelate">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>saturate_and_pixelate</function></funcdef>
     <paramdef>GdkPixbuf <parameter>dest</parameter></paramdef>
     <paramdef>double <parameter>saturation</parameter></paramdef>
     <paramdef>bool <parameter>pixelate</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.save">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>save</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.scale">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>scale</function></funcdef>
     <paramdef>GdkPixbuf <parameter>dest</parameter></paramdef>
     <paramdef>int <parameter>dest_x</parameter></paramdef>
     <paramdef>int <parameter>dest_y</parameter></paramdef>
     <paramdef>int <parameter>dest_width</parameter></paramdef>
     <paramdef>int <parameter>dest_height</parameter></paramdef>
     <paramdef>double <parameter>offset_x</parameter></paramdef>
     <paramdef>double <parameter>offset_y</parameter></paramdef>
     <paramdef>double <parameter>scale_x</parameter></paramdef>
     <paramdef>double <parameter>scale_y</parameter></paramdef>
     <paramdef>GdkInterpType <parameter>interp_type</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.scale_simple">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GdkPixbuf</classname> <function>scale_simple</function></funcdef>
     <paramdef>int <parameter>dest_width</parameter></paramdef>
     <paramdef>int <parameter>dest_height</parameter></paramdef>
     <paramdef><enumname>GdkInterpType</enumname> <parameter>interp_type</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Scales the image to a given size.
   </shortdesc>
   <desc>
    <para>
     Creates a new pixbuf by scaling the current one to the given size,
     respecting the aspect ratio.
    </para>
    <para>
     The <parameter>interp_type</parameter> parameter defines which
     scaling algorithm is used. Generally, the higher the quality is,
     the longer it takes to scale.
    </para>
   </desc>
  </method>

  <method id="gdk.gdkpixbuf.method.subpixbuf">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GdkPixbuf <function>subpixbuf</function></funcdef>
     <paramdef>int <parameter>src_x</parameter></paramdef>
     <paramdef>int <parameter>src_y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  </methods>

 <fields>

  <field id="gdk.gdkpixbuf.field.pixel_array" type="ro">
   <fieldname>pixel_array</fieldname>
   <fieldtype>string</fieldtype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </field>

 </fields>

</classentry>
